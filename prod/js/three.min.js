!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).THREE={})}(this,function(e){"use strict";const t="139";const q=0,Y=1,J=2;const A=1,R=3,Pe=0,De=1,Ie=2;const Z=0,K=1,Q=2,$=3,ee=4,te=5,re=100,ne=101,ie=102,ae=103,se=104,oe=200,le=201,he=202,ce=203,ue=204,de=205,pe=206,me=207,fe=208,ge=209,ve=210,ye=0,_e=1,xe=2,Me=3,be=4,we=5,Ee=6,Se=7,Ne=0,w=301,E=302,l=303,h=304,U=306,k=1e3,W=1001,j=1002,X=1003,Te=1004;const Ae=1005;const Ue=1006,Oe=1007;const Fe=1008;const Be=1009,s=1010,o=1011,He=1012,c=1013,ze=1014,Ge=1015,Ve=1016,u=1017,d=1018,ke=1020,p=1021,m=1022,We=1023,f=1024,g=1025,je=1026,Xe=1027,v=1028,y=1029,_=1030,S=1031,C=1033,L=33776,P=33777,D=33778,I=33779,O=35840,F=35841,B=35842,H=35843,z=36196,G=37492,qe=37496,Ye=37808,Je=37809,Ze=37810,Ke=37811,Qe=37812,$e=37813,et=37814,tt=37815,rt=37816,nt=37817,it=37818,at=37819,st=37820,ot=37821,lt=36492,n=2300,i=2301,ht=2400,ct=2401,ut=2402;const dt=3e3,pt=3001,r=3201,mt=0,ft=1;const gt="srgb",vt="srgb-linear";const a=35044,yt=35048;const _t="300 es",xt=1035;class Mt{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const r=this._listeners;void 0===r[e]&&(r[e]=[]),-1===r[e].indexOf(t)&&r[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const r=this._listeners;return void 0!==r[e]&&-1!==r[e].indexOf(t)}removeEventListener(e,t){if(void 0!==this._listeners){const r=this._listeners[e];void 0===r||-1!==(e=r.indexOf(t))&&r.splice(e,1)}}dispatchEvent(r){if(void 0!==this._listeners){const e=this._listeners[r.type];if(void 0!==e){r.target=this;const n=e.slice(0);for(let e=0,t=n.length;e<t;e++)n[e].call(this,r);r.target=null}}}}const bt=[];for(let e=0;e<256;e++)bt[e]=(e<16?"0":"")+e.toString(16);let wt=1234567;const Et=Math.PI/180,St=180/Math.PI;function Tt(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,r=4294967295*Math.random()|0,n=4294967295*Math.random()|0;const i=bt[255&e]+bt[e>>8&255]+bt[e>>16&255]+bt[e>>24&255]+"-"+bt[255&t]+bt[t>>8&255]+"-"+bt[t>>16&15|64]+bt[t>>24&255]+"-"+bt[63&r|128]+bt[r>>8&255]+"-"+bt[r>>16&255]+bt[r>>24&255]+bt[255&n]+bt[n>>8&255]+bt[n>>16&255]+bt[n>>24&255];return i.toLowerCase()}function At(e,t,r){return Math.max(t,Math.min(r,e))}function Rt(e,t){return(e%t+t)%t}function Ct(e,t,r){return(1-r)*e+r*t}function Lt(e){return 0==(e&e-1)&&0!==e}function Pt(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Dt(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var It=Object.freeze({__proto__:null,DEG2RAD:Et,RAD2DEG:St,generateUUID:Tt,clamp:At,euclideanModulo:Rt,mapLinear:function(e,t,r,n,i){return n+(e-t)*(i-n)/(r-t)},inverseLerp:function(e,t,r){return e!==t?(r-e)/(t-e):0},lerp:Ct,damp:function(e,t,r,n){return Ct(e,t,1-Math.exp(-r*n))},pingpong:function(e,t=1){return t-Math.abs(Rt(e,2*t)-t)},smoothstep:function(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*(3-2*e)},smootherstep:function(e,t,r){return e<=t?0:r<=e?1:(e=(e-t)/(r-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(wt=e),e=wt+=1831565813,e=Math.imul(e^e>>>15,1|e),(((e^=e+Math.imul(e^e>>>7,61|e))^e>>>14)>>>0)/4294967296},degToRad:function(e){return e*Et},radToDeg:function(e){return e*St},isPowerOfTwo:Lt,ceilPowerOfTwo:Pt,floorPowerOfTwo:Dt,setQuaternionFromProperEuler:function(e,t,c,r,u){const n=Math.cos,i=Math.sin;var a=n(c/2),s=i(c/2),o=n((t+r)/2),l=i((t+r)/2),h=n((t-r)/2),d=i((t-r)/2),p=n((r-t)/2),m=i((r-t)/2);switch(u){case"XYX":e.set(a*l,s*h,s*d,a*o);break;case"YZY":e.set(s*d,a*l,s*h,a*o);break;case"ZXZ":e.set(s*h,s*d,a*l,a*o);break;case"XZX":e.set(a*l,s*m,s*p,a*o);break;case"YXY":e.set(s*p,a*l,s*m,a*o);break;case"ZYZ":e.set(s*m,s*p,a*l,a*o);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+u)}},normalize:function(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}},denormalize:function(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}});class Re{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,r=this.y,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6],this.y=e[1]*t+e[4]*r+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var r=Math.cos(t),t=Math.sin(t),n=this.x-e.x,i=this.y-e.y;return this.x=n*r-i*t+e.x,this.y=n*t+i*r+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}Re.prototype.isVector2=!0;class Nt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,a,s,o,l){const h=this.elements;return h[0]=e,h[1]=n,h[2]=s,h[3]=t,h[4]=i,h[5]=o,h[6]=r,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,r){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),r.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){e=e.elements,t=t.elements;const r=this.elements;var n=e[0],i=e[3],a=e[6],s=e[1],o=e[4],l=e[7],h=e[2],c=e[5],e=e[8],u=t[0],d=t[3],p=t[6],m=t[1],f=t[4],g=t[7],v=t[2],y=t[5],t=t[8];return r[0]=n*u+i*m+a*v,r[3]=n*d+i*f+a*y,r[6]=n*p+i*g+a*t,r[1]=s*u+o*m+l*v,r[4]=s*d+o*f+l*y,r[7]=s*p+o*g+l*t,r[2]=h*u+c*m+e*v,r[5]=h*d+c*f+e*y,r[8]=h*p+c*g+e*t,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-r*i*e+r*s*o+n*i*l-n*a*o}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],u=c*a-s*l,d=s*o-c*i,p=l*i-a*o,m=t*u+r*d+n*p;if(0==m)return this.set(0,0,0,0,0,0,0,0,0);var h=1/m;return e[0]=u*h,e[1]=(n*l-c*r)*h,e[2]=(s*r-n*a)*h,e[3]=d*h,e[4]=(c*t-n*o)*h,e[5]=(n*i-s*t)*h,e[6]=p*h,e[7]=(r*o-l*t)*h,e[8]=(a*t-r*i)*h,this}transpose(){var e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,r,n,i,a,s){var o=Math.cos(i),i=Math.sin(i);return this.set(r*o,r*i,-r*(o*a+i*s)+a+e,-n*i,n*o,-n*(-i*a+o*s)+s+t,0,0,1),this}scale(e,t){const r=this.elements;return r[0]*=e,r[3]*=e,r[6]*=e,r[1]*=t,r[4]*=t,r[7]*=t,this}rotate(e){var t=Math.cos(e),e=Math.sin(e);const r=this.elements;var n=r[0],i=r[3],a=r[6],s=r[1],o=r[4],l=r[7];return r[0]=t*n+e*s,r[3]=t*i+e*o,r[6]=t*a+e*l,r[1]=-e*n+t*s,r[4]=-e*i+t*o,r[7]=-e*a+t*l,this}translate(e,t){const r=this.elements;return r[0]+=e*r[2],r[3]+=e*r[5],r[6]+=e*r[8],r[1]+=t*r[2],r[4]+=t*r[5],r[7]+=t*r[8],this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<9;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<9;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}function Ut(t){for(let e=t.length-1;0<=e;--e)if(65535<t[e])return 1}Nt.prototype.isMatrix3=!0;const Ot={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ft(e,t){return new Ot[e](t)}function Bt(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function Ht(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function zt(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const Gt={srgb:{"srgb-linear":Ht},"srgb-linear":{srgb:zt}},Vt={legacyMode:!0,get workingColorSpace(){return vt},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,r){if(this.legacyMode||t===r||!t||!r)return e;if(Gt[t]&&void 0!==Gt[t][r]){const n=Gt[t][r];return e.r=n(e.r),e.g=n(e.g),e.b=n(e.b),e}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}},kt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Wt={r:0,g:0,b:0},jt={h:0,s:0,l:0},Xt={h:0,s:0,l:0};function qt(e,t,r){return r<0&&(r+=1),1<r&&--r,r<1/6?e+6*(t-e)*r:r<.5?t:r<2/3?e+6*(t-e)*(2/3-r):e}function Yt(e,t){return t.r=e.r,t.g=e.g,t.b=e.b,t}class x{constructor(e,t,r){return void 0===t&&void 0===r?this.set(e):this.setRGB(e,t,r)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=gt){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,Vt.toWorkingColorSpace(this,t),this}setRGB(e,t,r,n=vt){return this.r=e,this.g=t,this.b=r,Vt.toWorkingColorSpace(this,n),this}setHSL(e,t,r,n=vt){return e=Rt(e,1),t=At(t,0,1),r=At(r,0,1),0===t?this.r=this.g=this.b=r:(this.r=qt(t=2*r-(r=r<=.5?r*(1+t):r+t-r*t),r,e+1/3),this.g=qt(t,r,e),this.b=qt(t,r,e-1/3)),Vt.toWorkingColorSpace(this,n),this}setStyle(t,r=gt){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var a,s,o,l=i[1],h=i[2];switch(l){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,Vt.toWorkingColorSpace(this,r),n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,Vt.toWorkingColorSpace(this,r),n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return a=parseFloat(e[1])/360,s=parseInt(e[2],10)/100,o=parseInt(e[3],10)/100,n(e[4]),this.setHSL(a,s,o,r)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=i[1];l=e.length;if(3===l)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,Vt.toWorkingColorSpace(this,r),this;if(6===l)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,Vt.toWorkingColorSpace(this,r),this}return t&&0<t.length?this.setColorName(t,r):this}setColorName(e,t=gt){var r=kt[e.toLowerCase()];return void 0!==r?this.setHex(r,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Ht(e.r),this.g=Ht(e.g),this.b=Ht(e.b),this}copyLinearToSRGB(e){return this.r=zt(e.r),this.g=zt(e.g),this.b=zt(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=gt){return Vt.fromWorkingColorSpace(Yt(this,Wt),e),At(255*Wt.r,0,255)<<16^At(255*Wt.g,0,255)<<8^At(255*Wt.b,0,255)<<0}getHexString(e=gt){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=vt){Vt.fromWorkingColorSpace(Yt(this,Wt),t);var r=Wt.r,n=Wt.g,i=Wt.b,t=Math.max(r,n,i),a=Math.min(r,n,i);let s,o;var l=(a+t)/2;if(a===t)s=0,o=0;else{var h=t-a;switch(o=l<=.5?h/(t+a):h/(2-t-a),t){case r:s=(n-i)/h+(n<i?6:0);break;case n:s=(i-r)/h+2;break;case i:s=(r-n)/h+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getRGB(e,t=vt){return Vt.fromWorkingColorSpace(Yt(this,Wt),t),e.r=Wt.r,e.g=Wt.g,e.b=Wt.b,e}getStyle(e=gt){return Vt.fromWorkingColorSpace(Yt(this,Wt),e),e!==gt?`color(${e} ${Wt.r} ${Wt.g} ${Wt.b})`:`rgb(${255*Wt.r|0},${255*Wt.g|0},${255*Wt.b|0})`}offsetHSL(e,t,r){return this.getHSL(jt),jt.h+=e,jt.s+=t,jt.l+=r,this.setHSL(jt.h,jt.s,jt.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,r){return this.r=e.r+(t.r-e.r)*r,this.g=e.g+(t.g-e.g)*r,this.b=e.b+(t.b-e.b)*r,this}lerpHSL(e,t){this.getHSL(jt),e.getHSL(Xt);var e=Ct(jt.h,Xt.h,t),r=Ct(jt.s,Xt.s,t),t=Ct(jt.l,Xt.l,t);return this.setHSL(e,r,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}x.NAMES=kt,x.prototype.isColor=!0,x.prototype.r=1,x.prototype.g=1,x.prototype.b=1;let Jt;class Zt{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{(Jt=void 0===Jt?Bt("canvas"):Jt).width=e.width,Jt.height=e.height;const r=Jt.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),t=Jt}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const r=Bt("canvas"),n=(r.width=e.width,r.height=e.height,r.getContext("2d"));n.drawImage(e,0,0,e.width,e.height);var t=n.getImageData(0,0,e.width,e.height);const i=t.data;for(let e=0;e<i.length;e++)i[e]=255*Ht(i[e]/255);return n.putImageData(t,0,0),r}if(e.data){const a=e.data.slice(0);for(let e=0;e<a.length;e++)a instanceof Uint8Array||a instanceof Uint8ClampedArray?a[e]=Math.floor(255*Ht(a[e]/255)):a[e]=Ht(a[e]);return{data:a,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Kt{constructor(e=null){this.uuid=Tt(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""};var i=this.data;if(null!==i){let r;if(Array.isArray(i)){r=[];for(let e=0,t=i.length;e<t;e++)i[e].isDataTexture?r.push(Qt(i[e].image)):r.push(Qt(i[e]))}else r=Qt(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function Qt(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Zt.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Kt.prototype.isSource=!0;let $t=0;class er extends Mt{constructor(e=er.DEFAULT_IMAGE,t=er.DEFAULT_MAPPING,r=W,n=W,i=Ue,a=Fe,s=We,o=Be,l=1,h=dt){super(),Object.defineProperty(this,"id",{value:$t++}),this.uuid=Tt(),this.name="",this.source=new Kt(e),this.mipmaps=[],this.mapping=t,this.wrapS=r,this.wrapT=n,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Re(0,0),this.repeat=new Re(1,1),this.center=new Re(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Nt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const r={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t||(e.textures[this.uuid]=r),r}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case k:e.x=e.x-Math.floor(e.x);break;case W:e.x=e.x<0?0:1;break;case j:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case k:e.y=e.y-Math.floor(e.y);break;case W:e.y=e.y<0?0:1;break;case j:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}}er.DEFAULT_IMAGE=null,er.DEFAULT_MAPPING=300,er.prototype.isTexture=!0;class tr{constructor(e=0,t=0,r=0,n=1){this.x=e,this.y=t,this.z=r,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,r,n){return this.x=e,this.y=t,this.z=r,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,r=this.y,n=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*n+e[12]*i,this.y=e[1]*t+e[5]*r+e[9]*n+e[13]*i,this.z=e[2]*t+e[6]*r+e[10]*n+e[14]*i,this.w=e[3]*t+e[7]*r+e[11]*n+e[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let c,t,r,n;var e=e.elements,u=e[0],i=e[4],a=e[8],s=e[1],d=e[5],o=e[9],l=e[2],h=e[6],e=e[10];if(Math.abs(i-s)<.01&&Math.abs(a-l)<.01&&Math.abs(o-h)<.01){if(Math.abs(i+s)<.1&&Math.abs(a+l)<.1&&Math.abs(o+h)<.1&&Math.abs(u+d+e-3)<.1)return this.set(1,0,0,0),this;c=Math.PI;var p=(u+1)/2,m=(d+1)/2,f=(e+1)/2,g=(i+s)/4,v=(a+l)/4,y=(o+h)/4;return m<p&&f<p?n=p<.01?(t=0,r=.707106781):(t=Math.sqrt(p),r=g/t,v/t):f<m?n=m<.01?(t=.707106781,r=0,.707106781):(r=Math.sqrt(m),t=g/r,y/r):f<.01?(t=.707106781,r=.707106781,n=0):(n=Math.sqrt(f),t=v/n,r=y/n),this.set(t,r,n,c),this}let _=Math.sqrt((h-o)*(h-o)+(a-l)*(a-l)+(s-i)*(s-i));return Math.abs(_)<.001&&(_=1),this.x=(h-o)/_,this.y=(a-l)/_,this.z=(s-i)/_,this.w=Math.acos((u+d+e-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this.w=e.w+(t.w-e.w)*r,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}tr.prototype.isVector4=!0;class rr extends Mt{constructor(e,t,r={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new tr(0,0,e,t),this.scissorTest=!1,this.viewport=new tr(0,0,e,t);e={width:e,height:t,depth:1};this.texture=new er(e,r.mapping,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy,r.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==r.generateMipmaps&&r.generateMipmaps,this.texture.internalFormat=void 0!==r.internalFormat?r.internalFormat:null,this.texture.minFilter=void 0!==r.minFilter?r.minFilter:Ue,this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0!==r.stencilBuffer&&r.stencilBuffer,this.depthTexture=void 0!==r.depthTexture?r.depthTexture:null,this.samples=void 0!==r.samples?r.samples:0}setSize(e,t,r=1){this.width===e&&this.height===t&&this.depth===r||(this.width=e,this.height=t,this.depth=r,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=r,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}rr.prototype.isWebGLRenderTarget=!0;class nr extends er{constructor(e=null,t=1,r=1,n=1){super(null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=X,this.minFilter=X,this.wrapR=W,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}nr.prototype.isDataArrayTexture=!0;class ir extends rr{constructor(e,t,r){super(e,t),this.depth=r,this.texture=new nr(null,e,t,r),this.texture.isRenderTargetTexture=!0}}class ar extends er{constructor(e=null,t=1,r=1,n=1){super(null),this.image={data:e,width:t,height:r,depth:n},this.magFilter=X,this.minFilter=X,this.wrapR=W,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}ar.prototype.isData3DTexture=ir.prototype.isWebGLArrayRenderTarget=!0;class sr extends rr{constructor(e,t,r){super(e,t),this.depth=r,this.texture=new ar(null,e,t,r),this.texture.isRenderTargetTexture=!0}}sr.prototype.isWebGL3DRenderTarget=!0;class or extends rr{constructor(e,t,r,n={}){super(e,t,n);const i=this.texture;this.texture=[];for(let e=0;e<r;e++)this.texture[e]=i.clone(),this.texture[e].isRenderTargetTexture=!0}setSize(r,n,i=1){if(this.width!==r||this.height!==n||this.depth!==i){this.width=r,this.height=n,this.depth=i;for(let e=0,t=this.texture.length;e<t;e++)this.texture[e].image.width=r,this.texture[e].image.height=n,this.texture[e].image.depth=i;this.dispose()}return this.viewport.set(0,0,r,n),this.scissor.set(0,0,r,n),this}copy(r){this.dispose(),this.width=r.width,this.height=r.height,this.depth=r.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=r.depthBuffer,this.stencilBuffer=r.stencilBuffer,this.depthTexture=r.depthTexture;for(let e=this.texture.length=0,t=r.texture.length;e<t;e++)this.texture[e]=r.texture[e].clone();return this}}or.prototype.isWebGLMultipleRenderTargets=!0;class lr{constructor(e=0,t=0,r=0,n=1){this._x=e,this._y=t,this._z=r,this._w=n}static slerp(e,t,r,n){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),r.slerpQuaternions(e,t,n)}static slerpFlat(e,t,r,n,c,i,u){let a=r[n+0],s=r[n+1],o=r[n+2],l=r[n+3];var r=c[i+0],n=c[i+1],d=c[i+2],c=c[i+3];if(0===u)return e[t+0]=a,e[t+1]=s,e[t+2]=o,void(e[t+3]=l);if(1===u)return e[t+0]=r,e[t+1]=n,e[t+2]=d,void(e[t+3]=c);if(l!==c||a!==r||s!==n||o!==d){let e=1-u;var i=a*r+s*n+o*d+l*c,p=0<=i?1:-1,h=1-i*i,i=(h>Number.EPSILON&&(h=Math.sqrt(h),i=Math.atan2(h,i*p),e=Math.sin(e*i)/h,u=Math.sin(u*i)/h),u*p);a=a*e+r*i,s=s*e+n*i,o=o*e+d*i,l=l*e+c*i,e===1-u&&(h=1/Math.sqrt(a*a+s*s+o*o+l*l),a*=h,s*=h,o*=h,l*=h)}e[t]=a,e[t+1]=s,e[t+2]=o,e[t+3]=l}static multiplyQuaternionsFlat(e,t,r,n,i,a){var s=r[n],o=r[n+1],l=r[n+2],r=r[n+3],n=i[a],h=i[a+1],c=i[a+2],i=i[a+3];return e[t]=s*i+r*n+o*c-l*h,e[t+1]=o*i+r*h+l*n-s*c,e[t+2]=l*i+r*c+s*h-o*n,e[t+3]=r*i-s*n-o*h-l*c,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,r,n){return this._x=e,this._y=t,this._z=r,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,c){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var t=e._x,u=e._y,d=e._z,p=e._order;const r=Math.cos,n=Math.sin;var i=r(t/2),a=r(u/2),s=r(d/2),o=n(t/2),l=n(u/2),h=n(d/2);switch(p){case"XYZ":this._x=o*a*s+i*l*h,this._y=i*l*s-o*a*h,this._z=i*a*h+o*l*s,this._w=i*a*s-o*l*h;break;case"YXZ":this._x=o*a*s+i*l*h,this._y=i*l*s-o*a*h,this._z=i*a*h-o*l*s,this._w=i*a*s+o*l*h;break;case"ZXY":this._x=o*a*s-i*l*h,this._y=i*l*s+o*a*h,this._z=i*a*h+o*l*s,this._w=i*a*s-o*l*h;break;case"ZYX":this._x=o*a*s-i*l*h,this._y=i*l*s+o*a*h,this._z=i*a*h-o*l*s,this._w=i*a*s+o*l*h;break;case"YZX":this._x=o*a*s+i*l*h,this._y=i*l*s+o*a*h,this._z=i*a*h-o*l*s,this._w=i*a*s-o*l*h;break;case"XZY":this._x=o*a*s-i*l*h,this._y=i*l*s-o*a*h,this._z=i*a*h+o*l*s,this._w=i*a*s+o*l*h;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+p)}return!1!==c&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var t=t/2,r=Math.sin(t);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(t),this._onChangeCallback(),this}setFromRotationMatrix(e){var e=e.elements,t=e[0],r=e[4],n=e[8],i=e[1],a=e[5],s=e[9],o=e[2],l=e[6],e=e[10],h=t+a+e;return 0<h?(h=.5/Math.sqrt(h+1),this._w=.25/h,this._x=(l-s)*h,this._y=(n-o)*h,this._z=(i-r)*h):a<t&&e<t?(h=2*Math.sqrt(1+t-a-e),this._w=(l-s)/h,this._x=.25*h,this._y=(r+i)/h,this._z=(n+o)/h):e<a?(h=2*Math.sqrt(1+a-t-e),this._w=(n-o)/h,this._x=(r+i)/h,this._y=.25*h,this._z=(s+l)/h):(h=2*Math.sqrt(1+e-t-a),this._w=(i-r)/h,this._x=(n+o)/h,this._y=(s+l)/h,this._z=.25*h),this._onChangeCallback(),this}setFromUnitVectors(e,t){let r=e.dot(t)+1;return r<Number.EPSILON?(r=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=r,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(At(this.dot(e),-1,1)))}rotateTowards(e,t){var r=this.angleTo(e);if(0===r)return this;t=Math.min(1,t/r);return this.slerp(e,t),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var r=e._x,n=e._y,i=e._z,e=e._w,a=t._x,s=t._y,o=t._z,t=t._w;return this._x=r*t+e*a+n*o-i*s,this._y=n*t+e*s+i*a-r*o,this._z=i*t+e*o+r*s-n*a,this._w=e*t-r*a-n*s-i*o,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var r=this._x,n=this._y,i=this._z,a=this._w;let s=a*e._w+r*e._x+n*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=a,this._x=r,this._y=n,this._z=i,this;e=1-s*s;if(e<=Number.EPSILON)return this._w=(o=1-t)*a+t*this._w,this._x=o*r+t*this._x,this._y=o*n+t*this._y,this._z=o*i+t*this._z,this.normalize(),this._onChangeCallback(),this;var o=Math.sqrt(e),e=Math.atan2(o,s),l=Math.sin((1-t)*e)/o,t=Math.sin(t*e)/o;return this._w=a*l+this._w*t,this._x=r*l+this._x*t,this._y=n*l+this._y*t,this._z=i*l+this._z*t,this._onChangeCallback(),this}slerpQuaternions(e,t,r){return this.copy(e).slerp(t,r)}random(){var e=Math.random(),t=Math.sqrt(1-e),e=Math.sqrt(e),r=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(t*Math.cos(r),e*Math.sin(n),e*Math.cos(n),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}lr.prototype.isQuaternion=!0;class Ce{constructor(e=0,t=0,r=0){this.x=e,this.y=t,this.z=r}set(e,t,r){return void 0===r&&(r=this.z),this.x=e,this.y=t,this.z=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(cr.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(cr.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,r=this.y,n=this.z,e=e.elements;return this.x=e[0]*t+e[3]*r+e[6]*n,this.y=e[1]*t+e[4]*r+e[7]*n,this.z=e[2]*t+e[5]*r+e[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,r=this.y,n=this.z,e=e.elements,i=1/(e[3]*t+e[7]*r+e[11]*n+e[15]);return this.x=(e[0]*t+e[4]*r+e[8]*n+e[12])*i,this.y=(e[1]*t+e[5]*r+e[9]*n+e[13])*i,this.z=(e[2]*t+e[6]*r+e[10]*n+e[14])*i,this}applyQuaternion(e){var t=this.x,r=this.y,n=this.z,i=e.x,a=e.y,s=e.z,e=e.w,o=e*t+a*n-s*r,l=e*r+s*t-i*n,h=e*n+i*r-a*t,t=-i*t-a*r-s*n;return this.x=o*e+t*-i+l*-s-h*-a,this.y=l*e+t*-a+h*-i-o*-s,this.z=h*e+t*-s+o*-a-l*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,r=this.y,n=this.z,e=e.elements;return this.x=e[0]*t+e[4]*r+e[8]*n,this.y=e[1]*t+e[5]*r+e[9]*n,this.z=e[2]*t+e[6]*r+e[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var r=this.length();return this.divideScalar(r||1).multiplyScalar(Math.max(e,Math.min(t,r)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,r){return this.x=e.x+(t.x-e.x)*r,this.y=e.y+(t.y-e.y)*r,this.z=e.z+(t.z-e.z)*r,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var r=e.x,n=e.y,e=e.z,i=t.x,a=t.y,t=t.z;return this.x=n*t-e*a,this.y=e*i-r*t,this.z=r*a-n*i,this}projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);t=e.dot(this)/t;return this.copy(e).multiplyScalar(t)}projectOnPlane(e){return hr.copy(this).projectOnVector(e),this.sub(hr)}reflect(e){return this.sub(hr.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;e=this.dot(e)/t;return Math.acos(At(e,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,r=this.y-e.y,e=this.z-e.z;return t*t+r*r+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,r){var n=Math.sin(t)*e;return this.x=n*Math.sin(r),this.y=Math.cos(t)*e,this.z=n*Math.cos(r),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,r){return this.x=e*Math.sin(t),this.y=r,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),r=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=r,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,r){return void 0!==r&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,r=Math.sqrt(1-e**2);return this.x=r*Math.cos(t),this.y=r*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}Ce.prototype.isVector3=!0;const hr=new Ce,cr=new lr;class ur{constructor(e=new Ce(1/0,1/0,1/0),t=new Ce(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(r){let n=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.length;e<t;e+=3){var h=r[e],c=r[e+1],u=r[e+2];h<n&&(n=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(n,i,a),this.max.set(s,o,l),this}setFromBufferAttribute(r){let n=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=r.count;e<t;e++){var h=r.getX(e),c=r.getY(e),u=r.getZ(e);h<n&&(n=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(n,i,a),this.max.set(s,o,l),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=pr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(r,n=!1){r.updateWorldMatrix(!1,!1);const e=r.geometry;if(void 0!==e)if(n&&null!=e.attributes&&void 0!==e.attributes.position){var i=e.attributes.position;for(let e=0,t=i.count;e<t;e++)pr.fromBufferAttribute(i,e).applyMatrix4(r.matrixWorld),this.expandByPoint(pr)}else null===e.boundingBox&&e.computeBoundingBox(),mr.copy(e.boundingBox),mr.applyMatrix4(r.matrixWorld),this.union(mr);var a=r.children;for(let e=0,t=a.length;e<t;e++)this.expandByObject(a[e],n);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,pr),pr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,r;return r=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,r+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,r+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,r+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,r+=e.normal.z*this.min.z),t<=-e.constant&&r>=-e.constant}intersectsTriangle(e){return!this.isEmpty()&&(this.getCenter(Mr),br.subVectors(this.max,Mr),fr.subVectors(e.a,Mr),gr.subVectors(e.b,Mr),vr.subVectors(e.c,Mr),yr.subVectors(gr,fr),_r.subVectors(vr,gr),xr.subVectors(fr,vr),!!Sr([0,-yr.z,yr.y,0,-_r.z,_r.y,0,-xr.z,xr.y,yr.z,0,-yr.x,_r.z,0,-_r.x,xr.z,0,-xr.x,-yr.y,yr.x,0,-_r.y,_r.x,0,-xr.y,xr.x,0],fr,gr,vr,br)&&(!!Sr([1,0,0,0,1,0,0,0,1],fr,gr,vr,br)&&(wr.crossVectors(yr,_r),Sr([wr.x,wr.y,wr.z],fr,gr,vr,br))))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=pr.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=.5*this.getSize(pr).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(dr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),dr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),dr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),dr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),dr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),dr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),dr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),dr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(dr)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}ur.prototype.isBox3=!0;const dr=[new Ce,new Ce,new Ce,new Ce,new Ce,new Ce,new Ce,new Ce],pr=new Ce,mr=new ur,fr=new Ce,gr=new Ce,vr=new Ce,yr=new Ce,_r=new Ce,xr=new Ce,Mr=new Ce,br=new Ce,wr=new Ce,Er=new Ce;function Sr(r,n,i,a,s){for(let e=0,t=r.length-3;e<=t;e+=3){Er.fromArray(r,e);var o=s.x*Math.abs(Er.x)+s.y*Math.abs(Er.y)+s.z*Math.abs(Er.z),l=n.dot(Er),h=i.dot(Er),c=a.dot(Er);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const Tr=new ur,Ar=new Ce,Rr=new Ce,Cr=new Ce;class Lr{constructor(e=new Ce,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(r,e){const n=this.center;void 0!==e?n.copy(e):Tr.setFromPoints(r).getCenter(n);let i=0;for(let e=0,t=r.length;e<t;e++)i=Math.max(i,n.distanceToSquared(r[e]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var r=this.center.distanceToSquared(e);return t.copy(e),r>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Cr.subVectors(e,this.center);var t,e=Cr.lengthSq();return e>this.radius*this.radius&&(t=.5*((e=Math.sqrt(e))-this.radius),this.center.add(Cr.multiplyScalar(t/e)),this.radius+=t),this}union(e){return(!0===this.center.equals(e.center)?Rr.set(0,0,1):Rr.subVectors(e.center,this.center).normalize()).multiplyScalar(e.radius),this.expandByPoint(Ar.copy(e.center).add(Rr)),this.expandByPoint(Ar.copy(e.center).sub(Rr)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Pr=new Ce,Dr=new Ce,Ir=new Ce,Nr=new Ce,Ur=new Ce,Or=new Ce,Fr=new Ce;class Br{constructor(e=new Ce,t=new Ce(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Pr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=Pr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Pr.copy(this.direction).multiplyScalar(t).add(this.origin),Pr.distanceToSquared(e))}distanceSqToSegment(e,t,r,c){Dr.copy(e).add(t).multiplyScalar(.5),Ir.copy(t).sub(e).normalize(),Nr.copy(this.origin).sub(Dr);var e=.5*e.distanceTo(t),t=-this.direction.dot(Ir),n=Nr.dot(this.direction),i=-Nr.dot(Ir),a=Nr.lengthSq(),s=Math.abs(1-t*t);let o,l,u,h;return u=0<s?(o=t*i-n,l=t*n-i,h=e*s,0<=o?l>=-h?l<=h?(s=1/s,o*=s,l*=s,o*(o+t*l+2*n)+l*(t*o+l+2*i)+a):(l=e,-(o=Math.max(0,-(t*l+n)))*o+l*(l+2*i)+a):(l=-e,-(o=Math.max(0,-(t*l+n)))*o+l*(l+2*i)+a):l<=-h?(o=Math.max(0,-(-t*e+n)),l=0<o?-e:Math.min(Math.max(-e,-i),e),-o*o+l*(l+2*i)+a):l<=h?(o=0,(l=Math.min(Math.max(-e,-i),e))*(l+2*i)+a):(o=Math.max(0,-(t*e+n)),l=0<o?e:Math.min(Math.max(-e,-i),e),-o*o+l*(l+2*i)+a)):(l=0<t?-e:e,-(o=Math.max(0,-(t*l+n)))*o+l*(l+2*i)+a),r&&r.copy(this.direction).multiplyScalar(o).add(this.origin),c&&c.copy(Ir).multiplyScalar(l).add(Dr),u}intersectSphere(e,t){Pr.subVectors(e.center,this.origin);var r=Pr.dot(this.direction),n=Pr.dot(Pr)-r*r,e=e.radius*e.radius;if(e<n)return null;e=Math.sqrt(e-n),n=r-e,r+=e;return n<0&&r<0?null:n<0?this.at(r,t):this.at(n,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;e=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=e?e:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,c){let t,r,n,i,a,u;var s=1/this.direction.x,o=1/this.direction.y,l=1/this.direction.z,h=this.origin;return r=0<=s?(t=(e.min.x-h.x)*s,(e.max.x-h.x)*s):(t=(e.max.x-h.x)*s,(e.min.x-h.x)*s),i=0<=o?(n=(e.min.y-h.y)*o,(e.max.y-h.y)*o):(n=(e.max.y-h.y)*o,(e.min.y-h.y)*o),t>i||n>r?null:((n>t||t!=t)&&(t=n),(i<r||r!=r)&&(r=i),u=0<=l?(a=(e.min.z-h.z)*l,(e.max.z-h.z)*l):(a=(e.max.z-h.z)*l,(e.min.z-h.z)*l),t>u||a>r?null:((a>t||t!=t)&&(t=a),(r=u<r||r!=r?u:r)<0?null:this.at(0<=t?t:r,c)))}intersectsBox(e){return null!==this.intersectBox(e,Pr)}intersectTriangle(e,t,r,n,i){Ur.subVectors(t,e),Or.subVectors(r,e),Fr.crossVectors(Ur,Or);let a=this.direction.dot(Fr),s;if(0<a){if(n)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Nr.subVectors(this.origin,e);t=s*this.direction.dot(Or.crossVectors(Nr,Or));if(t<0)return null;r=s*this.direction.dot(Ur.cross(Nr));if(r<0)return null;if(t+r>a)return null;n=-s*Nr.dot(Fr);return n<0?null:this.at(n/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Le{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,r,n,i,a,s,o,l,c,u,d,p,m,f,g){const h=this.elements;return h[0]=e,h[4]=t,h[8]=r,h[12]=n,h[1]=i,h[5]=a,h[9]=s,h[13]=o,h[2]=l,h[6]=c,h[10]=u,h[14]=d,h[3]=p,h[7]=m,h[11]=f,h[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Le).fromArray(this.elements)}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){const t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,r){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),r.setFromMatrixColumn(this,2),this}makeBasis(e,t,r){return this.set(e.x,t.x,r.x,0,e.y,t.y,r.y,0,e.z,t.z,r.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements;var r=e.elements,n=1/Hr.setFromMatrixColumn(e,0).length(),i=1/Hr.setFromMatrixColumn(e,1).length(),e=1/Hr.setFromMatrixColumn(e,2).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[3]=0,t[4]=r[4]*i,t[5]=r[5]*i,t[6]=r[6]*i,t[7]=0,t[8]=r[8]*e,t[9]=r[9]*e,t[10]=r[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(c){c&&c.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements;var t,r,n,u,i=c.x,a=c.y,s=c.z,o=Math.cos(i),i=Math.sin(i),l=Math.cos(a),a=Math.sin(a),h=Math.cos(s),s=Math.sin(s);return"XYZ"===c.order?(n=o*h,r=o*s,t=i*h,u=i*s,e[0]=l*h,e[4]=-l*s,e[8]=a,e[1]=r+t*a,e[5]=n-u*a,e[9]=-i*l,e[2]=u-n*a,e[6]=t+r*a,e[10]=o*l):"YXZ"===c.order?(u=l*h,n=l*s,t=a*h,r=a*s,e[0]=u+r*i,e[4]=t*i-n,e[8]=o*a,e[1]=o*s,e[5]=o*h,e[9]=-i,e[2]=n*i-t,e[6]=r+u*i,e[10]=o*l):"ZXY"===c.order?(n=l*h,t=l*s,r=a*h,u=a*s,e[0]=n-u*i,e[4]=-o*s,e[8]=r+t*i,e[1]=t+r*i,e[5]=o*h,e[9]=u-n*i,e[2]=-o*a,e[6]=i,e[10]=o*l):"ZYX"===c.order?(t=o*h,r=o*s,u=i*h,n=i*s,e[0]=l*h,e[4]=u*a-r,e[8]=t*a+n,e[1]=l*s,e[5]=n*a+t,e[9]=r*a-u,e[2]=-a,e[6]=i*l,e[10]=o*l):"YZX"===c.order?(n=o*l,t=o*a,r=i*l,u=i*a,e[0]=l*h,e[4]=u-n*s,e[8]=r*s+t,e[1]=s,e[5]=o*h,e[9]=-i*h,e[2]=-a*h,e[6]=t*s+r,e[10]=n-u*s):"XZY"===c.order&&(t=o*l,r=o*a,n=i*l,u=i*a,e[0]=l*h,e[4]=-s,e[8]=a*h,e[1]=t*s+u,e[5]=o*h,e[9]=r*s-n,e[2]=n*s-r,e[6]=i*h,e[10]=u*s+t),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Gr,e,Vr)}lookAt(e,t,r){const n=this.elements;return jr.subVectors(e,t),0===jr.lengthSq()&&(jr.z=1),jr.normalize(),kr.crossVectors(r,jr),0===kr.lengthSq()&&(1===Math.abs(r.z)?jr.x+=1e-4:jr.z+=1e-4,jr.normalize(),kr.crossVectors(r,jr)),kr.normalize(),Wr.crossVectors(jr,kr),n[0]=kr.x,n[4]=Wr.x,n[8]=jr.x,n[1]=kr.y,n[5]=Wr.y,n[9]=jr.y,n[2]=kr.z,n[6]=Wr.z,n[10]=jr.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){e=e.elements,t=t.elements;const r=this.elements;var n=e[0],i=e[4],a=e[8],s=e[12],o=e[1],l=e[5],h=e[9],c=e[13],u=e[2],d=e[6],p=e[10],m=e[14],f=e[3],g=e[7],v=e[11],e=e[15],y=t[0],_=t[4],x=t[8],M=t[12],b=t[1],w=t[5],E=t[9],S=t[13],T=t[2],A=t[6],R=t[10],C=t[14],L=t[3],P=t[7],D=t[11],t=t[15];return r[0]=n*y+i*b+a*T+s*L,r[4]=n*_+i*w+a*A+s*P,r[8]=n*x+i*E+a*R+s*D,r[12]=n*M+i*S+a*C+s*t,r[1]=o*y+l*b+h*T+c*L,r[5]=o*_+l*w+h*A+c*P,r[9]=o*x+l*E+h*R+c*D,r[13]=o*M+l*S+h*C+c*t,r[2]=u*y+d*b+p*T+m*L,r[6]=u*_+d*w+p*A+m*P,r[10]=u*x+d*E+p*R+m*D,r[14]=u*M+d*S+p*C+m*t,r[3]=f*y+g*b+v*T+e*L,r[7]=f*_+g*w+v*A+e*P,r[11]=f*x+g*E+v*R+e*D,r[15]=f*M+g*S+v*C+e*t,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],r=e[4],n=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+i*o*c-n*l*c-i*s*u+r*l*u+n*s*d-r*o*d)+e[7]*(+t*o*d-t*l*u+i*a*u-n*a*d+n*l*h-i*o*h)+e[11]*(+t*l*c-t*s*d-i*a*c+r*a*d+i*s*h-r*l*h)+e[15]*(-n*s*h-t*o*c+t*s*u+n*a*c-r*a*u+r*o*h)}transpose(){const e=this.elements;var t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,r){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=r),this}invert(){const e=this.elements,t=e[0],r=e[1],n=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],u=e[9],d=e[10],p=e[11],m=e[12],f=e[13],g=e[14],v=e[15],y=u*g*l-f*d*l+f*o*p-s*g*p-u*o*v+s*d*v,_=m*d*l-c*g*l-m*o*p+a*g*p+c*o*v-a*d*v,x=c*f*l-m*u*l+m*s*p-a*f*p-c*s*v+a*u*v,M=m*u*o-c*f*o-m*s*d+a*f*d+c*s*g-a*u*g;var h=t*y+r*_+n*x+i*M;if(0==h)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);h=1/h;return e[0]=y*h,e[1]=(f*d*i-u*g*i-f*n*p+r*g*p+u*n*v-r*d*v)*h,e[2]=(s*g*i-f*o*i+f*n*l-r*g*l-s*n*v+r*o*v)*h,e[3]=(u*o*i-s*d*i-u*n*l+r*d*l+s*n*p-r*o*p)*h,e[4]=_*h,e[5]=(c*g*i-m*d*i+m*n*p-t*g*p-c*n*v+t*d*v)*h,e[6]=(m*o*i-a*g*i-m*n*l+t*g*l+a*n*v-t*o*v)*h,e[7]=(a*d*i-c*o*i+c*n*l-t*d*l-a*n*p+t*o*p)*h,e[8]=x*h,e[9]=(m*u*i-c*f*i-m*r*p+t*f*p+c*r*v-t*u*v)*h,e[10]=(a*f*i-m*s*i+m*r*l-t*f*l-a*r*v+t*s*v)*h,e[11]=(c*s*i-a*u*i-c*r*l+t*u*l+a*r*p-t*s*p)*h,e[12]=M*h,e[13]=(c*f*n-m*u*n+m*r*d-t*f*d-c*r*g+t*u*g)*h,e[14]=(m*s*n-a*f*n-m*r*o+t*f*o+a*r*g-t*s*g)*h,e[15]=(a*u*n-c*s*n+c*r*o-t*u*o-a*r*d+t*s*d)*h,this}scale(e){const t=this.elements;var r=e.x,n=e.y,e=e.z;return t[0]*=r,t[4]*=n,t[8]*=e,t[1]*=r,t[5]*=n,t[9]*=e,t[2]*=r,t[6]*=n,t[10]*=e,t[3]*=r,t[7]*=n,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,r,e))}makeTranslation(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var r=Math.cos(t),t=Math.sin(t),n=1-r,i=e.x,a=e.y,e=e.z,s=n*i,o=n*a;return this.set(s*i+r,s*a-t*e,s*e+t*a,0,s*a+t*e,o*a+r,o*e-t*i,0,s*e-t*a,o*e+t*i,n*e*e+r,0,0,0,0,1),this}makeScale(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this}makeShear(e,t,r,n,i,a){return this.set(1,r,i,0,e,1,a,0,t,n,1,0,0,0,0,1),this}compose(e,t,r){const n=this.elements;var i=t._x,a=t._y,s=t._z,t=t._w,o=i+i,l=a+a,h=s+s,c=i*o,u=i*l,i=i*h,d=a*l,a=a*h,s=s*h,o=t*o,l=t*l,t=t*h,h=r.x,p=r.y,r=r.z;return n[0]=(1-(d+s))*h,n[1]=(u+t)*h,n[2]=(i-l)*h,n[3]=0,n[4]=(u-t)*p,n[5]=(1-(c+s))*p,n[6]=(a+o)*p,n[7]=0,n[8]=(i+l)*r,n[9]=(a-o)*r,n[10]=(1-(c+d))*r,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,r){var n=this.elements;let i=Hr.set(n[0],n[1],n[2]).length();var a=Hr.set(n[4],n[5],n[6]).length(),s=Hr.set(n[8],n[9],n[10]).length(),e=(this.determinant()<0&&(i=-i),e.x=n[12],e.y=n[13],e.z=n[14],zr.copy(this),1/i),n=1/a,o=1/s;return zr.elements[0]*=e,zr.elements[1]*=e,zr.elements[2]*=e,zr.elements[4]*=n,zr.elements[5]*=n,zr.elements[6]*=n,zr.elements[8]*=o,zr.elements[9]*=o,zr.elements[10]*=o,t.setFromRotationMatrix(zr),r.x=i,r.y=a,r.z=s,this}makePerspective(e,t,r,n,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements;var o=2*i/(r-n),l=(t+e)/(t-e),r=(r+n)/(r-n),n=-(a+i)/(a-i),a=-2*a*i/(a-i);return s[0]=2*i/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=r,s[13]=0,s[2]=0,s[6]=0,s[10]=n,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,r,n,i,a){const s=this.elements;var o=1/(t-e),l=1/(r-n),h=1/(a-i),t=(t+e)*o,e=(r+n)*l,r=(a+i)*h;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-t,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-e,s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-r,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,r=e.elements;for(let e=0;e<16;e++)if(t[e]!==r[e])return!1;return!0}fromArray(t,r=0){for(let e=0;e<16;e++)this.elements[e]=t[e+r];return this}toArray(e=[],t=0){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e}}Le.prototype.isMatrix4=!0;const Hr=new Ce,zr=new Le,Gr=new Ce(0,0,0),Vr=new Ce(1,1,1),kr=new Ce,Wr=new Ce,jr=new Ce,Xr=new Le,qr=new lr;class Yr{constructor(e=0,t=0,r=0,n=Yr.DefaultOrder){this._x=e,this._y=t,this._z=r,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,r,n=this._order){return this._x=e,this._y=t,this._z=r,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,c=this._order,u=!0){var e=e.elements,t=e[0],r=e[4],n=e[8],i=e[1],a=e[5],s=e[9],o=e[2],l=e[6],h=e[10];switch(c){case"XYZ":this._y=Math.asin(At(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(-s,h),this._z=Math.atan2(-r,t)):(this._x=Math.atan2(l,a),this._z=0);break;case"YXZ":this._x=Math.asin(-At(s,-1,1)),Math.abs(s)<.9999999?(this._y=Math.atan2(n,h),this._z=Math.atan2(i,a)):(this._y=Math.atan2(-o,t),this._z=0);break;case"ZXY":this._x=Math.asin(At(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(-o,h),this._z=Math.atan2(-r,a)):(this._y=0,this._z=Math.atan2(i,t));break;case"ZYX":this._y=Math.asin(-At(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(l,h),this._z=Math.atan2(i,t)):(this._x=0,this._z=Math.atan2(-r,a));break;case"YZX":this._z=Math.asin(At(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(-s,a),this._y=Math.atan2(-o,t)):(this._x=0,this._y=Math.atan2(n,h));break;case"XZY":this._z=Math.asin(-At(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(l,a),this._y=Math.atan2(n,t)):(this._x=Math.atan2(-s,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+c)}return this._order=c,!0===u&&this._onChangeCallback(),this}setFromQuaternion(e,t,r){return Xr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Xr,t,r)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return qr.setFromEuler(this),this.setFromQuaternion(qr,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Yr.prototype.isEuler=!0,Yr.DefaultOrder="XYZ",Yr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Jr{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}isEnabled(e){return 0!=(this.mask&(1<<e|0))}}let Zr=0;const Kr=new Ce,Qr=new lr,$r=new Le,en=new Ce,tn=new Ce,rn=new Ce,nn=new lr,an=new Ce(1,0,0),sn=new Ce(0,1,0),on=new Ce(0,0,1),ln={type:"added"},hn={type:"removed"};class M extends Mt{constructor(){super(),Object.defineProperty(this,"id",{value:Zr++}),this.uuid=Tt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=M.DefaultUp.clone();var e=new Ce;const t=new Yr,r=new lr;var n=new Ce(1,1,1);t._onChange(function(){r.setFromEuler(t,!1)}),r._onChange(function(){t.setFromQuaternion(r,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:r},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Le},normalMatrix:{value:new Nt}}),this.matrix=new Le,this.matrixWorld=new Le,this.matrixAutoUpdate=M.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Jr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Qr.setFromAxisAngle(e,t),this.quaternion.multiply(Qr),this}rotateOnWorldAxis(e,t){return Qr.setFromAxisAngle(e,t),this.quaternion.premultiply(Qr),this}rotateX(e){return this.rotateOnAxis(an,e)}rotateY(e){return this.rotateOnAxis(sn,e)}rotateZ(e){return this.rotateOnAxis(on,e)}translateOnAxis(e,t){return Kr.copy(e).applyQuaternion(this.quaternion),this.position.add(Kr.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(an,e)}translateY(e){return this.translateOnAxis(sn,e)}translateZ(e){return this.translateOnAxis(on,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4($r.copy(this.matrixWorld).invert())}lookAt(e,t,r){e.isVector3?en.copy(e):en.set(e,t,r);e=this.parent;this.updateWorldMatrix(!0,!1),tn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?$r.lookAt(tn,en,this.up):$r.lookAt(en,tn,this.up),this.quaternion.setFromRotationMatrix($r),e&&($r.extractRotation(e.matrixWorld),Qr.setFromRotationMatrix($r),this.quaternion.premultiply(Qr.invert()))}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(ln)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(hn)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(hn)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),$r.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),$r.multiply(e.parent.matrixWorld)),e.applyMatrix4($r),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(r,n){if(this[r]===n)return this;for(let e=0,t=this.children.length;e<t;e++){const a=this.children[e];var i=a.getObjectByProperty(r,n);if(void 0!==i)return i}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tn,e,rn),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(tn,nn,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(r){r(this);const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].traverse(r)}traverseVisible(r){if(!1!==this.visible){r(this);const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].traverseVisible(r)}}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(r){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||r)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),r=!(this.matrixWorldNeedsUpdate=!1));const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].updateMatrixWorld(r)}updateWorldMatrix(e,t){const r=this.parent;if(!0===e&&null!==r&&r.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const n=this.children;for(let e=0,t=n.length;e<t;e++)n[e].updateWorldMatrix(!1,!0)}}toJSON(r){var e,t,c,u,d,p,n=void 0===r||"string"==typeof r;const i={},a=(n&&(r={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"}),{});function s(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(r)),t.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(r).uuid)),this.environment&&this.environment.isTexture&&(a.environment=this.environment.toJSON(r).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=s(r.geometries,this.geometry);var o=this.geometry.parameters;if(void 0!==o&&void 0!==o.shapes){var l=o.shapes;if(Array.isArray(l))for(let e=0,t=l.length;e<t;e++){var m=l[e];s(r.shapes,m)}else s(r.shapes,l)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(s(r.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const g=[];for(let e=0,t=this.material.length;e<t;e++)g.push(s(r.materials,this.material[e]));a.material=g}else a.material=s(r.materials,this.material);if(0<this.children.length){a.children=[];for(let e=0;e<this.children.length;e++)a.children.push(this.children[e].toJSON(r).object)}if(0<this.animations.length){a.animations=[];for(let e=0;e<this.animations.length;e++){var f=this.animations[e];a.animations.push(s(r.animations,f))}}return n&&(o=h(r.geometries),n=h(r.materials),e=h(r.textures),t=h(r.images),c=h(r.shapes),u=h(r.skeletons),d=h(r.animations),p=h(r.nodes),0<o.length&&(i.geometries=o),0<n.length&&(i.materials=n),0<e.length&&(i.textures=e),0<t.length&&(i.images=t),0<c.length&&(i.shapes=c),0<u.length&&(i.skeletons=u),0<d.length&&(i.animations=d),0<p.length&&(i.nodes=p)),i.object=a,i;function h(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const r=t.children[e];this.add(r.clone())}return this}}M.DefaultUp=new Ce(0,1,0),M.DefaultMatrixAutoUpdate=!0,M.prototype.isObject3D=!0;const cn=new Ce,un=new Ce,dn=new Ce,pn=new Ce,mn=new Ce,fn=new Ce,gn=new Ce,vn=new Ce,yn=new Ce,_n=new Ce;class xn{constructor(e=new Ce,t=new Ce,r=new Ce){this.a=e,this.b=t,this.c=r}static getNormal(e,t,r,n){n.subVectors(r,t),cn.subVectors(e,t),n.cross(cn);r=n.lengthSq();return 0<r?n.multiplyScalar(1/Math.sqrt(r)):n.set(0,0,0)}static getBarycoord(e,t,r,n,i){cn.subVectors(n,t),un.subVectors(r,t),dn.subVectors(e,t);var n=cn.dot(cn),r=cn.dot(un),e=cn.dot(dn),t=un.dot(un),a=un.dot(dn),s=n*t-r*r;if(0==s)return i.set(-2,-1,-1);s=1/s,t=(t*e-r*a)*s,n=(n*a-r*e)*s;return i.set(1-t-n,n,t)}static containsPoint(e,t,r,n){return this.getBarycoord(e,t,r,n,pn),0<=pn.x&&0<=pn.y&&pn.x+pn.y<=1}static getUV(e,t,r,n,i,a,s,o){return this.getBarycoord(e,t,r,n,pn),o.set(0,0),o.addScaledVector(i,pn.x),o.addScaledVector(a,pn.y),o.addScaledVector(s,pn.z),o}static isFrontFacing(e,t,r,n){return cn.subVectors(r,t),un.subVectors(e,t),cn.cross(un).dot(n)<0}set(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this}setFromPointsAndIndices(e,t,r,n){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,r,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,r),this.c.fromBufferAttribute(e,n),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return cn.subVectors(this.c,this.b),un.subVectors(this.a,this.b),.5*cn.cross(un).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return xn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return xn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,r,n,i){return xn.getUV(e,this.a,this.b,this.c,t,r,n,i)}containsPoint(e){return xn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return xn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){var r=this.a,c=this.b,n=this.c;let u,i;mn.subVectors(c,r),fn.subVectors(n,r),vn.subVectors(e,r);var a=mn.dot(vn),s=fn.dot(vn);if(a<=0&&s<=0)return t.copy(r);yn.subVectors(e,c);var o=mn.dot(yn),l=fn.dot(yn);if(0<=o&&l<=o)return t.copy(c);var d=a*l-o*s;if(d<=0&&0<=a&&o<=0)return u=a/(a-o),t.copy(r).addScaledVector(mn,u);_n.subVectors(e,n);var e=mn.dot(_n),h=fn.dot(_n);if(0<=h&&e<=h)return t.copy(n);a=e*s-a*h;if(a<=0&&0<=s&&h<=0)return i=s/(s-h),t.copy(r).addScaledVector(fn,i);s=o*h-e*l;if(s<=0&&0<=l-o&&0<=e-h)return gn.subVectors(n,c),i=(l-o)/(l-o+(e-h)),t.copy(c).addScaledVector(gn,i);n=1/(s+a+d);return u=a*n,i=d*n,t.copy(r).addScaledVector(mn,u).addScaledVector(fn,i)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Mn=0;class bn extends Mt{constructor(){super(),Object.defineProperty(this,"id",{value:Mn++}),this.uuid=Tt(),this.name="",this.type="Material",this.fog=!0,this.blending=K,this.side=Pe,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ue,this.blendDst=de,this.blendEquation=re,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Me,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){0<this._alphaTest!=0<e&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const r in e){var t=e[r];if(void 0!==t)if("shading"!==r){const n=this[r];void 0!==n?n&&n.isColor?n.set(t):n&&n.isVector3&&t&&t.isVector3?n.copy(t):this[r]=t:console.warn("THREE."+this.type+": '"+r+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t;else console.warn("THREE.Material: '"+r+"' parameter is undefined.")}}toJSON(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const r={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function n(e){const t=[];for(const r in e){const n=e[r];delete n.metadata,t.push(n)}return t}return r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color&&this.color.isColor&&(r.color=this.color.getHex()),void 0!==this.roughness&&(r.roughness=this.roughness),void 0!==this.metalness&&(r.metalness=this.metalness),void 0!==this.sheen&&(r.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(r.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(r.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(r.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(r.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(r.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(r.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(r.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),void 0!==this.clearcoat&&(r.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(r.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(r.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(r.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(r.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,r.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(r.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(r.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(r.lightMap=this.lightMap.toJSON(e).uuid,r.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(r.aoMap=this.aoMap.toJSON(e).uuid,r.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalMapType=this.normalMapType,r.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(r.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(r.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(r.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(r.combine=this.combine)),void 0!==this.envMapIntensity&&(r.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(r.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(r.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(r.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(r.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(r.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(r.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(r.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(r.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(r.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(r.size=this.size),null!==this.shadowSide&&(r.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),this.blending!==K&&(r.blending=this.blending),this.side!==Pe&&(r.side=this.side),this.vertexColors&&(r.vertexColors=!0),this.opacity<1&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),r.depthFunc=this.depthFunc,r.depthTest=this.depthTest,r.depthWrite=this.depthWrite,r.colorWrite=this.colorWrite,r.stencilWrite=this.stencilWrite,r.stencilWriteMask=this.stencilWriteMask,r.stencilFunc=this.stencilFunc,r.stencilRef=this.stencilRef,r.stencilFuncMask=this.stencilFuncMask,r.stencilFail=this.stencilFail,r.stencilZFail=this.stencilZFail,r.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(r.rotation=this.rotation),!0===this.polygonOffset&&(r.polygonOffset=!0),0!==this.polygonOffsetFactor&&(r.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(r.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(r.linewidth=this.linewidth),void 0!==this.dashSize&&(r.dashSize=this.dashSize),void 0!==this.gapSize&&(r.gapSize=this.gapSize),void 0!==this.scale&&(r.scale=this.scale),!0===this.dithering&&(r.dithering=!0),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(r.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(r.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(r.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(r.flatShading=this.flatShading),!1===this.visible&&(r.visible=!1),!1===this.toneMapped&&(r.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),t&&(t=n(e.textures),e=n(e.images),0<t.length&&(r.textures=t),0<e.length&&(r.images=e)),r}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let r=null;if(null!==t){var n=t.length;r=new Array(n);for(let e=0;e!==n;++e)r[e]=t[e].clone()}return this.clippingPlanes=r,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}bn.prototype.isMaterial=!0,bn.fromType=function(){return null};class wn extends bn{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new x(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}wn.prototype.isMeshBasicMaterial=!0;const En=new Ce,Sn=new Re;class Tn{constructor(e,t,r){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===r,this.usage=a,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(r,n,i){r*=this.itemSize,i*=n.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[r+e]=n.array[i+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new x),n[i++]=e.r,n[i++]=e.g,n[i++]=e.b}return this}copyVector2sArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Re),n[i++]=e.x,n[i++]=e.y}return this}copyVector3sArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new Ce),n[i++]=e.x,n[i++]=e.y,n[i++]=e.z}return this}copyVector4sArray(r){const n=this.array;let i=0;for(let t=0,e=r.length;t<e;t++){let e=r[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new tr),n[i++]=e.x,n[i++]=e.y,n[i++]=e.z,n[i++]=e.w}return this}applyMatrix3(r){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)Sn.fromBufferAttribute(this,e),Sn.applyMatrix3(r),this.setXY(e,Sn.x,Sn.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)En.fromBufferAttribute(this,e),En.applyMatrix3(r),this.setXYZ(e,En.x,En.y,En.z);return this}applyMatrix4(r){for(let e=0,t=this.count;e<t;e++)En.fromBufferAttribute(this,e),En.applyMatrix4(r),this.setXYZ(e,En.x,En.y,En.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)En.fromBufferAttribute(this,e),En.applyNormalMatrix(r),this.setXYZ(e,En.x,En.y,En.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)En.fromBufferAttribute(this,e),En.transformDirection(r),this.setXYZ(e,En.x,En.y,En.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this}setXYZ(e,t,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=r,this.array[e+2]=n,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==a&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Tn.prototype.isBufferAttribute=!0;class An extends Tn{constructor(e,t,r){super(new Int8Array(e),t,r)}}class Rn extends Tn{constructor(e,t,r){super(new Uint8Array(e),t,r)}}class Cn extends Tn{constructor(e,t,r){super(new Uint8ClampedArray(e),t,r)}}class Ln extends Tn{constructor(e,t,r){super(new Int16Array(e),t,r)}}class Pn extends Tn{constructor(e,t,r){super(new Uint16Array(e),t,r)}}class Dn extends Tn{constructor(e,t,r){super(new Int32Array(e),t,r)}}class In extends Tn{constructor(e,t,r){super(new Uint32Array(e),t,r)}}class Nn extends Tn{constructor(e,t,r){super(new Uint16Array(e),t,r)}}Nn.prototype.isFloat16BufferAttribute=!0;class V extends Tn{constructor(e,t,r){super(new Float32Array(e),t,r)}}class Un extends Tn{constructor(e,t,r){super(new Float64Array(e),t,r)}}let On=0;const Fn=new Le,Bn=new M,Hn=new Ce,zn=new ur,Gn=new ur,Vn=new Ce;class T extends Mt{constructor(){super(),Object.defineProperty(this,"id",{value:On++}),this.uuid=Tt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ut(e)?In:Pn)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,r=0){this.groups.push({start:e,count:t,materialIndex:r})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position,r=(void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0),this.attributes.normal);var n;void 0!==r&&(n=(new Nt).getNormalMatrix(e),r.applyNormalMatrix(n),r.needsUpdate=!0);const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return Fn.makeRotationFromQuaternion(e),this.applyMatrix4(Fn),this}rotateX(e){return Fn.makeRotationX(e),this.applyMatrix4(Fn),this}rotateY(e){return Fn.makeRotationY(e),this.applyMatrix4(Fn),this}rotateZ(e){return Fn.makeRotationZ(e),this.applyMatrix4(Fn),this}translate(e,t,r){return Fn.makeTranslation(e,t,r),this.applyMatrix4(Fn),this}scale(e,t,r){return Fn.makeScale(e,t,r),this.applyMatrix4(Fn),this}lookAt(e){return Bn.lookAt(e),Bn.updateMatrix(),this.applyMatrix4(Bn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hn).negate(),this.translate(Hn.x,Hn.y,Hn.z),this}setFromPoints(r){const n=[];for(let e=0,t=r.length;e<t;e++){var i=r[e];n.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new V(n,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new ur);var e=this.attributes.position,r=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Ce(-1/0,-1/0,-1/0),new Ce(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),r)for(let e=0,t=r.length;e<t;e++){var n=r[e];zn.setFromBufferAttribute(n),this.morphTargetsRelative?(Vn.addVectors(this.boundingBox.min,zn.min),this.boundingBox.expandByPoint(Vn),Vn.addVectors(this.boundingBox.max,zn.max),this.boundingBox.expandByPoint(Vn)):(this.boundingBox.expandByPoint(zn.min),this.boundingBox.expandByPoint(zn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Lr);var n=this.attributes.position,i=this.morphAttributes.position;if(n&&n.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Ce,1/0);if(n){const l=this.boundingSphere.center;if(zn.setFromBufferAttribute(n),i)for(let e=0,t=i.length;e<t;e++){var a=i[e];Gn.setFromBufferAttribute(a),this.morphTargetsRelative?(Vn.addVectors(zn.min,Gn.min),zn.expandByPoint(Vn),Vn.addVectors(zn.max,Gn.max),zn.expandByPoint(Vn)):(zn.expandByPoint(Gn.min),zn.expandByPoint(Gn.max))}zn.getCenter(l);let r=0;for(let e=0,t=n.count;e<t;e++)Vn.fromBufferAttribute(n,e),r=Math.max(r,l.distanceToSquared(Vn));if(i)for(let e=0,t=i.length;e<t;e++){var s=i[e],o=this.morphTargetsRelative;for(let e=0,t=s.count;e<t;e++)Vn.fromBufferAttribute(s,e),o&&(Hn.fromBufferAttribute(n,e),Vn.add(Hn)),r=Math.max(r,l.distanceToSquared(Vn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){var t=this.index,e=this.attributes;if(null!==t&&void 0!==e.position&&void 0!==e.normal&&void 0!==e.uv){var n=t.array;const _=e.position.array,x=e.normal.array,M=e.uv.array;var i,a,s,d,p=_.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new Tn(new Float32Array(4*p),4));const b=this.getAttribute("tangent").array,o=[],l=[];for(let e=0;e<p;e++)o[e]=new Ce,l[e]=new Ce;const w=new Ce,E=new Ce,S=new Ce,T=new Re,h=new Re,c=new Re,A=new Ce,R=new Ce;let r=this.groups;for(let e=0,t=(r=0===r.length?[{start:0,count:n.length}]:r).length;e<t;++e){var m=r[e],f=m.start;for(let e=f,t=f+m.count;e<t;e+=3)i=n[e+0],a=n[e+1],s=n[e+2],d=void 0,w.fromArray(_,3*i),E.fromArray(_,3*a),S.fromArray(_,3*s),T.fromArray(M,2*i),h.fromArray(M,2*a),c.fromArray(M,2*s),E.sub(w),S.sub(w),h.sub(T),c.sub(T),d=1/(h.x*c.y-c.x*h.y),isFinite(d)&&(A.copy(E).multiplyScalar(c.y).addScaledVector(S,-h.y).multiplyScalar(d),R.copy(S).multiplyScalar(h.x).addScaledVector(E,-c.x).multiplyScalar(d),o[i].add(A),o[a].add(A),o[s].add(A),l[i].add(R),l[a].add(R),l[s].add(R))}const u=new Ce,C=new Ce,L=new Ce,P=new Ce;for(let e=0,t=r.length;e<t;++e){var g=r[e],v=g.start;for(let e=v,t=v+g.count;e<t;e+=3)y(n[e+0]),y(n[e+1]),y(n[e+2])}function y(e){L.fromArray(x,3*e),P.copy(L);var t=o[e],t=(u.copy(t),u.sub(L.multiplyScalar(L.dot(t))).normalize(),C.crossVectors(P,t),C.dot(l[e])),t=t<0?-1:1;b[4*e]=u.x,b[4*e+1]=u.y,b[4*e+2]=u.z,b[4*e+3]=t}}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")}computeVertexNormals(){const n=this.index;var i=this.getAttribute("position");if(void 0!==i){let r=this.getAttribute("normal");if(void 0===r)r=new Tn(new Float32Array(3*i.count),3),this.setAttribute("normal",r);else for(let e=0,t=r.count;e<t;e++)r.setXYZ(e,0,0,0);const a=new Ce,s=new Ce,o=new Ce,l=new Ce,h=new Ce,c=new Ce,u=new Ce,d=new Ce;if(n)for(let e=0,t=n.count;e<t;e+=3){var p=n.getX(e+0),m=n.getX(e+1),f=n.getX(e+2);a.fromBufferAttribute(i,p),s.fromBufferAttribute(i,m),o.fromBufferAttribute(i,f),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),l.fromBufferAttribute(r,p),h.fromBufferAttribute(r,m),c.fromBufferAttribute(r,f),l.add(u),h.add(u),c.add(u),r.setXYZ(p,l.x,l.y,l.z),r.setXYZ(m,h.x,h.y,h.z),r.setXYZ(f,c.x,c.y,c.z)}else for(let e=0,t=i.count;e<t;e+=3)a.fromBufferAttribute(i,e+0),s.fromBufferAttribute(i,e+1),o.fromBufferAttribute(i,e+2),u.subVectors(o,s),d.subVectors(a,s),u.cross(d),r.setXYZ(e+0,u.x,u.y,u.z),r.setXYZ(e+1,u.x,u.y,u.z),r.setXYZ(e+2,u.x,u.y,u.z);this.normalizeNormals(),r.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var r=this.attributes;for(const s in r)if(void 0!==e.attributes[s]){const o=r[s].array;var n=e.attributes[s],i=n.array,n=n.itemSize*t,a=Math.min(i.length,o.length-n);for(let e=0,t=n;e<a;e++,t++)o[t]=i[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){const r=this.attributes.normal;for(let e=0,t=r.count;e<t;e++)Vn.fromBufferAttribute(r,e),Vn.normalize(),r.setXYZ(e,Vn.x,Vn.y,Vn.z)}toNonIndexed(){function r(r,n){const i=r.array;var a=r.itemSize,e=r.normalized;const s=new i.constructor(n.length*a);let o=0,l=0;for(let e=0,t=n.length;e<t;e++){o=r.isInterleavedBufferAttribute?n[e]*r.data.stride+r.offset:n[e]*a;for(let e=0;e<a;e++)s[l++]=i[o++]}return new Tn(s,a,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new T;var i=this.index.array,e=this.attributes;for(const o in e){var c=r(e[o],i);n.setAttribute(o,c)}var t=this.morphAttributes;for(const l in t){const h=[];var a=t[l];for(let e=0,t=a.length;e<t;e++){var u=r(a[e],i);h.push(u)}n.morphAttributes[l]=h}n.morphTargetsRelative=this.morphTargetsRelative;var d=this.groups;for(let e=0,t=d.length;e<t;e++){var s=d[e];n.addGroup(s.start,s.count,s.materialIndex)}return n}toJSON(){const r={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),0<Object.keys(this.userData).length&&(r.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const s in e)void 0!==e[s]&&(r[s]=e[s]);return r}r.data={attributes:{}};var t=this.index,n=(null!==t&&(r.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)}),this.attributes);for(const o in n){const d=n[o];r.data.attributes[o]=d.toJSON(r.data)}const i={};let c=!1;for(const l in this.morphAttributes){var u=this.morphAttributes[l];const h=[];for(let e=0,t=u.length;e<t;e++){const p=u[e];h.push(p.toJSON(r.data))}0<h.length&&(i[l]=h,c=!0)}c&&(r.data.morphAttributes=i,r.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups;0<t.length&&(r.data.groups=JSON.parse(JSON.stringify(t)));const a=this.boundingSphere;return null!==a&&(r.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),r}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var r={};this.name=e.name;const t=e.index;null!==t&&this.setIndex(t.clone(r));var n=e.attributes;for(const s in n){const p=n[s];this.setAttribute(s,p.clone(r))}var i=e.morphAttributes;for(const o in i){const l=[],h=i[o];for(let e=0,t=h.length;e<t;e++)l.push(h[e].clone(r));this.morphAttributes[o]=l}this.morphTargetsRelative=e.morphTargetsRelative;var c=e.groups;for(let e=0,t=c.length;e<t;e++){var a=c[e];this.addGroup(a.start,a.count,a.materialIndex)}const u=e.boundingBox,d=(null!==u&&(this.boundingBox=u.clone()),e.boundingSphere);return null!==d&&(this.boundingSphere=d.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}T.prototype.isBufferGeometry=!0;const kn=new Le,Wn=new Br,jn=new Lr,Xn=new Ce,qn=new Ce,Yn=new Ce,Jn=new Ce,Zn=new Ce,Kn=new Ce,Qn=new Ce,$n=new Ce,ei=new Ce,ti=new Re,ri=new Re,ni=new Re,ii=new Ce,ai=new Ce;class si extends M{constructor(e=new T,t=new wn){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var n=t[r[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var i=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(n,i){const e=this.geometry;var a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),jn.copy(e.boundingSphere),jn.applyMatrix4(t),!1!==n.ray.intersectsSphere(jn)&&(kn.copy(t).invert(),Wn.copy(n.ray).applyMatrix4(kn),null===e.boundingBox||!1!==Wn.intersectsBox(e.boundingBox)))){let r;if(e.isBufferGeometry){const u=e.index;var s=e.attributes.position,o=e.morphAttributes.position,d=e.morphTargetsRelative,p=e.attributes.uv,m=e.attributes.uv2,f=e.groups,l=e.drawRange;if(null!==u)if(Array.isArray(a))for(let e=0,t=f.length;e<t;e++){var h=f[e],g=a[h.materialIndex];for(let e=Math.max(h.start,l.start),t=Math.min(u.count,Math.min(h.start+h.count,l.start+l.count));e<t;e+=3){var v=u.getX(e),y=u.getX(e+1),_=u.getX(e+2);(r=oi(this,g,n,Wn,s,o,d,p,m,v,y,_))&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=h.materialIndex,i.push(r))}}else for(let e=Math.max(0,l.start),t=Math.min(u.count,l.start+l.count);e<t;e+=3){var x=u.getX(e),M=u.getX(e+1),b=u.getX(e+2);(r=oi(this,a,n,Wn,s,o,d,p,m,x,M,b))&&(r.faceIndex=Math.floor(e/3),i.push(r))}else if(void 0!==s)if(Array.isArray(a))for(let e=0,t=f.length;e<t;e++){var c=f[e],w=a[c.materialIndex];for(let e=Math.max(c.start,l.start),t=Math.min(s.count,Math.min(c.start+c.count,l.start+l.count));e<t;e+=3){var E=e,S=e+1,T=e+2;(r=oi(this,w,n,Wn,s,o,d,p,m,E,S,T))&&(r.faceIndex=Math.floor(e/3),r.face.materialIndex=c.materialIndex,i.push(r))}}else for(let e=Math.max(0,l.start),t=Math.min(s.count,l.start+l.count);e<t;e+=3){var A=e,R=e+1,C=e+2;(r=oi(this,a,n,Wn,s,o,d,p,m,A,R,C))&&(r.faceIndex=Math.floor(e/3),i.push(r))}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function oi(e,c,u,d,t,r,p,n,i,a,s,o){Xn.fromBufferAttribute(t,a),qn.fromBufferAttribute(t,s),Yn.fromBufferAttribute(t,o);var m=e.morphTargetInfluences;if(r&&m){Qn.set(0,0,0),$n.set(0,0,0),ei.set(0,0,0);for(let e=0,t=r.length;e<t;e++){var l=m[e],f=r[e];0!==l&&(Jn.fromBufferAttribute(f,a),Zn.fromBufferAttribute(f,s),Kn.fromBufferAttribute(f,o),p?(Qn.addScaledVector(Jn,l),$n.addScaledVector(Zn,l),ei.addScaledVector(Kn,l)):(Qn.addScaledVector(Jn.sub(Xn),l),$n.addScaledVector(Zn.sub(qn),l),ei.addScaledVector(Kn.sub(Yn),l)))}Xn.add(Qn),qn.add($n),Yn.add(ei)}e.isSkinnedMesh&&(e.boneTransform(a,Xn),e.boneTransform(s,qn),e.boneTransform(o,Yn));const h=function(e,t,r,n,i,a,s,o){let l;return null===(l=t.side===De?n.intersectTriangle(s,a,i,!0,o):n.intersectTriangle(i,a,s,t.side!==Ie,o))?null:(ai.copy(o),ai.applyMatrix4(e.matrixWorld),(n=r.ray.origin.distanceTo(ai))<r.near||n>r.far?null:{distance:n,point:ai.clone(),object:e})}(e,c,u,d,Xn,qn,Yn,ii);return h&&(n&&(ti.fromBufferAttribute(n,a),ri.fromBufferAttribute(n,s),ni.fromBufferAttribute(n,o),h.uv=xn.getUV(ii,Xn,qn,Yn,ti,ri,ni,new Re)),i&&(ti.fromBufferAttribute(i,a),ri.fromBufferAttribute(i,s),ni.fromBufferAttribute(i,o),h.uv2=xn.getUV(ii,Xn,qn,Yn,ti,ri,ni,new Re)),t={a:a,b:s,c:o,normal:new Ce,materialIndex:0},xn.getNormal(Xn,qn,Yn,t.normal),h.face=t),h}si.prototype.isMesh=!0;class li extends T{constructor(e=1,t=1,r=1,n=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:r,widthSegments:n,heightSegments:i,depthSegments:a};const L=this,A=(n=Math.floor(n),i=Math.floor(i),a=Math.floor(a),[]),P=[],D=[],R=[];let C=0,I=0;function s(r,n,i,c,u,e,t,d,a,s,p){var m=e/a,f=t/s,g=e/2,v=t/2,y=d/2,o=a+1,_=s+1;let x=0,l=0;const h=new Ce;for(let t=0;t<_;t++){var M=t*f-v;for(let e=0;e<o;e++){var b=e*m-g;h[r]=b*c,h[n]=M*u,h[i]=y,P.push(h.x,h.y,h.z),h[r]=0,h[n]=0,h[i]=0<d?1:-1,D.push(h.x,h.y,h.z),R.push(e/a),R.push(1-t/s),x+=1}}for(let t=0;t<s;t++)for(let e=0;e<a;e++){var w=C+e+o*t,E=C+e+o*(t+1),S=C+(e+1)+o*(t+1),T=C+(e+1)+o*t;A.push(w,E,T),A.push(E,S,T),l+=6}L.addGroup(I,l,p),I+=l,C+=x}s("z","y","x",-1,-1,r,t,e,a,i,0),s("z","y","x",1,-1,r,t,-e,a,i,1),s("x","z","y",1,1,e,r,t,n,a,2),s("x","z","y",1,-1,e,r,-t,n,a,3),s("x","y","z",1,-1,e,t,r,n,i,4),s("x","y","z",-1,-1,e,t,-r,n,i,5),this.setIndex(A),this.setAttribute("position",new V(P,3)),this.setAttribute("normal",new V(D,3)),this.setAttribute("uv",new V(R,2))}static fromJSON(e){return new li(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function hi(e){const t={};for(const r in e){t[r]={};for(const n in e[r]){const i=e[r][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[r][n]=i.clone():Array.isArray(i)?t[r][n]=i.slice():t[r][n]=i}}return t}function ci(t){const r={};for(let e=0;e<t.length;e++){var n=hi(t[e]);for(const i in n)r[i]=n[i]}return r}const ui={clone:hi,merge:ci};class di extends bn{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=hi(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const r={};for(const a in this.extensions)!0===this.extensions[a]&&(r[a]=!0);return 0<Object.keys(r).length&&(t.extensions=r),t}}di.prototype.isShaderMaterial=!0;class pi extends M{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Le,this.projectionMatrix=new Le,this.projectionMatrixInverse=new Le}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}pi.prototype.isCamera=!0;class mi extends pi{constructor(e=50,t=1,r=.1,n=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=r,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*St*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*Et*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*St*Math.atan(Math.tan(.5*Et*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,r,n,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*Et*this.fov)/this.zoom,r=2*t,n=this.aspect*r,i=-.5*n;var a,s=this.view,o=(null!==this.view&&this.view.enabled&&(o=s.fullWidth,a=s.fullHeight,i+=s.offsetX*n/o,t-=s.offsetY*r/a,n*=s.width/o,r*=s.height/a),this.filmOffset);0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+n,t,t-r,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}mi.prototype.isPerspectiveCamera=!0;class fi extends M{constructor(e,t,r){if(super(),this.type="CubeCamera",!0===r.isWebGLCubeRenderTarget){this.renderTarget=r;const n=new mi(90,1,e,t),i=(n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new Ce(1,0,0)),this.add(n),new mi(90,1,e,t)),a=(i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new Ce(-1,0,0)),this.add(i),new mi(90,1,e,t)),s=(a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new Ce(0,1,0)),this.add(a),new mi(90,1,e,t)),o=(s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new Ce(0,-1,0)),this.add(s),new mi(90,1,e,t)),l=(o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new Ce(0,0,1)),this.add(o),new mi(90,1,e,t));l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new Ce(0,0,-1)),this.add(l)}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}update(e,t){null===this.parent&&this.updateMatrixWorld();const r=this.renderTarget;var[n,i,a,s,o,l]=this.children,h=e.getRenderTarget(),c=e.outputEncoding,u=e.toneMapping,d=e.xr.enabled,p=(e.outputEncoding=dt,e.toneMapping=Ne,e.xr.enabled=!1,r.texture.generateMipmaps);r.texture.generateMipmaps=!1,e.setRenderTarget(r,0),e.render(t,n),e.setRenderTarget(r,1),e.render(t,i),e.setRenderTarget(r,2),e.render(t,a),e.setRenderTarget(r,3),e.render(t,s),e.setRenderTarget(r,4),e.render(t,o),r.texture.generateMipmaps=p,e.setRenderTarget(r,5),e.render(t,l),e.setRenderTarget(h),e.outputEncoding=c,e.toneMapping=u,e.xr.enabled=d,r.texture.needsPMREMUpdate=!0}}class gi extends er{constructor(e,t,r,n,i,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:w,r,n,i,a,s,o,l,h),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}gi.prototype.isCubeTexture=!0;class vi extends rr{constructor(e,t={}){super(e,e,t);e={width:e,height:e,depth:1},e=[e,e,e,e,e,e];this.texture=new gi(e,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Ue}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var r={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new li(5,5,5);const i=new di({name:"CubemapFromEquirect",uniforms:hi(r.uniforms),vertexShader:r.vertexShader,fragmentShader:r.fragmentShader,side:De,blending:Z}),a=(i.uniforms.tEquirect.value=t,new si(n,i));r=t.minFilter;t.minFilter===Fe&&(t.minFilter=Ue);const s=new fi(1,10,this);return s.update(e,a),t.minFilter=r,a.geometry.dispose(),a.material.dispose(),this}clear(t,r,n,i){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(r,n,i);t.setRenderTarget(e)}}vi.prototype.isWebGLCubeRenderTarget=!0;const yi=new Ce,_i=new Ce,xi=new Nt;class Mi{constructor(e=new Ce(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,r,n){return this.normal.set(e,t,r),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,r){r=yi.subVectors(r,t).cross(_i.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){var r=e.delta(yi),n=this.normal.dot(r);if(0===n)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;n=-(e.start.dot(this.normal)+this.constant)/n;return n<0||1<n?null:t.copy(r).multiplyScalar(n).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||xi.getNormalMatrix(e);const r=this.coplanarPoint(yi).applyMatrix4(e);e=this.normal.applyMatrix3(t).normalize();return this.constant=-r.dot(e),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Mi.prototype.isPlane=!0;const bi=new Lr,wi=new Ce;class Ei{constructor(e=new Mi,t=new Mi,r=new Mi,n=new Mi,i=new Mi,a=new Mi){this.planes=[e,t,r,n,i,a]}set(e,t,r,n,i,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(r),s[3].copy(n),s[4].copy(i),s[5].copy(a),this}copy(t){const r=this.planes;for(let e=0;e<6;e++)r[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){const t=this.planes;var e=e.elements,r=e[0],n=e[1],i=e[2],a=e[3],s=e[4],o=e[5],c=e[6],l=e[7],u=e[8],d=e[9],p=e[10],h=e[11],m=e[12],f=e[13],g=e[14],e=e[15];return t[0].setComponents(a-r,l-s,h-u,e-m).normalize(),t[1].setComponents(a+r,l+s,h+u,e+m).normalize(),t[2].setComponents(a+n,l+o,h+d,e+f).normalize(),t[3].setComponents(a-n,l-o,h-d,e-f).normalize(),t[4].setComponents(a-i,l-c,h-p,e-g).normalize(),t[5].setComponents(a+i,l+c,h+p,e+g).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),bi.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(bi)}intersectsSprite(e){return bi.center.set(0,0,0),bi.radius=.7071067811865476,bi.applyMatrix4(e.matrixWorld),this.intersectsSphere(bi)}intersectsSphere(e){const t=this.planes;var r=e.center,n=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(r)<n)return!1;return!0}intersectsBox(t){var r=this.planes;for(let e=0;e<6;e++){const n=r[e];if(wi.x=(0<n.normal.x?t.max:t.min).x,wi.y=(0<n.normal.y?t.max:t.min).y,wi.z=(0<n.normal.z?t.max:t.min).z,n.distanceToPoint(wi)<0)return!1}return!0}containsPoint(t){const r=this.planes;for(let e=0;e<6;e++)if(r[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Si(){let r=null,e=!1,n=null,i=null;function a(e,t){n(e,t),i=r.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==n&&(i=r.requestAnimationFrame(a),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(e){n=e},setContext:function(e){r=e}}}function Ti(o,e){const l=e.isWebGL2,h=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),h.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=h.get(e);t&&(o.deleteBuffer(t.buffer),h.delete(e))},update:function(e,t){if(e.isGLBufferAttribute)(!(r=h.get(e))||r.version<e.version)&&h.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version});else{e.isInterleavedBufferAttribute&&(e=e.data);const i=h.get(e);if(void 0===i)h.set(e,function(e,t){var r=e.array,n=e.usage,i=o.createBuffer();o.bindBuffer(t,i),o.bufferData(t,r,n),e.onUploadCallback();let a;if(r instanceof Float32Array)a=o.FLOAT;else if(r instanceof Uint16Array)if(e.isFloat16BufferAttribute){if(!l)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");a=o.HALF_FLOAT}else a=o.UNSIGNED_SHORT;else if(r instanceof Int16Array)a=o.SHORT;else if(r instanceof Uint32Array)a=o.UNSIGNED_INT;else if(r instanceof Int32Array)a=o.INT;else if(r instanceof Int8Array)a=o.BYTE;else if(r instanceof Uint8Array)a=o.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);a=o.UNSIGNED_BYTE}return{buffer:i,type:a,bytesPerElement:r.BYTES_PER_ELEMENT,version:e.version}}(e,t));else if(i.version<e.version){{var r=i.buffer;var n=e;const a=n.array,s=n.updateRange;o.bindBuffer(t,r),-1===s.count?o.bufferSubData(t,0,a):(l?o.bufferSubData(t,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):o.bufferSubData(t,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1)}i.version=e.version}}}}}class Ai extends T{constructor(e=1,t=1,r=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:r,heightSegments:n};var c=e/2,u=t/2,i=Math.floor(r),a=Math.floor(n),s=i+1,d=a+1,p=e/i,m=t/a;const o=[],l=[],f=[],h=[];for(let t=0;t<d;t++){var g=t*m-u;for(let e=0;e<s;e++){var v=e*p-c;l.push(v,-g,0),f.push(0,0,1),h.push(e/i),h.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<i;e++){var y=e+s*t,_=e+s*(t+1),x=e+1+s*(t+1),M=e+1+s*t;o.push(y,_,M),o.push(_,x,M)}this.setIndex(o),this.setAttribute("position",new V(l,3)),this.setAttribute("normal",new V(f,3)),this.setAttribute("uv",new V(h,2))}static fromJSON(e){return new Ai(e.width,e.height,e.widthSegments,e.heightSegments)}}const b={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARCOLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vUv ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(\t\t0, 1,\t\t0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 sampledDiffuseColor = texture2D( map, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\n\t#endif\n\tdiffuseColor *= sampledDiffuseColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t\tf.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(\t1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,\t1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,\t1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationColor, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef texture2DLodEXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},N={common:{diffuse:{value:new x(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Nt},uv2Transform:{value:new Nt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Re(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new x(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new x(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Nt}},sprite:{diffuse:{value:new x(16777215)},opacity:{value:1},center:{value:new Re(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Nt}}},Ri={basic:{uniforms:ci([N.common,N.specularmap,N.envmap,N.aomap,N.lightmap,N.fog]),vertexShader:b.meshbasic_vert,fragmentShader:b.meshbasic_frag},lambert:{uniforms:ci([N.common,N.specularmap,N.envmap,N.aomap,N.lightmap,N.emissivemap,N.fog,N.lights,{emissive:{value:new x(0)}}]),vertexShader:b.meshlambert_vert,fragmentShader:b.meshlambert_frag},phong:{uniforms:ci([N.common,N.specularmap,N.envmap,N.aomap,N.lightmap,N.emissivemap,N.bumpmap,N.normalmap,N.displacementmap,N.fog,N.lights,{emissive:{value:new x(0)},specular:{value:new x(1118481)},shininess:{value:30}}]),vertexShader:b.meshphong_vert,fragmentShader:b.meshphong_frag},standard:{uniforms:ci([N.common,N.envmap,N.aomap,N.lightmap,N.emissivemap,N.bumpmap,N.normalmap,N.displacementmap,N.roughnessmap,N.metalnessmap,N.fog,N.lights,{emissive:{value:new x(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:b.meshphysical_vert,fragmentShader:b.meshphysical_frag},toon:{uniforms:ci([N.common,N.aomap,N.lightmap,N.emissivemap,N.bumpmap,N.normalmap,N.displacementmap,N.gradientmap,N.fog,N.lights,{emissive:{value:new x(0)}}]),vertexShader:b.meshtoon_vert,fragmentShader:b.meshtoon_frag},matcap:{uniforms:ci([N.common,N.bumpmap,N.normalmap,N.displacementmap,N.fog,{matcap:{value:null}}]),vertexShader:b.meshmatcap_vert,fragmentShader:b.meshmatcap_frag},points:{uniforms:ci([N.points,N.fog]),vertexShader:b.points_vert,fragmentShader:b.points_frag},dashed:{uniforms:ci([N.common,N.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:b.linedashed_vert,fragmentShader:b.linedashed_frag},depth:{uniforms:ci([N.common,N.displacementmap]),vertexShader:b.depth_vert,fragmentShader:b.depth_frag},normal:{uniforms:ci([N.common,N.bumpmap,N.normalmap,N.displacementmap,{opacity:{value:1}}]),vertexShader:b.meshnormal_vert,fragmentShader:b.meshnormal_frag},sprite:{uniforms:ci([N.sprite,N.fog]),vertexShader:b.sprite_vert,fragmentShader:b.sprite_frag},background:{uniforms:{uvTransform:{value:new Nt},t2D:{value:null}},vertexShader:b.background_vert,fragmentShader:b.background_frag},cube:{uniforms:ci([N.envmap,{opacity:{value:1}}]),vertexShader:b.cube_vert,fragmentShader:b.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:b.equirect_vert,fragmentShader:b.equirect_frag},distanceRGBA:{uniforms:ci([N.common,N.displacementmap,{referencePosition:{value:new Ce},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:b.distanceRGBA_vert,fragmentShader:b.distanceRGBA_frag},shadow:{uniforms:ci([N.lights,N.fog,{color:{value:new x(0)},opacity:{value:1}}]),vertexShader:b.shadow_vert,fragmentShader:b.shadow_frag}};function Ci(a,f,r,s,e,n){const o=new x(0);let l=!0===e?0:1,h,c,u=null,d=0,p=null;function m(e,t){r.buffers.color.setClear(e.r,e.g,e.b,t,n)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),l=t,m(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(e){l=e,m(o,l)},render:function(e,t){let r=!1,n=!0===t.isScene?t.background:null;n&&n.isTexture&&(n=f.get(n));const i=a.xr;t=i.getSession&&i.getSession(),null===(n=t&&"additive"===t.environmentBlendMode?null:n)?m(o,l):n&&n.isColor&&(m(n,1),r=!0),(a.autoClear||r)&&a.clear(a.autoClearColor,a.autoClearDepth,a.autoClearStencil),n&&(n.isCubeTexture||n.mapping===U)?(void 0===c&&((c=new si(new li(1,1,1),new di({name:"BackgroundCubeMaterial",uniforms:hi(Ri.cube.uniforms),vertexShader:Ri.cube.vertexShader,fragmentShader:Ri.cube.fragmentShader,side:De,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(e,t,r){this.matrixWorld.copyPosition(r.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),s.update(c)),c.material.uniforms.envMap.value=n,c.material.uniforms.flipEnvMap.value=n.isCubeTexture&&!1===n.isRenderTargetTexture?-1:1,u===n&&d===n.version&&p===a.toneMapping||(c.material.needsUpdate=!0,u=n,d=n.version,p=a.toneMapping),e.unshift(c,c.geometry,c.material,0,0,null)):n&&n.isTexture&&(void 0===h&&((h=new si(new Ai(2,2),new di({name:"BackgroundMaterial",uniforms:hi(Ri.background.uniforms),vertexShader:Ri.background.vertexShader,fragmentShader:Ri.background.fragmentShader,side:Pe,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),s.update(h)),!0===(h.material.uniforms.t2D.value=n).matrixAutoUpdate&&n.updateMatrix(),h.material.uniforms.uvTransform.value.copy(n.matrix),u===n&&d===n.version&&p===a.toneMapping||(h.material.needsUpdate=!0,u=n,d=n.version,p=a.toneMapping),e.unshift(h,h.geometry,h.material,0,0,null))}}}function Li(_,x,M,b){const i=_.getParameter(_.MAX_VERTEX_ATTRIBS),d=b.isWebGL2?null:x.get("OES_vertex_array_object"),g=b.isWebGL2||null!==d,p={},e=y(null);let m=e,f=!1;function v(e){return b.isWebGL2?_.bindVertexArray(e):d.bindVertexArrayOES(e)}function a(e){return b.isWebGL2?_.deleteVertexArray(e):d.deleteVertexArrayOES(e)}function y(e){const t=[],r=[],n=[];for(let e=0;e<i;e++)t[e]=0,r[e]=0,n[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:r,attributeDivisors:n,object:e,attributes:{},index:null}}function w(){const r=m.newAttributes;for(let e=0,t=r.length;e<t;e++)r[e]=0}function E(e){S(e,0)}function S(e,t){const r=m.newAttributes,n=m.enabledAttributes,i=m.attributeDivisors;if(r[e]=1,0===n[e]&&(_.enableVertexAttribArray(e),n[e]=1),i[e]!==t){const a=b.isWebGL2?_:x.get("ANGLE_instanced_arrays");a[b.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),i[e]=t}}function T(){var r=m.newAttributes;const n=m.enabledAttributes;for(let e=0,t=n.length;e<t;e++)n[e]!==r[e]&&(_.disableVertexAttribArray(e),n[e]=0)}function A(e,t,r,n,i,a){!0!==b.isWebGL2||r!==_.INT&&r!==_.UNSIGNED_INT?_.vertexAttribPointer(e,t,r,n,i,a):_.vertexAttribIPointer(e,t,r,i,a)}function s(){t(),f=!0,m!==e&&v((m=e).object)}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(c,e,t,r,n){let i=!1;if(g){var a=function(e,t,r){r=!0===r.wireframe;let n=p[e.id];void 0===n&&(n={},p[e.id]=n);let i=n[t.id];void 0===i&&(i={},n[t.id]=i);let a=i[r];void 0===a&&(a=y(b.isWebGL2?_.createVertexArray():d.createVertexArrayOES()),i[r]=a);return a}(r,t,e);if(m!==a&&v((m=a).object),i=function(e,t){var r=m.attributes,n=e.attributes;let i=0;for(const o in n){var a=r[o],s=n[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;i++}return m.attributesNum!==i||m.index!==t}(r,n)){a=n;const s={},o=r.attributes;let e=0;for(const l in o){var u=o[l];const h={};(h.attribute=u).data&&(h.data=u.data),s[l]=h,e++}m.attributes=s,m.attributesNum=e,m.index=a}}else{a=!0===e.wireframe;m.geometry===r.id&&m.program===t.id&&m.wireframe===a||(m.geometry=r.id,m.program=t.id,m.wireframe=a,i=!0)}!0===c.isInstancedMesh&&(i=!0),null!==n&&M.update(n,_.ELEMENT_ARRAY_BUFFER),(i||f)&&(f=!1,function(e,c,u,r){if(!1===b.isWebGL2&&(e.isInstancedMesh||r.isInstancedBufferGeometry)&&null===x.get("ANGLE_instanced_arrays"))return;w();var d=r.attributes,t=u.getAttributes(),p=c.defaultAttributeValues;for(const h in t){var n=t[h];if(0<=n.location){let t=d[h];if(void 0===t&&("instanceMatrix"===h&&e.instanceMatrix&&(t=e.instanceMatrix),"instanceColor"===h&&e.instanceColor&&(t=e.instanceColor)),void 0!==t){var m=t.normalized,i=t.itemSize,a=M.get(t);if(void 0!==a){var f=a.buffer,g=a.type,s=a.bytesPerElement;if(t.isInterleavedBufferAttribute){var o=t.data,v=o.stride,y=t.offset;if(o.isInstancedInterleavedBuffer){for(let e=0;e<n.locationSize;e++)S(n.location+e,o.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=o.meshPerAttribute*o.count)}else for(let e=0;e<n.locationSize;e++)E(n.location+e);_.bindBuffer(_.ARRAY_BUFFER,f);for(let e=0;e<n.locationSize;e++)A(n.location+e,i/n.locationSize,g,m,v*s,(y+i/n.locationSize*e)*s)}else{if(t.isInstancedBufferAttribute){for(let e=0;e<n.locationSize;e++)S(n.location+e,t.meshPerAttribute);!0!==e.isInstancedMesh&&void 0===r._maxInstanceCount&&(r._maxInstanceCount=t.meshPerAttribute*t.count)}else for(let e=0;e<n.locationSize;e++)E(n.location+e);_.bindBuffer(_.ARRAY_BUFFER,f);for(let e=0;e<n.locationSize;e++)A(n.location+e,i/n.locationSize,g,m,i*s,i/n.locationSize*e*s)}}}else if(void 0!==p){var l=p[h];if(void 0!==l)switch(l.length){case 2:_.vertexAttrib2fv(n.location,l);break;case 3:_.vertexAttrib3fv(n.location,l);break;case 4:_.vertexAttrib4fv(n.location,l);break;default:_.vertexAttrib1fv(n.location,l)}}}}T()}(c,e,t,r),null!==n&&_.bindBuffer(_.ELEMENT_ARRAY_BUFFER,M.get(n).buffer))},reset:s,resetDefaultState:t,dispose:function(){s();for(const e in p){const t=p[e];for(const r in t){const n=t[r];for(const i in n)a(n[i].object),delete n[i];delete t[r]}delete p[e]}},releaseStatesOfGeometry:function(e){if(void 0!==p[e.id]){const t=p[e.id];for(const r in t){const n=t[r];for(const i in n)a(n[i].object),delete n[i];delete t[r]}delete p[e.id]}},releaseStatesOfProgram:function(e){for(const t in p){const r=p[t];if(void 0!==r[e.id]){const n=r[e.id];for(const i in n)a(n[i].object),delete n[i];delete r[e.id]}}},initAttributes:w,enableAttribute:E,disableUnusedAttributes:T}}function Pi(a,s,o,e){const l=e.isWebGL2;let h;this.setMode=function(e){h=e},this.render=function(e,t){a.drawArrays(h,e,t),o.update(t,h,1)},this.renderInstances=function(r,n,i){if(0!==i){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,r,n,i),o.update(n,h,i)}}}function Di(t,r,e){let n;function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision&&0<t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=i(s),o=(o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o),a||r.has("WEBGL_draw_buffers")),e=!0===e.logarithmicDepthBuffer,c=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),l=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=t.getParameter(t.MAX_TEXTURE_SIZE),d=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),p=t.getParameter(t.MAX_VERTEX_ATTRIBS),m=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),f=t.getParameter(t.MAX_VARYING_VECTORS),g=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),h=0<l,v=a||r.has("OES_texture_float"),y=h&&v,_=a?t.getParameter(t.MAX_SAMPLES):0;return{isWebGL2:a,drawBuffers:o,getMaxAnisotropy:function(){return void 0!==n?n:n=!0===r.has("EXT_texture_filter_anisotropic")?(e=r.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0;var e},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:e,maxTextures:c,maxVertexTextures:l,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:h,floatFragmentTextures:v,floatVertexTextures:y,maxSamples:_}}function Ii(v){const o=this;let l=null,h=0,c=!1,u=!1;const d=new Mi,p=new Nt,m={value:null,needsUpdate:!1};function f(){m.value!==l&&(m.value=l,m.needsUpdate=0<h),o.numPlanes=h,o.numIntersection=0}function g(r,e,n,t){var i=null!==r?r.length:0;let a=null;if(0!==i){if(a=m.value,!0!==t||null===a){var t=n+4*i,s=e.matrixWorldInverse;p.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=n;e!==i;++e,t+=4)d.copy(r[e]).applyMatrix4(s,p),d.normal.toArray(a,t),a[t+3]=d.constant}m.value=a,m.needsUpdate=!0}return o.numPlanes=i,o.numIntersection=0,a}this.uniform=m,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,r){var n=0!==e.length||t||0!==h||c;return c=t,l=g(e,r,0),h=e.length,n},this.beginShadows=function(){u=!0,g(null)},this.endShadows=function(){u=!1,f()},this.setState=function(e,r,n){var i=e.clippingPlanes,a=e.clipIntersection,t=e.clipShadows;const s=v.get(e);if(!c||null===i||0===i.length||u&&!t)u?g(null):f();else{var e=u?0:h,o=4*e;let t=s.clippingState||null;m.value=t,t=g(i,r,o,n);for(let e=0;e!==o;++e)t[e]=l[e];s.clippingState=t,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=e}}}function Ni(n){let i=new WeakMap;function a(e,t){return t===l?e.mapping=w:t===h&&(e.mapping=E),e}function s(e){const t=e.target,r=(t.removeEventListener("dispose",s),i.get(t));void 0!==r&&(i.delete(t),r.dispose())}return{get:function(e){if(e&&e.isTexture&&!1===e.isRenderTargetTexture){var t=e.mapping;if(t===l||t===h){if(i.has(e))return a(i.get(e).texture,e.mapping);t=e.image;if(t&&0<t.height){const r=new vi(t.height/2);return r.fromEquirectangularTexture(n,e),i.set(e,r),e.addEventListener("dispose",s),a(r.texture,e.mapping)}return null}}return e},dispose:function(){i=new WeakMap}}}Ri.physical={uniforms:ci([Ri.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Re(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new x(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Re},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new x(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new x(1,1,1)},specularColorMap:{value:null}}]),vertexShader:b.meshphysical_vert,fragmentShader:b.meshphysical_frag};class Ui extends pi{constructor(e=-1,t=1,r=1,n=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=r,this.bottom=n,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,r,n,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=r,this.view.offsetY=n,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let i=r-e,a=r+e,s=n+t,o=n-t;null!==this.view&&this.view.enabled&&(r=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom,i+=r*this.view.offsetX,a=i+r*this.view.width,s-=e*this.view.offsetY,o=s-e*this.view.height),this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}Ui.prototype.isOrthographicCamera=!0;const Oi=[.125,.215,.35,.446,.526,.582],Fi=new Ui,Bi=new x;let Hi=null;var zi=(1+Math.sqrt(5))/2,Gi=1/zi;const Vi=[new Ce(1,1,1),new Ce(-1,1,1),new Ce(1,1,-1),new Ce(-1,1,-1),new Ce(0,zi,Gi),new Ce(0,zi,-Gi),new Ce(Gi,0,zi),new Ce(-Gi,0,zi),new Ce(zi,Gi,0),new Ce(-zi,Gi,0)];class ki{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,r=.1,n=100){Hi=this._renderer.getRenderTarget(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,r,n,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=qi(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Xi(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Hi),e.scissorTest=!1,ji(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===w||e.mapping===E?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Hi=this._renderer.getRenderTarget();t=t||this._allocateTargets();return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(){var e,t,r=3*Math.max(this._cubeSize,112),n=4*this._cubeSize-32,i={magFilter:Ue,minFilter:Ue,generateMipmaps:!1,type:Ve,format:We,encoding:dt,depthBuffer:!1},a=Wi(r,n,i);return null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.width===r||(null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Wi(r,n,i),i=this["_lodMax"],{sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(r){const d=[],p=[],m=[];let n=r;var e=r-4+1+Oi.length;for(let t=0;t<e;t++){var i=Math.pow(2,n);p.push(i);let e=1/i;t>r-4?e=Oi[t-r+4-1]:0===t&&(e=0),m.push(e);var i=1/(i-1),a=-i/2,i=1+i/2,f=[a,a,i,a,i,i,a,a,i,i,a,i];const l=new Float32Array(108),h=new Float32Array(72),c=new Float32Array(36);for(let e=0;e<6;e++){var s=e%3*2/3-1,o=2<e?0:-1,s=[s,o,0,s+2/3,o,0,s+2/3,1+o,0,s,o,0,s+2/3,1+o,0,s,1+o,0],o=(l.set(s,18*e),h.set(f,12*e),[e,e,e,e,e,e]);c.set(o,6*e)}const u=new T;u.setAttribute("position",new Tn(l,3)),u.setAttribute("uv",new Tn(h,2)),u.setAttribute("faceIndex",new Tn(c,1)),d.push(u),4<n&&n--}return{lodPlanes:d,sizeLods:p,sigmas:m}}(i),this._blurMaterial=(i=i,r=r,n=n,e=new Float32Array(20),t=new Ce(0,1,0),r=new di({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/r,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:i+".0"},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:e},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:t}},vertexShader:Yi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Z,depthTest:!1,depthWrite:!1}))),a}_compileMaterial(e){e=new si(this._lodPlanes[0],e);this._renderer.compile(e,Fi)}_sceneToCubeUV(t,e,r,c){const n=new mi(90,1,e,r);var i=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1];const s=this._renderer;e=s.autoClear,r=s.toneMapping;s.getClearColor(Bi),s.toneMapping=Ne,s.autoClear=!1;const o=new wn({name:"PMREM.Background",side:De,depthWrite:!1,depthTest:!1}),u=new si(new li,o);let d=!1;var l=t.background;l?l.isColor&&(o.color.copy(l),t.background=null,d=!0):(o.color.copy(Bi),d=!0);for(let e=0;e<6;e++){var p=e%3,h=(0==p?(n.up.set(0,i[e],0),n.lookAt(a[e],0,0)):1==p?(n.up.set(0,0,i[e]),n.lookAt(0,a[e],0)):(n.up.set(0,i[e],0),n.lookAt(0,0,a[e])),this._cubeSize);ji(c,p*h,2<e?h:0,h,h),s.setRenderTarget(c),d&&s.render(u,n),s.render(t,n)}u.geometry.dispose(),u.material.dispose(),s.toneMapping=r,s.autoClear=e,t.background=l}_textureToCubeUV(e,t){const r=this._renderer;var n=e.mapping===w||e.mapping===E,n=(n?(null===this._cubemapMaterial&&(this._cubemapMaterial=qi()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Xi()),n?this._cubemapMaterial:this._equirectMaterial),i=new si(this._lodPlanes[0],n);const a=n.uniforms;a.envMap.value=e;n=this._cubeSize;ji(t,0,0,3*n,2*n),r.setRenderTarget(t),r.render(i,Fi)}_applyPMREM(t){const e=this._renderer;var r=e.autoClear;e.autoClear=!1;for(let e=1;e<this._lodPlanes.length;e++){var n=Math.sqrt(this._sigmas[e]*this._sigmas[e]-this._sigmas[e-1]*this._sigmas[e-1]),i=Vi[(e-1)%Vi.length];this._blur(t,e-1,e,n,i)}e.autoClear=r}_blur(e,t,r,n,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,r,n,"latitudinal",i),this._halfBlur(a,e,r,r,n,"longitudinal",i)}_halfBlur(e,c,u,t,r,n,d){const p=this._renderer;var i=this._blurMaterial,m=("latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!"),new si(this._lodPlanes[t],i));const a=i.uniforms;var i=this._sizeLods[u]-1,i=isFinite(r)?Math.PI/(2*i):2*Math.PI/39,f=r/i,s=isFinite(r)?1+Math.floor(3*f):20;20<s&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${s} samples when the maximum is set to 20`);const o=[];let l=0;for(let e=0;e<20;++e){const h=e/f;var g=Math.exp(-h*h/2);o.push(g),0===e?l+=g:e<s&&(l+=2*g)}for(let e=0;e<o.length;e++)o[e]=o[e]/l;a.envMap.value=e.texture,a.samples.value=s,a.weights.value=o,a.latitudinal.value="latitudinal"===n,d&&(a.poleAxis.value=d);r=this._lodMax,a.dTheta.value=i,a.mipInt.value=r-u,e=this._sizeLods[t];const h=3*e*(r-4<t?t-r+4:0);n=4*(this._cubeSize-e);ji(c,h,n,3*e,2*e),p.setRenderTarget(c),p.render(m,Fi)}}function Wi(e,t,r){const n=new rr(e,t,r);return n.texture.mapping=U,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ji(e,t,r,n,i){e.viewport.set(t,r,n,i),e.scissor.set(t,r,n,i)}function Xi(){return new di({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Yi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})}function qi(){return new di({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Yi(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})}function Yi(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Ji(i){let a=new WeakMap,s=null;function o(e){const t=e.target,r=(t.removeEventListener("dispose",o),a.get(t));void 0!==r&&(a.delete(t),r.dispose())}return{get:function(t){if(t&&t.isTexture){var e,r=t.mapping,n=r===l||r===h,r=r===w||r===E;if(n||r){if(t.isRenderTargetTexture&&!0===t.needsPMREMUpdate){t.needsPMREMUpdate=!1;let e=a.get(t);return null===s&&(s=new ki(i)),e=n?s.fromEquirectangular(t,e):s.fromCubemap(t,e),a.set(t,e),e.texture}return a.has(t)?a.get(t).texture:(e=t.image,n&&e&&0<e.height||r&&e&&function(t){let r=0;for(let e=0;e<6;e++)void 0!==t[e]&&r++;return 6===r}(e)?(null===s&&(s=new ki(i)),r=n?s.fromEquirectangular(t):s.fromCubemap(t),a.set(t,r),t.addEventListener("dispose",o),r.texture):null)}}return t},dispose:function(){a=new WeakMap,null!==s&&(s.dispose(),s=null)}}}function Zi(r){const n={};function i(e){if(void 0!==n[e])return n[e];let t;switch(e){case"WEBGL_depth_texture":t=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=r.getExtension(e)}return n[e]=t}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float"),i("WEBGL_multisampled_render_to_texture")},get:function(e){var t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Ki(s,p,n,i){const a={},m=new WeakMap;function o(e){const t=e.target;null!==t.index&&p.remove(t.index);for(const r in t.attributes)p.remove(t.attributes[r]);t.removeEventListener("dispose",o),delete a[t.id];e=m.get(t);e&&(p.remove(e),m.delete(t)),i.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,n.memory.geometries--}function l(e){const r=[];var n=e.index,t=e.attributes.position;let i=0;if(null!==n){var a=n.array;i=n.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];r.push(s,o,o,l,l,s)}}else{n=t.array;i=t.version;for(let e=0,t=n.length/3-1;e<t;e+=3){var h=e+0,c=e+1,u=e+2;r.push(h,c,c,u,u,h)}}const d=new(Ut(r)?In:Pn)(r,1);d.version=i;t=m.get(e);t&&p.remove(t),m.set(e,d)}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",o),a[t.id]=!0,n.memory.geometries++),t},update:function(e){var t=e.attributes;for(const i in t)p.update(t[i],s.ARRAY_BUFFER);var r=e.morphAttributes;for(const a in r){var n=r[a];for(let e=0,t=n.length;e<t;e++)p.update(n[e],s.ARRAY_BUFFER)}},getWireframeAttribute:function(e){var t,r=m.get(e);return(!r||null!==(t=e.index)&&r.version<t.version)&&l(e),m.get(e)}}}function Qi(a,s,o,e){const l=e.isWebGL2;let h;let c,u;this.setMode=function(e){h=e},this.setIndex=function(e){c=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(h,t,c,e*u),o.update(t,h,1)},this.renderInstances=function(r,n,i){if(0!==i){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,n,c,r*u,i),o.update(n,h,i)}}}function $i(n){const i={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:i,programs:null,autoReset:!0,reset:function(){i.frame++,i.calls=0,i.triangles=0,i.points=0,i.lines=0},update:function(e,t,r){switch(i.calls++,t){case n.TRIANGLES:i.triangles+=r*(e/3);break;case n.LINES:i.lines+=r*(e/2);break;case n.LINE_STRIP:i.lines+=r*(e-1);break;case n.LINE_LOOP:i.lines+=r*e;break;case n.POINTS:i.points+=r*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function ea(e,t){return e[0]-t[0]}function ta(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ra(e,t){let r=1;t=(t.isInterleavedBufferAttribute?t.data:t).array;t instanceof Int8Array?r=127:t instanceof Int16Array?r=32767:t instanceof Int32Array?r=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",t),e.divideScalar(r)}function na(A,R,r){const C={},L=new Float32Array(8),P=new WeakMap,D=new tr,I=[];for(let e=0;e<8;e++)I[e]=[e,0];return{update:function(e,i,t,a){var s=e.morphTargetInfluences;if(!0===R.isWebGL2){var e=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,o=void 0!==e?e.length:0;let n=P.get(i);if(void 0===n||n.count!==o){void 0!==n&&n.texture.dispose();var d=void 0!==i.morphAttributes.position,p=void 0!==i.morphAttributes.normal,m=void 0!==i.morphAttributes.color,f=i.morphAttributes.position||[],g=i.morphAttributes.normal||[],v=i.morphAttributes.color||[];let e=!0==m?3:!0==p?2:!0==d?1:0,t=i.attributes.position.count*e,r=1;t>R.maxTextureSize&&(r=Math.ceil(t/R.maxTextureSize),t=R.maxTextureSize);const u=new Float32Array(t*r*4*o),S=new nr(u,t,r,o);S.type=Ge,S.needsUpdate=!0;var y=4*e;for(let e=0;e<o;e++){var _=f[e],x=g[e],M=v[e],l=t*r*4*e;for(let e=0;e<_.count;e++){var h=e*y;!0==d&&(D.fromBufferAttribute(_,e),!0===_.normalized&&ra(D,_),u[l+h]=D.x,u[l+h+1]=D.y,u[l+h+2]=D.z,u[l+h+3]=0),!0==p&&(D.fromBufferAttribute(x,e),!0===x.normalized&&ra(D,x),u[l+h+4]=D.x,u[l+h+5]=D.y,u[l+h+6]=D.z,u[l+h+7]=0),!0==m&&(D.fromBufferAttribute(M,e),!0===M.normalized&&ra(D,M),u[l+h+8]=D.x,u[l+h+9]=D.y,u[l+h+10]=D.z,u[l+h+11]=4===M.itemSize?D.w:1)}}n={count:o,texture:S,size:new Re(t,r)},P.set(i,n),i.addEventListener("dispose",function e(){S.dispose(),P.delete(i),i.removeEventListener("dispose",e)})}let t=0;for(let e=0;e<s.length;e++)t+=s[e];e=i.morphTargetsRelative?1:1-t;a.getUniforms().setValue(A,"morphTargetBaseInfluence",e),a.getUniforms().setValue(A,"morphTargetInfluences",s),a.getUniforms().setValue(A,"morphTargetsTexture",n.texture,r),a.getUniforms().setValue(A,"morphTargetsTextureSize",n.size)}else{var b=void 0===s?0:s.length;let t=C[i.id];if(void 0===t||t.length!==b){t=[];for(let e=0;e<b;e++)t[e]=[e,0];C[i.id]=t}for(let e=0;e<b;e++){const T=t[e];T[0]=e,T[1]=s[e]}t.sort(ta);for(let e=0;e<8;e++)e<b&&t[e][1]?(I[e][0]=t[e][0],I[e][1]=t[e][1]):(I[e][0]=Number.MAX_SAFE_INTEGER,I[e][1]=0);I.sort(ea);var w=i.morphAttributes.position,E=i.morphAttributes.normal;let r=0;for(let e=0;e<8;e++){var n=I[e],c=n[0],n=n[1];c!==Number.MAX_SAFE_INTEGER&&n?(w&&i.getAttribute("morphTarget"+e)!==w[c]&&i.setAttribute("morphTarget"+e,w[c]),E&&i.getAttribute("morphNormal"+e)!==E[c]&&i.setAttribute("morphNormal"+e,E[c]),L[e]=n,r+=n):(w&&!0===i.hasAttribute("morphTarget"+e)&&i.deleteAttribute("morphTarget"+e),E&&!0===i.hasAttribute("morphNormal"+e)&&i.deleteAttribute("morphNormal"+e),L[e]=0)}e=i.morphTargetsRelative?1:1-r;a.getUniforms().setValue(A,"morphTargetBaseInfluence",e),a.getUniforms().setValue(A,"morphTargetInfluences",L)}}}}function ia(n,i,a,s){let o=new WeakMap;function l(e){const t=e.target;t.removeEventListener("dispose",l),a.remove(t.instanceMatrix),null!==t.instanceColor&&a.remove(t.instanceColor)}return{update:function(e){var t=s.render.frame,r=e.geometry,r=i.get(e,r);return o.get(r)!==t&&(i.update(r),o.set(r,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",l)&&e.addEventListener("dispose",l),a.update(e.instanceMatrix,n.ARRAY_BUFFER),null!==e.instanceColor&&a.update(e.instanceColor,n.ARRAY_BUFFER)),r},dispose:function(){o=new WeakMap}}}const aa=new er,sa=new nr,oa=new ar,la=new gi,ha=[],ca=[],ua=new Float32Array(16),da=new Float32Array(9),pa=new Float32Array(4);function ma(r,n,i){const e=r[0];if(e<=0||0<e)return r;var t=n*i;let a=ha[t];if(void 0===a&&(a=new Float32Array(t),ha[t]=a),0!==n){e.toArray(a,0);for(let e=1,t=0;e!==n;++e)t+=i,r[e].toArray(a,t)}return a}function fa(r,n){if(r.length===n.length){for(let e=0,t=r.length;e<t;e++)if(r[e]!==n[e])return;return 1}}function ga(r,n){for(let e=0,t=n.length;e<t;e++)r[e]=n[e]}function va(t,r){let n=ca[r];void 0===n&&(n=new Int32Array(r),ca[r]=n);for(let e=0;e!==r;++e)n[e]=t.allocateTextureUnit();return n}function ya(e,t){const r=this.cache;r[0]!==t&&(e.uniform1f(this.addr,t),r[0]=t)}function _a(e,t){const r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),r[0]=t.x,r[1]=t.y):fa(r,t)||(e.uniform2fv(this.addr,t),ga(r,t))}function xa(e,t){const r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),r[0]=t.x,r[1]=t.y,r[2]=t.z):void 0!==t.r?r[0]===t.r&&r[1]===t.g&&r[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),r[0]=t.r,r[1]=t.g,r[2]=t.b):fa(r,t)||(e.uniform3fv(this.addr,t),ga(r,t))}function Ma(e,t){const r=this.cache;void 0!==t.x?r[0]===t.x&&r[1]===t.y&&r[2]===t.z&&r[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),r[0]=t.x,r[1]=t.y,r[2]=t.z,r[3]=t.w):fa(r,t)||(e.uniform4fv(this.addr,t),ga(r,t))}function ba(e,t){var r=this.cache,n=t.elements;void 0===n?fa(r,t)||(e.uniformMatrix2fv(this.addr,!1,t),ga(r,t)):fa(r,n)||(pa.set(n),e.uniformMatrix2fv(this.addr,!1,pa),ga(r,n))}function wa(e,t){var r=this.cache,n=t.elements;void 0===n?fa(r,t)||(e.uniformMatrix3fv(this.addr,!1,t),ga(r,t)):fa(r,n)||(da.set(n),e.uniformMatrix3fv(this.addr,!1,da),ga(r,n))}function Ea(e,t){var r=this.cache,n=t.elements;void 0===n?fa(r,t)||(e.uniformMatrix4fv(this.addr,!1,t),ga(r,t)):fa(r,n)||(ua.set(n),e.uniformMatrix4fv(this.addr,!1,ua),ga(r,n))}function Sa(e,t){const r=this.cache;r[0]!==t&&(e.uniform1i(this.addr,t),r[0]=t)}function Ta(e,t){var r=this.cache;fa(r,t)||(e.uniform2iv(this.addr,t),ga(r,t))}function Aa(e,t){var r=this.cache;fa(r,t)||(e.uniform3iv(this.addr,t),ga(r,t))}function Ra(e,t){var r=this.cache;fa(r,t)||(e.uniform4iv(this.addr,t),ga(r,t))}function Ca(e,t){const r=this.cache;r[0]!==t&&(e.uniform1ui(this.addr,t),r[0]=t)}function La(e,t){var r=this.cache;fa(r,t)||(e.uniform2uiv(this.addr,t),ga(r,t))}function Pa(e,t){var r=this.cache;fa(r,t)||(e.uniform3uiv(this.addr,t),ga(r,t))}function Da(e,t){var r=this.cache;fa(r,t)||(e.uniform4uiv(this.addr,t),ga(r,t))}function Ia(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2D(t||aa,i)}function Na(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture3D(t||oa,i)}function Ua(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTextureCube(t||la,i)}function Oa(e,t,r){const n=this.cache;var i=r.allocateTextureUnit();n[0]!==i&&(e.uniform1i(this.addr,i),n[0]=i),r.setTexture2DArray(t||sa,i)}function Fa(e,t){e.uniform1fv(this.addr,t)}function Ba(e,t){t=ma(t,this.size,2);e.uniform2fv(this.addr,t)}function Ha(e,t){t=ma(t,this.size,3);e.uniform3fv(this.addr,t)}function za(e,t){t=ma(t,this.size,4);e.uniform4fv(this.addr,t)}function Ga(e,t){t=ma(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Va(e,t){t=ma(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function ka(e,t){t=ma(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Wa(e,t){e.uniform1iv(this.addr,t)}function ja(e,t){e.uniform2iv(this.addr,t)}function Xa(e,t){e.uniform3iv(this.addr,t)}function qa(e,t){e.uniform4iv(this.addr,t)}function Ya(e,t){e.uniform1uiv(this.addr,t)}function Ja(e,t){e.uniform2uiv(this.addr,t)}function Za(e,t){e.uniform3uiv(this.addr,t)}function Ka(e,t){e.uniform4uiv(this.addr,t)}function Qa(e,t,r){var n=t.length,i=va(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.setTexture2D(t[e]||aa,i[e])}function $a(e,t,r){var n=t.length,i=va(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.setTexture3D(t[e]||oa,i[e])}function es(e,t,r){var n=t.length,i=va(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.setTextureCube(t[e]||la,i[e])}function ts(e,t,r){var n=t.length,i=va(r,n);e.uniform1iv(this.addr,i);for(let e=0;e!==n;++e)r.setTexture2DArray(t[e]||sa,i[e])}function rs(e,t,r){this.id=e,this.addr=r,this.cache=[],this.setValue=function(e){switch(e){case 5126:return ya;case 35664:return _a;case 35665:return xa;case 35666:return Ma;case 35674:return ba;case 35675:return wa;case 35676:return Ea;case 5124:case 35670:return Sa;case 35667:case 35671:return Ta;case 35668:case 35672:return Aa;case 35669:case 35673:return Ra;case 5125:return Ca;case 36294:return La;case 36295:return Pa;case 36296:return Da;case 35678:case 36198:case 36298:case 36306:case 35682:return Ia;case 35679:case 36299:case 36307:return Na;case 35680:case 36300:case 36308:case 36293:return Ua;case 36289:case 36303:case 36311:case 36292:return Oa}}(t.type)}function ns(e,t,r){this.id=e,this.addr=r,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Fa;case 35664:return Ba;case 35665:return Ha;case 35666:return za;case 35674:return Ga;case 35675:return Va;case 35676:return ka;case 5124:case 35670:return Wa;case 35667:case 35671:return ja;case 35668:case 35672:return Xa;case 35669:case 35673:return qa;case 5125:return Ya;case 36294:return Ja;case 36295:return Za;case 36296:return Ka;case 35678:case 36198:case 36298:case 36306:case 35682:return Qa;case 35679:case 36299:case 36307:return $a;case 35680:case 36300:case 36308:case 36293:return es;case 36289:case 36303:case 36311:case 36292:return ts}}(t.type)}function is(e){this.id=e,this.seq=[],this.map={}}ns.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),ga(t,e)},is.prototype.setValue=function(r,n,i){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){const s=a[e];s.setValue(r,n[s.id],i)}};const as=/(\w+)(\])?(\[|\.)?/g;function ss(e,t){e.seq.push(t),e.map[t.id]=t}function os(t,r){this.seq=[],this.map={};var u=t.getProgramParameter(r,t.ACTIVE_UNIFORMS);for(let e=0;e<u;++e){var n=t.getActiveUniform(r,e),d=t.getUniformLocation(r,n.name),i=(h=p=c=h=l=o=s=a=i=void 0,n),a=d,s=this,o=i.name,l=o.length;for(as.lastIndex=0;;){var h=as.exec(o),c=as.lastIndex;let t=h[1];var p="]"===h[2],h=h[3];if(p&&(t|=0),void 0===h||"["===h&&c+2===l){ss(s,new(void 0===h?rs:ns)(t,i,a));break}{let e=s.map[t];void 0===e&&ss(s,e=new is(t)),s=e}}}}function ls(e,t,r){t=e.createShader(t);return e.shaderSource(t,r),e.compileShader(t),t}os.prototype.setValue=function(e,t,r,n){const i=this.map[t];void 0!==i&&i.setValue(e,r,n)},os.prototype.setOptional=function(e,t,r){t=t[r];void 0!==t&&this.setValue(e,r,t)},os.upload=function(r,n,i,a){for(let e=0,t=n.length;e!==t;++e){const s=n[e],o=i[s.id];!1!==o.needsUpdate&&s.setValue(r,o.value,a)}},os.seqWithValue=function(r,n){const i=[];for(let e=0,t=r.length;e!==t;++e){var a=r[e];a.id in n&&i.push(a)}return i};let hs=0;function cs(e,t,r){var n=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(n&&""===i)return"";n=parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);return r.toUpperCase()+"\n\n"+i+"\n\n"+function(t,e){var r=t.split("\n");const n=[];var t=Math.max(e-6,0),i=Math.min(e+6,r.length);for(let e=t;e<i;e++)n.push(e+1+": "+r[e]);return n.join("\n")}(e.getShaderSource(t),n)}function us(e,t){t=function(e){switch(e){case dt:return["Linear","( value )"];case pt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function ds(e){return""!==e}function ps(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ms(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const fs=/^[ \t]*#include +<([\w\d./]+)>/gm;function gs(e){return e.replace(fs,vs)}function vs(e,t){var r=b[t];if(void 0===r)throw new Error("Can not resolve #include <"+t+">");return gs(r)}const ys=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,_s=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function xs(e){return e.replace(_s,bs).replace(ys,Ms)}function Ms(e,t,r,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),bs(0,t,r,n)}function bs(e,t,r,n){let i="";for(let e=parseInt(t);e<parseInt(r);e++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function ws(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function Es(t,u,e,d){const r=t.getContext();var p=e.defines,n=e.vertexShader,i=e.fragmentShader,m=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===A?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===R&&(t="SHADOWMAP_TYPE_VSM"),t}(e),f=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case w:case E:t="ENVMAP_TYPE_CUBE";break;case U:t="ENVMAP_TYPE_CUBE_UV"}return t}(e),a=function(e){let t="ENVMAP_MODE_REFLECTION";return t=e.envMap&&e.envMapMode===E?"ENVMAP_MODE_REFRACTION":t}(e),s=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(e),o=function(e){if(null===(e=e.envMapCubeUVHeight))return null;var t=Math.log2(e/32+1)+3,e=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:e,maxMip:t}}(e);const g=e.isWebGL2?"":function(e){const t=[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(ds).join("\n")}(e),v=function(e){const t=[];for(const n in e){var r=e[n];!1!==r&&t.push("#define "+n+" "+r)}return t.join("\n")}(p),l=r.createProgram();let h,c,y=e.glslVersion?"#version "+e.glslVersion+"\n":"";e.isRawShaderMaterial?(0<(h=[v].filter(ds).join("\n")).length&&(h+="\n"),0<(c=[g,v].filter(ds).join("\n")).length&&(c+="\n")):(h=[ws(e),"#define SHADER_NAME "+e.shaderName,v,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+e.maxBones,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+a:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.useVertexTexture?"#define BONE_TEXTURE":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&!1===e.flatShading?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",0<e.morphTargetsCount&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",0<e.morphTargetsCount&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",0<e.morphTargetsCount&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+m:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ds).join("\n"),c=[g,ws(e),"#define SHADER_NAME "+e.shaderName,v,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+a:"",e.envMap?"#define "+s:"",o?"#define CUBEUV_TEXEL_WIDTH "+o.texelWidth:"",o?"#define CUBEUV_TEXEL_HEIGHT "+o.texelHeight:"",o?"#define CUBEUV_MAX_MIP "+o.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+m:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Ne?"#define TONE_MAPPING":"",e.toneMapping!==Ne?b.tonemapping_pars_fragment:"",e.toneMapping!==Ne?function(e,t){let r;switch(t){case 1:r="Linear";break;case 2:r="Reinhard";break;case 3:r="OptimizedCineon";break;case 4:r="ACESFilmic";break;case 5:r="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),r="Linear"}return"vec3 "+e+"( vec3 color ) { return "+r+"ToneMapping( color ); }"}("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",b.encodings_pars_fragment,us("linearToOutputTexel",e.outputEncoding),e.depthPacking?"#define DEPTH_PACKING "+e.depthPacking:"","\n"].filter(ds).join("\n")),n=ms(ps(gs(n),e),e),i=ms(ps(gs(i),e),e),n=xs(n),i=xs(i),e.isWebGL2&&!0!==e.isRawShaderMaterial&&(y="#version 300 es\n",h=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+h,c=["#define varying in",e.glslVersion===_t?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===_t?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+c);p=y+h+n,f=y+c+i,a=ls(r,r.VERTEX_SHADER,p),s=ls(r,r.FRAGMENT_SHADER,f);if(r.attachShader(l,a),r.attachShader(l,s),void 0!==e.index0AttributeName?r.bindAttribLocation(l,0,e.index0AttributeName):!0===e.morphTargets&&r.bindAttribLocation(l,0,"position"),r.linkProgram(l),t.debug.checkShaderErrors){o=r.getProgramInfoLog(l).trim(),m=r.getShaderInfoLog(a).trim(),n=r.getShaderInfoLog(s).trim();let e=!0,t=!0;!1===r.getProgramParameter(l,r.LINK_STATUS)?(e=!1,i=cs(r,a,"vertex"),p=cs(r,s,"fragment"),console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(l,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+o+"\n"+i+"\n"+p)):""!==o?console.warn("THREE.WebGLProgram: Program Info Log:",o):""!==m&&""!==n||(t=!1),t&&(this.diagnostics={runnable:e,programLog:o,vertexShader:{log:m,prefix:h},fragmentShader:{log:n,prefix:c}})}r.deleteShader(a),r.deleteShader(s);let _;this.getUniforms=function(){return _=void 0===_?new os(r,l):_};let x;return this.getAttributes=function(){return x=void 0===x?function(r,n){const i={};var e=r.getProgramParameter(n,r.ACTIVE_ATTRIBUTES);for(let t=0;t<e;t++){var a=r.getActiveAttrib(n,t),s=a.name;let e=1;a.type===r.FLOAT_MAT2&&(e=2),a.type===r.FLOAT_MAT3&&(e=3),a.type===r.FLOAT_MAT4&&(e=4),i[s]={type:a.type,location:r.getAttribLocation(n,s),locationSize:e}}return i}(r,l):x},this.destroy=function(){d.releaseStatesOfProgram(this),r.deleteProgram(l),this.program=void 0},this.name=e.shaderName,this.id=hs++,this.cacheKey=u,this.usedTimes=1,this.program=l,this.vertexShader=a,this.fragmentShader=s,this}let Ss=0;class Ts{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){var t=e.vertexShader,r=e.fragmentShader;const n=this._getShaderStage(t),i=this._getShaderStage(r),a=this._getShaderCacheForMaterial(e);return!1===a.has(n)&&(a.add(n),n.usedTimes++),!1===a.has(i)&&(a.add(i),i.usedTimes++),this}remove(e){for(const t of this.materialCache.get(e))t.usedTimes--,0===t.usedTimes&&this.shaderCache.delete(t.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return!1===t.has(e)&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;var r;return!1===t.has(e)&&(r=new As(e),t.set(e,r)),t.get(e)}}class As{constructor(e){this.id=Ss++,this.code=e,this.usedTimes=0}}function Rs(x,R,C,M,b,t,w){const a=new Jr,E=new Ts,s=[],S=b.isWebGL2,L=b.logarithmicDepthBuffer,T=b.floatVertexTextures,P=b.maxVertexUniforms,D=b.vertexTextures;let A=b.precision;const I={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:function(e,t,c,r,n){var u=r.fog,i=n.geometry,r=e.isMeshStandardMaterial?r.environment:null,d=(r=(e.isMeshStandardMaterial?C:R).get(e.envMap||r))&&r.mapping===U?r.image.height:null,p=I[e.type],a=n.isSkinnedMesh?(a=(a=n).skeleton.bones,T?1024:(s=P,s=Math.floor((s-20)/4),(s=Math.min(s,a.length))<a.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+a.length+" bones. This GPU supports "+s+"."),0):s)):0,s=(null!==e.precision&&(A=b.getMaxPrecision(e.precision))!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",A,"instead."),i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color),m=void 0!==s?s.length:0;let o=0;void 0!==i.morphAttributes.position&&(o=1),void 0!==i.morphAttributes.normal&&(o=2),void 0!==i.morphAttributes.color&&(o=3);let f,g,v,y;p?(l=Ri[p],f=l.vertexShader,g=l.fragmentShader):(f=e.vertexShader,g=e.fragmentShader,E.update(e),v=E.getVertexShaderID(e),y=E.getFragmentShaderID(e));var l=x.getRenderTarget(),_=0<e.alphaTest,h=0<e.clearcoat;return{isWebGL2:S,shaderID:p,shaderName:e.type,vertexShader:f,fragmentShader:g,defines:e.defines,customVertexShaderID:v,customFragmentShaderID:y,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:A,instancing:!0===n.isInstancedMesh,instancingColor:!0===n.isInstancedMesh&&null!==n.instanceColor,supportsVertexTextures:D,outputEncoding:null===l?x.outputEncoding:!0===l.isXRRenderTarget?l.texture.encoding:dt,map:!!e.map,matcap:!!e.matcap,envMap:!!r,envMapMode:r&&r.mapping,envMapCubeUVHeight:d,lightMap:!!e.lightMap,aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===ft,tangentSpaceNormalMap:e.normalMapType===mt,decodeVideoTexture:!!e.map&&!0===e.map.isVideoTexture&&e.map.encoding===pt,clearcoat:h,clearcoatMap:h&&!!e.clearcoatMap,clearcoatRoughnessMap:h&&!!e.clearcoatRoughnessMap,clearcoatNormalMap:h&&!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,specularIntensityMap:!!e.specularIntensityMap,specularColorMap:!!e.specularColorMap,opaque:!1===e.transparent&&e.blending===K,alphaMap:!!e.alphaMap,alphaTest:_,gradientMap:!!e.gradientMap,sheen:0<e.sheen,sheenColorMap:!!e.sheenColorMap,sheenRoughnessMap:!!e.sheenRoughnessMap,transmission:0<e.transmission,transmissionMap:!!e.transmissionMap,thicknessMap:!!e.thicknessMap,combine:e.combine,vertexTangents:!!e.normalMap&&!!i.attributes.tangent,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&!!i.attributes.color&&4===i.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||e.sheenColorMap||e.sheenRoughnessMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||0<e.transmission||e.transmissionMap||e.thicknessMap||e.specularIntensityMap||e.specularColorMap||0<e.sheen||e.sheenColorMap||e.sheenRoughnessMap||!e.displacementMap),fog:!!u,useFog:e.fog,fogExp2:u&&u.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:L,skinning:!0===n.isSkinnedMesh&&0<a,maxBones:a,useVertexTexture:T,morphTargets:void 0!==i.morphAttributes.position,morphNormals:void 0!==i.morphAttributes.normal,morphColors:void 0!==i.morphAttributes.color,morphTargetsCount:m,morphTextureStride:o,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:w.numPlanes,numClipIntersection:w.numIntersection,dithering:e.dithering,shadowMapEnabled:x.shadowMap.enabled&&0<c.length,shadowMapType:x.shadowMap.type,toneMapping:e.toneMapped?x.toneMapping:Ne,physicallyCorrectLights:x.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,doubleSided:e.side===Ie,flipSided:e.side===De,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:S||M.has("EXT_frag_depth"),rendererExtensionDrawBuffers:S||M.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:S||M.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(e){const t=[];if(e.shaderID?t.push(e.shaderID):(t.push(e.customVertexShaderID),t.push(e.customFragmentShaderID)),void 0!==e.defines)for(const i in e.defines)t.push(i),t.push(e.defines[i]);var r,n;return!1===e.isRawShaderMaterial&&(r=t,n=e,r.push(n.precision),r.push(n.outputEncoding),r.push(n.envMapMode),r.push(n.envMapCubeUVHeight),r.push(n.combine),r.push(n.vertexUvs),r.push(n.fogExp2),r.push(n.sizeAttenuation),r.push(n.maxBones),r.push(n.morphTargetsCount),r.push(n.morphAttributeCount),r.push(n.numDirLights),r.push(n.numPointLights),r.push(n.numSpotLights),r.push(n.numHemiLights),r.push(n.numRectAreaLights),r.push(n.numDirLightShadows),r.push(n.numPointLightShadows),r.push(n.numSpotLightShadows),r.push(n.shadowMapType),r.push(n.toneMapping),r.push(n.numClippingPlanes),r.push(n.numClipIntersection),r=t,n=e,a.disableAll(),n.isWebGL2&&a.enable(0),n.supportsVertexTextures&&a.enable(1),n.instancing&&a.enable(2),n.instancingColor&&a.enable(3),n.map&&a.enable(4),n.matcap&&a.enable(5),n.envMap&&a.enable(6),n.lightMap&&a.enable(7),n.aoMap&&a.enable(8),n.emissiveMap&&a.enable(9),n.bumpMap&&a.enable(10),n.normalMap&&a.enable(11),n.objectSpaceNormalMap&&a.enable(12),n.tangentSpaceNormalMap&&a.enable(13),n.clearcoat&&a.enable(14),n.clearcoatMap&&a.enable(15),n.clearcoatRoughnessMap&&a.enable(16),n.clearcoatNormalMap&&a.enable(17),n.displacementMap&&a.enable(18),n.specularMap&&a.enable(19),n.roughnessMap&&a.enable(20),n.metalnessMap&&a.enable(21),n.gradientMap&&a.enable(22),n.alphaMap&&a.enable(23),n.alphaTest&&a.enable(24),n.vertexColors&&a.enable(25),n.vertexAlphas&&a.enable(26),n.vertexUvs&&a.enable(27),n.vertexTangents&&a.enable(28),n.uvsVertexOnly&&a.enable(29),n.fog&&a.enable(30),r.push(a.mask),a.disableAll(),n.useFog&&a.enable(0),n.flatShading&&a.enable(1),n.logarithmicDepthBuffer&&a.enable(2),n.skinning&&a.enable(3),n.useVertexTexture&&a.enable(4),n.morphTargets&&a.enable(5),n.morphNormals&&a.enable(6),n.morphColors&&a.enable(7),n.premultipliedAlpha&&a.enable(8),n.shadowMapEnabled&&a.enable(9),n.physicallyCorrectLights&&a.enable(10),n.doubleSided&&a.enable(11),n.flipSided&&a.enable(12),n.depthPacking&&a.enable(13),n.dithering&&a.enable(14),n.specularIntensityMap&&a.enable(15),n.specularColorMap&&a.enable(16),n.transmission&&a.enable(17),n.transmissionMap&&a.enable(18),n.thicknessMap&&a.enable(19),n.sheen&&a.enable(20),n.sheenColorMap&&a.enable(21),n.sheenRoughnessMap&&a.enable(22),n.decodeVideoTexture&&a.enable(23),n.opaque&&a.enable(24),r.push(a.mask),t.push(x.outputEncoding)),t.push(e.customProgramCacheKey),t.join()},getUniforms:function(e){var t=I[e.type];let r;return r=t?(t=Ri[t],ui.clone(t.uniforms)):e.uniforms},acquireProgram:function(e,r){let n;for(let e=0,t=s.length;e<t;e++){var i=s[e];if(i.cacheKey===r){++(n=i).usedTimes;break}}return void 0===n&&(n=new Es(x,r,e,t),s.push(n)),n},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=s.indexOf(e),s[t]=s[s.length-1],s.pop(),e.destroy())},releaseShaderCache:function(e){E.remove(e)},programs:s,dispose:function(){E.dispose()}}}function Cs(){let n=new WeakMap;return{get:function(e){let t=n.get(e);return void 0===t&&(t={},n.set(e,t)),t},remove:function(e){n.delete(e)},update:function(e,t,r){n.get(e)[t]=r},dispose:function(){n=new WeakMap}}}function Ls(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ps(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ds(){const o=[];let l=0;const s=[],h=[],c=[];function u(e,t,r,n,i,a){let s=o[l];return void 0===s?(s={id:e.id,object:e,geometry:t,material:r,groupOrder:n,renderOrder:e.renderOrder,z:i,group:a},o[l]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=r,s.groupOrder=n,s.renderOrder=e.renderOrder,s.z=i,s.group=a),l++,s}return{opaque:s,transmissive:h,transparent:c,init:function(){l=0,s.length=0,h.length=0,c.length=0},push:function(e,t,r,n,i,a){e=u(e,t,r,n,i,a),(0<r.transmission?h:!0===r.transparent?c:s).push(e)},unshift:function(e,t,r,n,i,a){e=u(e,t,r,n,i,a),(0<r.transmission?h:!0===r.transparent?c:s).unshift(e)},finish:function(){for(let e=l,t=o.length;e<t;e++){const r=o[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.group=null}},sort:function(e,t){1<s.length&&s.sort(e||Ls),1<h.length&&h.sort(t||Ps),1<c.length&&c.sort(t||Ps)}}}function Is(){let n=new WeakMap;return{get:function(e,t){let r;return!1===n.has(e)?(r=new Ds,n.set(e,[r])):t>=n.get(e).length?(r=new Ds,n.get(e).push(r)):r=n.get(e)[t],r},dispose:function(){n=new WeakMap}}}function Ns(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Ce,color:new x};break;case"SpotLight":t={position:new Ce,direction:new Ce,color:new x,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Ce,color:new x,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Ce,skyColor:new x,groundColor:new x};break;case"RectAreaLight":t={color:new x,position:new Ce,halfWidth:new Ce,halfHeight:new Ce}}return r[e.id]=t}}}let Us=0;function Os(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Fs(C,L){const P=new Ns,D=function(){const r={};return{get:function(e){if(void 0!==r[e.id])return r[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Re,shadowCameraNear:1,shadowCameraFar:1e3}}return r[e.id]=t}}}(),I={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)I.probe.push(new Ce);const f=new Ce,g=new Le,v=new Le;return{setup:function(u,t){let d=0,p=0,m=0;for(let e=0;e<9;e++)I.probe[e].set(0,0,0);let r=0,n=0,i=0,f=0,g=0,v=0,y=0,_=0;u.sort(Os);var a=!0!==t?Math.PI:1;for(let e=0,t=u.length;e<t;e++){var s=u[e],x=s.color,o=s.intensity,l=s.distance,M=s.shadow&&s.shadow.map?s.shadow.map.texture:null;if(s.isAmbientLight)d+=x.r*o*a,p+=x.g*o*a,m+=x.b*o*a;else if(s.isLightProbe)for(let e=0;e<9;e++)I.probe[e].addScaledVector(s.sh.coefficients[e],o);else if(s.isDirectionalLight){const b=P.get(s);if(b.color.copy(s.color).multiplyScalar(s.intensity*a),s.castShadow){var h=s.shadow;const w=D.get(s);w.shadowBias=h.bias,w.shadowNormalBias=h.normalBias,w.shadowRadius=h.radius,w.shadowMapSize=h.mapSize,I.directionalShadow[r]=w,I.directionalShadowMap[r]=M,I.directionalShadowMatrix[r]=s.shadow.matrix,v++}I.directional[r]=b,r++}else if(s.isSpotLight){const c=P.get(s);if(c.position.setFromMatrixPosition(s.matrixWorld),c.color.copy(x).multiplyScalar(o*a),c.distance=l,c.coneCos=Math.cos(s.angle),c.penumbraCos=Math.cos(s.angle*(1-s.penumbra)),c.decay=s.decay,s.castShadow){h=s.shadow;const E=D.get(s);E.shadowBias=h.bias,E.shadowNormalBias=h.normalBias,E.shadowRadius=h.radius,E.shadowMapSize=h.mapSize,I.spotShadow[i]=E,I.spotShadowMap[i]=M,I.spotShadowMatrix[i]=s.shadow.matrix,_++}I.spot[i]=c,i++}else if(s.isRectAreaLight){const S=P.get(s);S.color.copy(x).multiplyScalar(o),S.halfWidth.set(.5*s.width,0,0),S.halfHeight.set(0,.5*s.height,0),I.rectArea[f]=S,f++}else if(s.isPointLight){const T=P.get(s);if(T.color.copy(s.color).multiplyScalar(s.intensity*a),T.distance=s.distance,T.decay=s.decay,s.castShadow){l=s.shadow;const A=D.get(s);A.shadowBias=l.bias,A.shadowNormalBias=l.normalBias,A.shadowRadius=l.radius,A.shadowMapSize=l.mapSize,A.shadowCameraNear=l.camera.near,A.shadowCameraFar=l.camera.far,I.pointShadow[n]=A,I.pointShadowMap[n]=M,I.pointShadowMatrix[n]=s.shadow.matrix,y++}I.point[n]=T,n++}else if(s.isHemisphereLight){const R=P.get(s);R.skyColor.copy(s.color).multiplyScalar(o*a),R.groundColor.copy(s.groundColor).multiplyScalar(o*a),I.hemi[g]=R,g++}}0<f&&(L.isWebGL2||!0===C.has("OES_texture_float_linear")?(I.rectAreaLTC1=N.LTC_FLOAT_1,I.rectAreaLTC2=N.LTC_FLOAT_2):!0===C.has("OES_texture_half_float_linear")?(I.rectAreaLTC1=N.LTC_HALF_1,I.rectAreaLTC2=N.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),I.ambient[0]=d,I.ambient[1]=p,I.ambient[2]=m;const e=I.hash;e.directionalLength===r&&e.pointLength===n&&e.spotLength===i&&e.rectAreaLength===f&&e.hemiLength===g&&e.numDirectionalShadows===v&&e.numPointShadows===y&&e.numSpotShadows===_||(I.directional.length=r,I.spot.length=i,I.rectArea.length=f,I.point.length=n,I.hemi.length=g,I.directionalShadow.length=v,I.directionalShadowMap.length=v,I.pointShadow.length=y,I.pointShadowMap.length=y,I.spotShadow.length=_,I.spotShadowMap.length=_,I.directionalShadowMatrix.length=v,I.pointShadowMatrix.length=y,I.spotShadowMatrix.length=_,e.directionalLength=r,e.pointLength=n,e.spotLength=i,e.rectAreaLength=f,e.hemiLength=g,e.numDirectionalShadows=v,e.numPointShadows=y,e.numSpotShadows=_,I.version=Us++)},setupView:function(r,e){let n=0,i=0,d=0,p=0,m=0;var a=e.matrixWorldInverse;for(let e=0,t=r.length;e<t;e++){var s=r[e];if(s.isDirectionalLight){const o=I.directional[n];o.direction.setFromMatrixPosition(s.matrixWorld),f.setFromMatrixPosition(s.target.matrixWorld),o.direction.sub(f),o.direction.transformDirection(a),n++}else if(s.isSpotLight){const l=I.spot[d];l.position.setFromMatrixPosition(s.matrixWorld),l.position.applyMatrix4(a),l.direction.setFromMatrixPosition(s.matrixWorld),f.setFromMatrixPosition(s.target.matrixWorld),l.direction.sub(f),l.direction.transformDirection(a),d++}else if(s.isRectAreaLight){const h=I.rectArea[p];h.position.setFromMatrixPosition(s.matrixWorld),h.position.applyMatrix4(a),v.identity(),g.copy(s.matrixWorld),g.premultiply(a),v.extractRotation(g),h.halfWidth.set(.5*s.width,0,0),h.halfHeight.set(0,.5*s.height,0),h.halfWidth.applyMatrix4(v),h.halfHeight.applyMatrix4(v),p++}else if(s.isPointLight){const c=I.point[i];c.position.setFromMatrixPosition(s.matrixWorld),c.position.applyMatrix4(a),i++}else if(s.isHemisphereLight){const u=I.hemi[m];u.direction.setFromMatrixPosition(s.matrixWorld),u.direction.transformDirection(a),u.direction.normalize(),m++}}},state:I}}function Bs(e,t){const r=new Fs(e,t),n=[],i=[];return{init:function(){n.length=0,i.length=0},state:{lightsArray:n,shadowsArray:i,lights:r},setupLights:function(e){r.setup(n,e)},setupLightsView:function(e){r.setupView(n,e)},pushLight:function(e){n.push(e)},pushShadow:function(e){i.push(e)}}}function Hs(n,i){let a=new WeakMap;return{get:function(e,t=0){let r;return!1===a.has(e)?(r=new Bs(n,i),a.set(e,[r])):t>=a.get(e).length?(r=new Bs(n,i),a.get(e).push(r)):r=a.get(e)[t],r},dispose:function(){a=new WeakMap}}}class zs extends bn{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}zs.prototype.isMeshDepthMaterial=!0;class Gs extends bn{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new Ce,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Gs.prototype.isMeshDistanceMaterial=!0;const Vs="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",ks="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function Ws(f,g,e){let v=new Ei;const m=new Re,y=new Re,E=new tr,l=new zs({depthPacking:r}),h=new Gs,c={},_=e.maxTextureSize,u={0:De,1:Pe,2:Ie},x=new di({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Re},radius:{value:4}},vertexShader:Vs,fragmentShader:ks}),M=x.clone(),t=(M.defines.HORIZONTAL_PASS=1,new T),b=(t.setAttribute("position",new Tn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3)),new si(t,x)),w=this;function S(r,n,e,t,i,a){let s=null;r=!0===e.isPointLight?r.customDistanceMaterial:r.customDepthMaterial;if(s=void 0!==r?r:!0===e.isPointLight?h:l,f.localClippingEnabled&&!0===n.clipShadows&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&0<n.alphaTest){var r=s.uuid,o=n.uuid;let e=c[r],t=(void 0===e&&(e={},c[r]=e),e[o]);void 0===t&&(t=s.clone(),e[o]=t),s=t}return s.visible=n.visible,s.wireframe=n.wireframe,a===R?s.side=null!==n.shadowSide?n.shadowSide:n.side:s.side=null!==n.shadowSide?n.shadowSide:u[n.side],s.alphaMap=n.alphaMap,s.alphaTest=n.alphaTest,s.clipShadows=n.clipShadows,s.clippingPlanes=n.clippingPlanes,s.clipIntersection=n.clipIntersection,s.displacementMap=n.displacementMap,s.displacementScale=n.displacementScale,s.displacementBias=n.displacementBias,s.wireframeLinewidth=n.wireframeLinewidth,s.linewidth=n.linewidth,!0===e.isPointLight&&!0===s.isMeshDistanceMaterial&&(s.referencePosition.setFromMatrixPosition(e.matrixWorld),s.nearDistance=t,s.farDistance=i),s}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=A,this.render=function(r,n,i){if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)&&0!==r.length){var e=f.getRenderTarget(),t=f.getActiveCubeFace(),d=f.getActiveMipmapLevel();const c=f.state;c.setBlending(Z),c.buffers.color.setClear(1,1,1,1),c.buffers.depth.setTest(!0),c.setScissorTest(!1);for(let e=0,t=r.length;e<t;e++){var a=r[e];const u=a.shadow;if(void 0!==u){if(!1!==u.autoUpdate||!1!==u.needsUpdate){m.copy(u.mapSize);var s,o,l=u.getFrameExtents(),p=(m.multiply(l),y.copy(u.mapSize),(m.x>_||m.y>_)&&(m.x>_&&(y.x=Math.floor(_/l.x),m.x=y.x*l.x,u.mapSize.x=y.x),m.y>_&&(y.y=Math.floor(_/l.y),m.y=y.y*l.y,u.mapSize.y=y.y)),null!==u.map||u.isPointLightShadow||this.type!==R||(u.map=new rr(m.x,m.y),u.map.texture.name=a.name+".shadowMap",u.mapPass=new rr(m.x,m.y),u.camera.updateProjectionMatrix()),null===u.map&&(l={minFilter:X,magFilter:X,format:We},u.map=new rr(m.x,m.y,l),u.map.texture.name=a.name+".shadowMap",u.camera.updateProjectionMatrix()),f.setRenderTarget(u.map),f.clear(),u.getViewportCount());for(let e=0;e<p;e++){var h=u.getViewport(e);E.set(y.x*h.x,y.y*h.y,y.x*h.z,y.y*h.w),c.viewport(E),u.updateMatrices(a,e),v=u.getFrustum(),function d(r,n,i,a,s){if(!1===r.visible)return;const e=r.layers.test(n.layers);if(e&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&s===R)&&(!r.frustumCulled||v.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,r.matrixWorld);const o=g.update(r),l=r.material;if(Array.isArray(l)){const h=o.groups;for(let e=0,t=h.length;e<t;e++){const c=h[e],u=l[c.materialIndex];if(u&&u.visible){const m=S(r,u,a,i.near,i.far,s);f.renderBufferDirect(i,null,o,m,r,c)}}}else if(l.visible){const t=S(r,l,a,i.near,i.far,s);f.renderBufferDirect(i,null,o,t,r,null)}}const p=r.children;for(let e=0,t=p.length;e<t;e++)d(p[e],n,i,a,s)}(n,i,u.camera,a,this.type)}u.isPointLightShadow||this.type!==R||(o=s=l=void 0,l=u,s=i,o=g.update(b),x.defines.VSM_SAMPLES!==l.blurSamples&&(x.defines.VSM_SAMPLES=l.blurSamples,M.defines.VSM_SAMPLES=l.blurSamples,x.needsUpdate=!0,M.needsUpdate=!0),x.uniforms.shadow_pass.value=l.map.texture,x.uniforms.resolution.value=l.mapSize,x.uniforms.radius.value=l.radius,f.setRenderTarget(l.mapPass),f.clear(),f.renderBufferDirect(s,null,o,x,b,null),M.uniforms.shadow_pass.value=l.mapPass.texture,M.uniforms.resolution.value=l.mapSize,M.uniforms.radius.value=l.radius,f.setRenderTarget(l.map),f.clear(),f.renderBufferDirect(s,null,o,M,b,null)),u.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",a,"has no shadow.")}w.needsUpdate=!1,f.setRenderTarget(e,t,d)}}}function js(c,s,o){const p=o.isWebGL2;const m=new function(){let t=!1;const a=new tr;let r=null;const s=new tr(0,0,0,0);return{setMask:function(e){r===e||t||(c.colorMask(e,e,e,e),r=e)},setLocked:function(e){t=e},setClear:function(e,t,r,n,i){!0===i&&(e*=n,t*=n,r*=n),a.set(e,t,r,n),!1===s.equals(a)&&(c.clearColor(e,t,r,n),s.copy(a))},reset:function(){t=!1,r=null,s.set(-1,0,0,0)}}},n=new function(){let t=!1,r=null,n=null,i=null;return{setTest:function(e){(e?u:d)(c.DEPTH_TEST)},setMask:function(e){r===e||t||(c.depthMask(e),r=e)},setFunc:function(e){if(n!==e){if(e)switch(e){case ye:c.depthFunc(c.NEVER);break;case _e:c.depthFunc(c.ALWAYS);break;case xe:c.depthFunc(c.LESS);break;case Me:c.depthFunc(c.LEQUAL);break;case be:c.depthFunc(c.EQUAL);break;case we:c.depthFunc(c.GEQUAL);break;case Ee:c.depthFunc(c.GREATER);break;case Se:c.depthFunc(c.NOTEQUAL);break;default:c.depthFunc(c.LEQUAL)}else c.depthFunc(c.LEQUAL);n=e}},setLocked:function(e){t=e},setClear:function(e){i!==e&&(c.clearDepth(e),i=e)},reset:function(){t=!1,r=null,n=null,i=null}}},i=new function(){let t=!1,r=null,n=null,i=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?u:d)(c.STENCIL_TEST)},setMask:function(e){r===e||t||(c.stencilMask(e),r=e)},setFunc:function(e,t,r){n===e&&i===t&&a===r||(c.stencilFunc(e,t,r),n=e,i=t,a=r)},setOp:function(e,t,r){s===e&&o===t&&l===r||(c.stencilOp(e,t,r),s=e,o=t,l=r)},setLocked:function(e){t=e},setClear:function(e){h!==e&&(c.clearStencil(e),h=e)},reset:function(){t=!1,r=null,n=null,i=null,a=null,s=null,o=null,l=null,h=null}}};let t={},r={},f=new WeakMap,g=[],v=null,l=!1,y=null,_=null,x=null,M=null,b=null,w=null,E=null,S=!1,T=null,A=null,R=null,C=null,L=null;const P=c.getParameter(c.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let D=!1,e=0;const I=c.getParameter(c.VERSION);-1!==I.indexOf("WebGL")?(e=parseFloat(/^WebGL (\d)/.exec(I)[1]),D=1<=e):-1!==I.indexOf("OpenGL ES")&&(e=parseFloat(/^OpenGL ES (\d)/.exec(I)[1]),D=2<=e);let a=null,N={};var U=c.getParameter(c.SCISSOR_BOX),O=c.getParameter(c.VIEWPORT);const F=(new tr).fromArray(U),B=(new tr).fromArray(O);function H(e,t,r){var n=new Uint8Array(4),i=c.createTexture();c.bindTexture(e,i),c.texParameteri(e,c.TEXTURE_MIN_FILTER,c.NEAREST),c.texParameteri(e,c.TEXTURE_MAG_FILTER,c.NEAREST);for(let e=0;e<r;e++)c.texImage2D(t+e,0,c.RGBA,1,1,0,c.RGBA,c.UNSIGNED_BYTE,n);return i}const z={};function u(e){!0!==t[e]&&(c.enable(e),t[e]=!0)}function d(e){!1!==t[e]&&(c.disable(e),t[e]=!1)}z[c.TEXTURE_2D]=H(c.TEXTURE_2D,c.TEXTURE_2D,1),z[c.TEXTURE_CUBE_MAP]=H(c.TEXTURE_CUBE_MAP,c.TEXTURE_CUBE_MAP_POSITIVE_X,6),m.setClear(0,0,0,1),n.setClear(1),i.setClear(0),u(c.DEPTH_TEST),n.setFunc(Me),k(!1),W(Y),u(c.CULL_FACE),V(Z);const h={[re]:c.FUNC_ADD,[ne]:c.FUNC_SUBTRACT,[ie]:c.FUNC_REVERSE_SUBTRACT},G=(p?(h[ae]=c.MIN,h[se]=c.MAX):null!==(U=s.get("EXT_blend_minmax"))&&(h[ae]=U.MIN_EXT,h[se]=U.MAX_EXT),{[oe]:c.ZERO,[le]:c.ONE,[he]:c.SRC_COLOR,[ue]:c.SRC_ALPHA,[ve]:c.SRC_ALPHA_SATURATE,[fe]:c.DST_COLOR,[pe]:c.DST_ALPHA,[ce]:c.ONE_MINUS_SRC_COLOR,[de]:c.ONE_MINUS_SRC_ALPHA,[ge]:c.ONE_MINUS_DST_COLOR,[me]:c.ONE_MINUS_DST_ALPHA});function V(e,t,r,n,i,a,s,o){if(e!==Z){if(!1===l&&(u(c.BLEND),l=!0),e===te)i=i||t,a=a||r,s=s||n,t===_&&i===b||(c.blendEquationSeparate(h[t],h[i]),_=t,b=i),r===x&&n===M&&a===w&&s===E||(c.blendFuncSeparate(G[r],G[n],G[a],G[s]),x=r,M=n,w=a,E=s),y=e,S=null;else if(e!==y||o!==S){if(_===re&&b===re||(c.blendEquation(c.FUNC_ADD),_=re,b=re),o)switch(e){case K:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Q:c.blendFunc(c.ONE,c.ONE);break;case $:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case ee:c.blendFuncSeparate(c.ZERO,c.SRC_COLOR,c.ZERO,c.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case K:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case Q:c.blendFunc(c.SRC_ALPHA,c.ONE);break;case $:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case ee:c.blendFunc(c.ZERO,c.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}x=null,M=null,w=null,E=null,y=e,S=o}}else!0===l&&(d(c.BLEND),l=!1)}function k(e){T!==e&&(e?c.frontFace(c.CW):c.frontFace(c.CCW),T=e)}function W(e){e!==q?(u(c.CULL_FACE),e!==A&&(e===Y?c.cullFace(c.BACK):e===J?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK))):d(c.CULL_FACE),A=e}function j(e,t,r){e?(u(c.POLYGON_OFFSET_FILL),C===t&&L===r||(c.polygonOffset(t,r),C=t,L=r)):d(c.POLYGON_OFFSET_FILL)}function X(e){void 0===e&&(e=c.TEXTURE0+P-1),a!==e&&(c.activeTexture(e),a=e)}return{buffers:{color:m,depth:n,stencil:i},enable:u,disable:d,bindFramebuffer:function(e,t){return r[e]!==t&&(c.bindFramebuffer(e,t),r[e]=t,p&&(e===c.DRAW_FRAMEBUFFER&&(r[c.FRAMEBUFFER]=t),e===c.FRAMEBUFFER&&(r[c.DRAW_FRAMEBUFFER]=t)),!0)},drawBuffers:function(e,r){let n=g,t=!1;if(e)if(void 0===(n=f.get(r))&&(n=[],f.set(r,n)),e.isWebGLMultipleRenderTargets){r=e.texture;if(n.length!==r.length||n[0]!==c.COLOR_ATTACHMENT0){for(let e=0,t=r.length;e<t;e++)n[e]=c.COLOR_ATTACHMENT0+e;n.length=r.length,t=!0}}else n[0]!==c.COLOR_ATTACHMENT0&&(n[0]=c.COLOR_ATTACHMENT0,t=!0);else n[0]!==c.BACK&&(n[0]=c.BACK,t=!0);t&&(o.isWebGL2?c.drawBuffers(n):s.get("WEBGL_draw_buffers").drawBuffersWEBGL(n))},useProgram:function(e){return v!==e&&(c.useProgram(e),v=e,!0)},setBlending:V,setMaterial:function(e,t){(e.side===Ie?d:u)(c.CULL_FACE);let r=e.side===De;k(r=t?!r:r),e.blending===K&&!1===e.transparent?V(Z):V(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),n.setFunc(e.depthFunc),n.setTest(e.depthTest),n.setMask(e.depthWrite),m.setMask(e.colorWrite),t=e.stencilWrite,i.setTest(t),t&&(i.setMask(e.stencilWriteMask),i.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),i.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),j(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?u:d)(c.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:k,setCullFace:W,setLineWidth:function(e){e!==R&&(D&&c.lineWidth(e),R=e)},setPolygonOffset:j,setScissorTest:function(e){(e?u:d)(c.SCISSOR_TEST)},activeTexture:X,bindTexture:function(e,t){null===a&&X();let r=N[a];void 0===r&&(r={type:void 0,texture:void 0},N[a]=r),r.type===e&&r.texture===t||(c.bindTexture(e,t||z[e]),r.type=e,r.texture=t)},unbindTexture:function(){const e=N[a];void 0!==e&&void 0!==e.type&&(c.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{c.compressedTexImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{c.texImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{c.texImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage2D:function(){try{c.texStorage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{c.texStorage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{c.texSubImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{c.texSubImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{c.compressedTexSubImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===F.equals(e)&&(c.scissor(e.x,e.y,e.z,e.w),F.copy(e))},viewport:function(e){!1===B.equals(e)&&(c.viewport(e.x,e.y,e.z,e.w),B.copy(e))},reset:function(){c.disable(c.BLEND),c.disable(c.CULL_FACE),c.disable(c.DEPTH_TEST),c.disable(c.POLYGON_OFFSET_FILL),c.disable(c.SCISSOR_TEST),c.disable(c.STENCIL_TEST),c.disable(c.SAMPLE_ALPHA_TO_COVERAGE),c.blendEquation(c.FUNC_ADD),c.blendFunc(c.ONE,c.ZERO),c.blendFuncSeparate(c.ONE,c.ZERO,c.ONE,c.ZERO),c.colorMask(!0,!0,!0,!0),c.clearColor(0,0,0,0),c.depthMask(!0),c.depthFunc(c.LESS),c.clearDepth(1),c.stencilMask(4294967295),c.stencilFunc(c.ALWAYS,0,4294967295),c.stencilOp(c.KEEP,c.KEEP,c.KEEP),c.clearStencil(0),c.cullFace(c.BACK),c.frontFace(c.CCW),c.polygonOffset(0,0),c.activeTexture(c.TEXTURE0),c.bindFramebuffer(c.FRAMEBUFFER,null),!0===p&&(c.bindFramebuffer(c.DRAW_FRAMEBUFFER,null),c.bindFramebuffer(c.READ_FRAMEBUFFER,null)),c.useProgram(null),c.lineWidth(1),c.scissor(0,0,c.canvas.width,c.canvas.height),c.viewport(0,0,c.canvas.width,c.canvas.height),t={},a=null,N={},r={},f=new WeakMap,g=[],v=null,l=!1,y=null,_=null,x=null,M=null,b=null,w=null,E=null,S=!1,T=null,A=null,R=null,C=null,L=null,F.set(0,0,c.canvas.width,c.canvas.height),B.set(0,0,c.canvas.width,c.canvas.height),m.reset(),n.reset(),i.reset()}}}function Xs(y,s,_,x,m,M,f){const b=m.isWebGL2,t=m.maxTextures,E=m.maxCubemapSize,v=m.maxTextureSize,r=m.maxSamples,l=s.has("WEBGL_multisampled_render_to_texture")?s.get("WEBGL_multisampled_render_to_texture"):null,h=/OculusBrowser/g.test(navigator.userAgent),o=new WeakMap;let c;const u=new WeakMap;let n=!1;try{n="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function d(e,t){return n?new OffscreenCanvas(e,t):Bt("canvas")}function S(e,t,r,n){let i=1;if((i=e.width>n||e.height>n?n/Math.max(e.width,e.height):i)<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?Dt:Math.floor;n=a(i*e.width),t=a(i*e.height);void 0===c&&(c=d(n,t));const s=r?d(n,t):c,o=(s.width=n,s.height=t,s.getContext("2d"));return o.drawImage(e,0,0,n,t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+n+"x"+t+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function T(e){return Lt(e.width)&&Lt(e.height)}function w(e,t){return e.generateMipmaps&&t&&e.minFilter!==X&&e.minFilter!==Ue}function A(e){y.generateMipmap(e)}function R(e,t,r,n,i=!1){if(!1===b)return t;if(null!==e){if(void 0!==y[e])return y[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===y.RED&&(r===y.FLOAT&&(a=y.R32F),r===y.HALF_FLOAT&&(a=y.R16F),r===y.UNSIGNED_BYTE&&(a=y.R8)),t===y.RG&&(r===y.FLOAT&&(a=y.RG32F),r===y.HALF_FLOAT&&(a=y.RG16F),r===y.UNSIGNED_BYTE&&(a=y.RG8)),t===y.RGBA&&(r===y.FLOAT&&(a=y.RGBA32F),r===y.HALF_FLOAT&&(a=y.RGBA16F),r===y.UNSIGNED_BYTE&&(a=n===pt&&!1===i?y.SRGB8_ALPHA8:y.RGBA8),r===y.UNSIGNED_SHORT_4_4_4_4&&(a=y.RGBA4),r===y.UNSIGNED_SHORT_5_5_5_1&&(a=y.RGB5_A1)),a!==y.R16F&&a!==y.R32F&&a!==y.RG16F&&a!==y.RG32F&&a!==y.RGBA16F&&a!==y.RGBA32F||s.get("EXT_color_buffer_float"),a}function C(e,t,r){return!0===w(e,r)||e.isFramebufferTexture&&e.minFilter!==X&&e.minFilter!==Ue?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&0<e.mipmaps.length?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function i(e){return e===X||e===Te||e===Ae?y.NEAREST:y.LINEAR}function p(e){const t=e.target;t.removeEventListener("dispose",p);var e=t,r=x.get(e);if(void 0!==r.__webglInit){var n=e.source,i=u.get(n);if(i){const a=i[r.__cacheKey];a.usedTimes--,0===a.usedTimes&&P(e),0===Object.keys(i).length&&u.delete(n)}x.remove(e)}t.isVideoTexture&&o.delete(t)}function L(e){const t=e.target;t.removeEventListener("dispose",L);var e=t,r=e.texture,n=x.get(e),i=x.get(r);if(void 0!==i.__webglTexture&&(y.deleteTexture(i.__webglTexture),f.memory.textures--),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)y.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&y.deleteRenderbuffer(n.__webglDepthbuffer[e]);else y.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&y.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&y.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&y.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&y.deleteRenderbuffer(n.__webglDepthRenderbuffer);if(e.isWebGLMultipleRenderTargets)for(let e=0,t=r.length;e<t;e++){var a=x.get(r[e]);a.__webglTexture&&(y.deleteTexture(a.__webglTexture),f.memory.textures--),x.remove(r[e])}x.remove(r),x.remove(e)}function P(e){var t=x.get(e),e=(y.deleteTexture(t.__webglTexture),e.source);const r=u.get(e);delete r[t.__cacheKey],f.memory.textures--}let a=0;function D(e,t){var r,n=x.get(e);if(e.isVideoTexture&&(r=e,i=f.render.frame,o.get(r)!==i&&(o.set(r,i),r.update())),!1===e.isRenderTargetTexture&&0<e.version&&n.__version!==e.version){var i=e.image;if(null===i)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==i.complete)return void F(n,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}_.activeTexture(y.TEXTURE0+t),_.bindTexture(y.TEXTURE_2D,n.__webglTexture)}const I={[k]:y.REPEAT,[W]:y.CLAMP_TO_EDGE,[j]:y.MIRRORED_REPEAT},N={[X]:y.NEAREST,[Te]:y.NEAREST_MIPMAP_NEAREST,[Ae]:y.NEAREST_MIPMAP_LINEAR,[Ue]:y.LINEAR,[Oe]:y.LINEAR_MIPMAP_NEAREST,[Fe]:y.LINEAR_MIPMAP_LINEAR};function U(e,t,r){r?(y.texParameteri(e,y.TEXTURE_WRAP_S,I[t.wrapS]),y.texParameteri(e,y.TEXTURE_WRAP_T,I[t.wrapT]),e!==y.TEXTURE_3D&&e!==y.TEXTURE_2D_ARRAY||y.texParameteri(e,y.TEXTURE_WRAP_R,I[t.wrapR]),y.texParameteri(e,y.TEXTURE_MAG_FILTER,N[t.magFilter]),y.texParameteri(e,y.TEXTURE_MIN_FILTER,N[t.minFilter])):(y.texParameteri(e,y.TEXTURE_WRAP_S,y.CLAMP_TO_EDGE),y.texParameteri(e,y.TEXTURE_WRAP_T,y.CLAMP_TO_EDGE),e!==y.TEXTURE_3D&&e!==y.TEXTURE_2D_ARRAY||y.texParameteri(e,y.TEXTURE_WRAP_R,y.CLAMP_TO_EDGE),t.wrapS===W&&t.wrapT===W||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),y.texParameteri(e,y.TEXTURE_MAG_FILTER,i(t.magFilter)),y.texParameteri(e,y.TEXTURE_MIN_FILTER,i(t.minFilter)),t.minFilter!==X&&t.minFilter!==Ue&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===s.has("EXT_texture_filter_anisotropic")&&(r=s.get("EXT_texture_filter_anisotropic"),t.type===Ge&&!1===s.has("OES_texture_float_linear")||!1===b&&t.type===Ve&&!1===s.has("OES_texture_half_float_linear")||(1<t.anisotropy||x.get(t).__currentAnisotropy)&&(y.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,m.getMaxAnisotropy())),x.get(t).__currentAnisotropy=t.anisotropy))}function O(e,t){let r=!1;void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",p));var n=t.source;let i=u.get(n);void 0===i&&(i={},u.set(n,i));var a,n=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.encoding),t.join()}(t);return n!==e.__cacheKey&&(void 0===i[n]&&(i[n]={texture:y.createTexture(),usedTimes:0},f.memory.textures++,r=!0),i[n].usedTimes++,void 0!==(a=i[e.__cacheKey])&&(i[e.__cacheKey].usedTimes--,0===a.usedTimes&&P(t)),e.__cacheKey=n,e.__webglTexture=i[n].texture),r}function F(e,a,t){let s=y.TEXTURE_2D;a.isDataArrayTexture&&(s=y.TEXTURE_2D_ARRAY),a.isData3DTexture&&(s=y.TEXTURE_3D);var o=O(e,a);const p=a.source;if(_.activeTexture(y.TEXTURE0+t),_.bindTexture(s,e.__webglTexture),p.version!==p.__currentVersion||!0===o){y.pixelStorei(y.UNPACK_FLIP_Y_WEBGL,a.flipY),y.pixelStorei(y.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),y.pixelStorei(y.UNPACK_ALIGNMENT,a.unpackAlignment),y.pixelStorei(y.UNPACK_COLORSPACE_CONVERSION_WEBGL,y.NONE);t=a;var o=!b&&(t.wrapS!==W||t.wrapT!==W||t.minFilter!==X&&t.minFilter!==Ue)&&!1===T(a.image),o=T(t=V(a,S(a.image,o,!1,v)))||b,l=M.convert(a.format,a.encoding);let r=M.convert(a.type),n=R(a.internalFormat,l,r,a.encoding,a.isVideoTexture);U(s,a,o);let i;var h=a.mipmaps,c=b&&!0!==a.isVideoTexture,u=void 0===e.__version,d=C(a,t,o);if(a.isDepthTexture)n=y.DEPTH_COMPONENT,b?n=a.type===Ge?y.DEPTH_COMPONENT32F:a.type===ze?y.DEPTH_COMPONENT24:a.type===ke?y.DEPTH24_STENCIL8:y.DEPTH_COMPONENT16:a.type===Ge&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),a.format===je&&n===y.DEPTH_COMPONENT&&a.type!==He&&a.type!==ze&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),a.type=He,r=M.convert(a.type)),a.format===Xe&&n===y.DEPTH_COMPONENT&&(n=y.DEPTH_STENCIL,a.type!==ke&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),a.type=ke,r=M.convert(a.type))),c&&u?_.texStorage2D(y.TEXTURE_2D,1,n,t.width,t.height):_.texImage2D(y.TEXTURE_2D,0,n,t.width,t.height,0,l,r,null);else if(a.isDataTexture)if(0<h.length&&o){c&&u&&_.texStorage2D(y.TEXTURE_2D,d,n,h[0].width,h[0].height);for(let e=0,t=h.length;e<t;e++)i=h[e],c?_.texSubImage2D(y.TEXTURE_2D,e,0,0,i.width,i.height,l,r,i.data):_.texImage2D(y.TEXTURE_2D,e,n,i.width,i.height,0,l,r,i.data);a.generateMipmaps=!1}else c?(u&&_.texStorage2D(y.TEXTURE_2D,d,n,t.width,t.height),_.texSubImage2D(y.TEXTURE_2D,0,0,0,t.width,t.height,l,r,t.data)):_.texImage2D(y.TEXTURE_2D,0,n,t.width,t.height,0,l,r,t.data);else if(a.isCompressedTexture){c&&u&&_.texStorage2D(y.TEXTURE_2D,d,n,h[0].width,h[0].height);for(let e=0,t=h.length;e<t;e++)i=h[e],a.format!==We?null!==l?c?_.compressedTexSubImage2D(y.TEXTURE_2D,e,0,0,i.width,i.height,l,i.data):_.compressedTexImage2D(y.TEXTURE_2D,e,n,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):c?_.texSubImage2D(y.TEXTURE_2D,e,0,0,i.width,i.height,l,r,i.data):_.texImage2D(y.TEXTURE_2D,e,n,i.width,i.height,0,l,r,i.data)}else if(a.isDataArrayTexture)c?(u&&_.texStorage3D(y.TEXTURE_2D_ARRAY,d,n,t.width,t.height,t.depth),_.texSubImage3D(y.TEXTURE_2D_ARRAY,0,0,0,0,t.width,t.height,t.depth,l,r,t.data)):_.texImage3D(y.TEXTURE_2D_ARRAY,0,n,t.width,t.height,t.depth,0,l,r,t.data);else if(a.isData3DTexture)c?(u&&_.texStorage3D(y.TEXTURE_3D,d,n,t.width,t.height,t.depth),_.texSubImage3D(y.TEXTURE_3D,0,0,0,0,t.width,t.height,t.depth,l,r,t.data)):_.texImage3D(y.TEXTURE_3D,0,n,t.width,t.height,t.depth,0,l,r,t.data);else if(a.isFramebufferTexture)c&&u?_.texStorage2D(y.TEXTURE_2D,d,n,t.width,t.height):_.texImage2D(y.TEXTURE_2D,0,n,t.width,t.height,0,l,r,null);else if(0<h.length&&o){c&&u&&_.texStorage2D(y.TEXTURE_2D,d,n,h[0].width,h[0].height);for(let e=0,t=h.length;e<t;e++)i=h[e],c?_.texSubImage2D(y.TEXTURE_2D,e,0,0,l,r,i):_.texImage2D(y.TEXTURE_2D,e,n,l,r,i);a.generateMipmaps=!1}else c?(u&&_.texStorage2D(y.TEXTURE_2D,d,n,t.width,t.height),_.texSubImage2D(y.TEXTURE_2D,0,0,0,l,r,t)):_.texImage2D(y.TEXTURE_2D,0,n,l,r,t);w(a,o)&&A(s),p.__currentVersion=p.version,a.onUpdate&&a.onUpdate(a)}e.__version=a.version}function B(e,t,r,n,i){var a=M.convert(r.format,r.encoding),s=M.convert(r.type),o=R(r.internalFormat,a,s,r.encoding);x.get(t).__hasExternalTextures||(i===y.TEXTURE_3D||i===y.TEXTURE_2D_ARRAY?_.texImage3D(i,0,o,t.width,t.height,t.depth,0,a,s,null):_.texImage2D(i,0,o,t.width,t.height,0,a,s,null)),_.bindFramebuffer(y.FRAMEBUFFER,e),g(t)?l.framebufferTexture2DMultisampleEXT(y.FRAMEBUFFER,n,i,x.get(r).__webglTexture,0,G(t)):y.framebufferTexture2D(y.FRAMEBUFFER,n,i,x.get(r).__webglTexture,0),_.bindFramebuffer(y.FRAMEBUFFER,null)}function H(t,r,n){if(y.bindRenderbuffer(y.RENDERBUFFER,t),r.depthBuffer&&!r.stencilBuffer){let e=y.DEPTH_COMPONENT16;n||g(r)?((i=r.depthTexture)&&i.isDepthTexture&&(i.type===Ge?e=y.DEPTH_COMPONENT32F:i.type===ze&&(e=y.DEPTH_COMPONENT24)),i=G(r),g(r)?l.renderbufferStorageMultisampleEXT(y.RENDERBUFFER,i,e,r.width,r.height):y.renderbufferStorageMultisample(y.RENDERBUFFER,i,e,r.width,r.height)):y.renderbufferStorage(y.RENDERBUFFER,e,r.width,r.height),y.framebufferRenderbuffer(y.FRAMEBUFFER,y.DEPTH_ATTACHMENT,y.RENDERBUFFER,t)}else{var i,e;r.depthBuffer&&r.stencilBuffer?(i=G(r),n&&!1===g(r)?y.renderbufferStorageMultisample(y.RENDERBUFFER,i,y.DEPTH24_STENCIL8,r.width,r.height):g(r)?l.renderbufferStorageMultisampleEXT(y.RENDERBUFFER,i,y.DEPTH24_STENCIL8,r.width,r.height):y.renderbufferStorage(y.RENDERBUFFER,y.DEPTH_STENCIL,r.width,r.height),y.framebufferRenderbuffer(y.FRAMEBUFFER,y.DEPTH_STENCIL_ATTACHMENT,y.RENDERBUFFER,t)):(i=!0===r.isWebGLMultipleRenderTargets?r.texture[0]:r.texture,t=M.convert(i.format,i.encoding),e=M.convert(i.type),t=R(i.internalFormat,t,e,i.encoding),e=G(r),n&&!1===g(r)?y.renderbufferStorageMultisample(y.RENDERBUFFER,e,t,r.width,r.height):g(r)?l.renderbufferStorageMultisampleEXT(y.RENDERBUFFER,e,t,r.width,r.height):y.renderbufferStorage(y.RENDERBUFFER,t,r.width,r.height))}y.bindRenderbuffer(y.RENDERBUFFER,null)}function z(t){const r=x.get(t);var e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(e)throw new Error("target.depthTexture not supported in Cube render targets");var n=r.__webglFramebuffer,i=t;if(i&&i.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(_.bindFramebuffer(y.FRAMEBUFFER,n),!i.depthTexture||!i.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");x.get(i.depthTexture).__webglTexture&&i.depthTexture.image.width===i.width&&i.depthTexture.image.height===i.height||(i.depthTexture.image.width=i.width,i.depthTexture.image.height=i.height,i.depthTexture.needsUpdate=!0),D(i.depthTexture,0);var n=x.get(i.depthTexture).__webglTexture,a=G(i);if(i.depthTexture.format===je)g(i)?l.framebufferTexture2DMultisampleEXT(y.FRAMEBUFFER,y.DEPTH_ATTACHMENT,y.TEXTURE_2D,n,0,a):y.framebufferTexture2D(y.FRAMEBUFFER,y.DEPTH_ATTACHMENT,y.TEXTURE_2D,n,0);else{if(i.depthTexture.format!==Xe)throw new Error("Unknown depthTexture format");g(i)?l.framebufferTexture2DMultisampleEXT(y.FRAMEBUFFER,y.DEPTH_STENCIL_ATTACHMENT,y.TEXTURE_2D,n,0,a):y.framebufferTexture2D(y.FRAMEBUFFER,y.DEPTH_STENCIL_ATTACHMENT,y.TEXTURE_2D,n,0)}}else if(e){r.__webglDepthbuffer=[];for(let e=0;e<6;e++)_.bindFramebuffer(y.FRAMEBUFFER,r.__webglFramebuffer[e]),r.__webglDepthbuffer[e]=y.createRenderbuffer(),H(r.__webglDepthbuffer[e],t,!1)}else _.bindFramebuffer(y.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=y.createRenderbuffer(),H(r.__webglDepthbuffer,t,!1);_.bindFramebuffer(y.FRAMEBUFFER,null)}function G(e){return Math.min(r,e.samples)}function g(e){var t=x.get(e);return b&&0<e.samples&&!0===s.has("WEBGL_multisampled_render_to_texture")&&!1!==t.__useRenderToTexture}function V(e,t){var r=e.encoding,n=e.format,i=e.type;return!0===e.isCompressedTexture||!0===e.isVideoTexture||e.format===xt||r!==dt&&(r===pt?!1===b?!0===s.has("EXT_sRGB")&&n===We?(e.format=xt,e.minFilter=Ue,e.generateMipmaps=!1):t=Zt.sRGBToLinear(t):n===We&&i===Be||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",r)),t}this.allocateTextureUnit=function(){var e=a;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),a+=1,e},this.resetTextureUnits=function(){a=0},this.setTexture2D=D,this.setTexture2DArray=function(e,t){var r=x.get(e);0<e.version&&r.__version!==e.version?F(r,e,t):(_.activeTexture(y.TEXTURE0+t),_.bindTexture(y.TEXTURE_2D_ARRAY,r.__webglTexture))},this.setTexture3D=function(e,t){var r=x.get(e);0<e.version&&r.__version!==e.version?F(r,e,t):(_.activeTexture(y.TEXTURE0+t),_.bindTexture(y.TEXTURE_3D,r.__webglTexture))},this.setTextureCube=function(t,e){var r=x.get(t);if(0<t.version&&r.__version!==t.version){var d=r,n=t,t=e;if(6===n.image.length){var p=O(d,n);const c=n.source;if(_.activeTexture(y.TEXTURE0+t),_.bindTexture(y.TEXTURE_CUBE_MAP,d.__webglTexture),c.version!==c.__currentVersion||!0===p){y.pixelStorei(y.UNPACK_FLIP_Y_WEBGL,n.flipY),y.pixelStorei(y.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),y.pixelStorei(y.UNPACK_ALIGNMENT,n.unpackAlignment),y.pixelStorei(y.UNPACK_COLORSPACE_CONVERSION_WEBGL,y.NONE);var m=n.isCompressedTexture||n.image[0].isCompressedTexture,f=n.image[0]&&n.image[0].isDataTexture;const u=[];for(let e=0;e<6;e++)u[e]=m||f?f?n.image[e].image:n.image[e]:S(n.image[e],!1,!0,E),u[e]=V(n,u[e]);var t=u[0],p=T(t)||b,i=M.convert(n.format,n.encoding),a=M.convert(n.type),s=R(n.internalFormat,i,a,n.encoding),o=b&&!0!==n.isVideoTexture,g=void 0===d.__version;let e=C(n,t,p);U(y.TEXTURE_CUBE_MAP,n,p);let r;if(m){o&&g&&_.texStorage2D(y.TEXTURE_CUBE_MAP,e,s,t.width,t.height);for(let t=0;t<6;t++){r=u[t].mipmaps;for(let e=0;e<r.length;e++){var l=r[e];n.format!==We?null!==i?o?_.compressedTexSubImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,0,0,l.width,l.height,i,l.data):_.compressedTexImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,s,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):o?_.texSubImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,0,0,l.width,l.height,i,a,l.data):_.texImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e,s,l.width,l.height,0,i,a,l.data)}}}else{r=n.mipmaps,o&&g&&(0<r.length&&e++,_.texStorage2D(y.TEXTURE_CUBE_MAP,e,s,u[0].width,u[0].height));for(let t=0;t<6;t++)if(f){o?_.texSubImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,u[t].width,u[t].height,i,a,u[t].data):_.texImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,s,u[t].width,u[t].height,0,i,a,u[t].data);for(let e=0;e<r.length;e++){var h=r[e].image[t].image;o?_.texSubImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,0,0,h.width,h.height,i,a,h.data):_.texImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,s,h.width,h.height,0,i,a,h.data)}}else{o?_.texSubImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,i,a,u[t]):_.texImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,s,i,a,u[t]);for(let e=0;e<r.length;e++){var v=r[e];o?_.texSubImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,0,0,i,a,v.image[t]):_.texImage2D(y.TEXTURE_CUBE_MAP_POSITIVE_X+t,e+1,s,i,a,v.image[t])}}}w(n,p)&&A(y.TEXTURE_CUBE_MAP),c.__currentVersion=c.version,n.onUpdate&&n.onUpdate(n)}d.__version=n.version}}else _.activeTexture(y.TEXTURE0+e),_.bindTexture(y.TEXTURE_CUBE_MAP,r.__webglTexture)},this.rebindTextures=function(e,t,r){var n=x.get(e);void 0!==t&&B(n.__webglFramebuffer,e,e.texture,y.COLOR_ATTACHMENT0,y.TEXTURE_2D),void 0!==r&&z(e)},this.setupRenderTarget=function(r){var t=r.texture;const n=x.get(r),i=x.get(t);r.addEventListener("dispose",L),!0!==r.isWebGLMultipleRenderTargets&&(void 0===i.__webglTexture&&(i.__webglTexture=y.createTexture()),i.__version=t.version,f.memory.textures++);var e,a,s=!0===r.isWebGLCubeRenderTarget,c=!0===r.isWebGLMultipleRenderTargets,o=T(r)||b;if(s){n.__webglFramebuffer=[];for(let e=0;e<6;e++)n.__webglFramebuffer[e]=y.createFramebuffer()}else if(n.__webglFramebuffer=y.createFramebuffer(),c)if(m.drawBuffers){var u=r.texture;for(let e=0,t=u.length;e<t;e++){const h=x.get(u[e]);void 0===h.__webglTexture&&(h.__webglTexture=y.createTexture(),f.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else b&&0<r.samples&&!1===g(r)&&(n.__webglMultisampledFramebuffer=y.createFramebuffer(),n.__webglColorRenderbuffer=y.createRenderbuffer(),y.bindRenderbuffer(y.RENDERBUFFER,n.__webglColorRenderbuffer),e=M.convert(t.format,t.encoding),a=M.convert(t.type),e=R(t.internalFormat,e,a,t.encoding),a=G(r),y.renderbufferStorageMultisample(y.RENDERBUFFER,a,e,r.width,r.height),_.bindFramebuffer(y.FRAMEBUFFER,n.__webglMultisampledFramebuffer),y.framebufferRenderbuffer(y.FRAMEBUFFER,y.COLOR_ATTACHMENT0,y.RENDERBUFFER,n.__webglColorRenderbuffer),y.bindRenderbuffer(y.RENDERBUFFER,null),r.depthBuffer&&(n.__webglDepthRenderbuffer=y.createRenderbuffer(),H(n.__webglDepthRenderbuffer,r,!0)),_.bindFramebuffer(y.FRAMEBUFFER,null));if(s){_.bindTexture(y.TEXTURE_CUBE_MAP,i.__webglTexture),U(y.TEXTURE_CUBE_MAP,t,o);for(let e=0;e<6;e++)B(n.__webglFramebuffer[e],r,t,y.COLOR_ATTACHMENT0,y.TEXTURE_CUBE_MAP_POSITIVE_X+e);w(t,o)&&A(y.TEXTURE_CUBE_MAP),_.unbindTexture()}else if(c){var d=r.texture;for(let e=0,t=d.length;e<t;e++){var l=d[e],p=x.get(l);_.bindTexture(y.TEXTURE_2D,p.__webglTexture),U(y.TEXTURE_2D,l,o),B(n.__webglFramebuffer,r,l,y.COLOR_ATTACHMENT0+e,y.TEXTURE_2D),w(l,o)&&A(y.TEXTURE_2D)}_.unbindTexture()}else{let e=y.TEXTURE_2D;(r.isWebGL3DRenderTarget||r.isWebGLArrayRenderTarget)&&(b?e=r.isWebGL3DRenderTarget?y.TEXTURE_3D:y.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),_.bindTexture(e,i.__webglTexture),U(e,t,o),B(n.__webglFramebuffer,r,t,y.COLOR_ATTACHMENT0,e),w(t,o)&&A(e),_.unbindTexture()}r.depthBuffer&&z(r)},this.updateRenderTargetMipmap=function(r){var n=T(r)||b,i=!0===r.isWebGLMultipleRenderTargets?r.texture:[r.texture];for(let e=0,t=i.length;e<t;e++){var a,s=i[e];w(s,n)&&(a=r.isWebGLCubeRenderTarget?y.TEXTURE_CUBE_MAP:y.TEXTURE_2D,s=x.get(s).__webglTexture,_.bindTexture(a,s),A(a),_.unbindTexture())}},this.updateMultisampleRenderTarget=function(t){if(b&&0<t.samples&&!1===g(t)){var r=t.width,n=t.height;let e=y.COLOR_BUFFER_BIT;const o=[y.COLOR_ATTACHMENT0];var i=t.stencilBuffer?y.DEPTH_STENCIL_ATTACHMENT:y.DEPTH_ATTACHMENT,a=(t.depthBuffer&&o.push(i),x.get(t)),s=void 0!==a.__ignoreDepthValues&&a.__ignoreDepthValues;!1===s&&(t.depthBuffer&&(e|=y.DEPTH_BUFFER_BIT),t.stencilBuffer&&(e|=y.STENCIL_BUFFER_BIT)),_.bindFramebuffer(y.READ_FRAMEBUFFER,a.__webglMultisampledFramebuffer),_.bindFramebuffer(y.DRAW_FRAMEBUFFER,a.__webglFramebuffer),!0===s&&(y.invalidateFramebuffer(y.READ_FRAMEBUFFER,[i]),y.invalidateFramebuffer(y.DRAW_FRAMEBUFFER,[i])),y.blitFramebuffer(0,0,r,n,0,0,r,n,e,y.NEAREST),h&&y.invalidateFramebuffer(y.READ_FRAMEBUFFER,o),_.bindFramebuffer(y.READ_FRAMEBUFFER,null),_.bindFramebuffer(y.DRAW_FRAMEBUFFER,a.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=z,this.setupFrameBufferTexture=B,this.useMultisampledRTT=g}function qs(n,i,e){const a=e.isWebGL2;return{convert:function(e,t=null){let r;if(e===Be)return n.UNSIGNED_BYTE;if(e===u)return n.UNSIGNED_SHORT_4_4_4_4;if(e===d)return n.UNSIGNED_SHORT_5_5_5_1;if(e===s)return n.BYTE;if(e===o)return n.SHORT;if(e===He)return n.UNSIGNED_SHORT;if(e===c)return n.INT;if(e===ze)return n.UNSIGNED_INT;if(e===Ge)return n.FLOAT;if(e===Ve)return a?n.HALF_FLOAT:null!==(r=i.get("OES_texture_half_float"))?r.HALF_FLOAT_OES:null;if(e===p)return n.ALPHA;if(e===We)return n.RGBA;if(e===f)return n.LUMINANCE;if(e===g)return n.LUMINANCE_ALPHA;if(e===je)return n.DEPTH_COMPONENT;if(e===Xe)return n.DEPTH_STENCIL;if(e===v)return n.RED;if(e===m)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),n.RGBA;if(e===xt)return null!==(r=i.get("EXT_sRGB"))?r.SRGB_ALPHA_EXT:null;if(e===y)return n.RED_INTEGER;if(e===_)return n.RG;if(e===S)return n.RG_INTEGER;if(e===C)return n.RGBA_INTEGER;if(e===L||e===P||e===D||e===I)if(t===pt){if(null===(r=i.get("WEBGL_compressed_texture_s3tc_srgb")))return null;if(e===L)return r.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===P)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===D)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===I)return r.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(null===(r=i.get("WEBGL_compressed_texture_s3tc")))return null;if(e===L)return r.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===P)return r.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===D)return r.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===I)return r.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===O||e===F||e===B||e===H){if(null===(r=i.get("WEBGL_compressed_texture_pvrtc")))return null;if(e===O)return r.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===F)return r.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===B)return r.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===H)return r.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===z)return null!==(r=i.get("WEBGL_compressed_texture_etc1"))?r.COMPRESSED_RGB_ETC1_WEBGL:null;if(e===G||e===qe){if(null===(r=i.get("WEBGL_compressed_texture_etc")))return null;if(e===G)return t===pt?r.COMPRESSED_SRGB8_ETC2:r.COMPRESSED_RGB8_ETC2;if(e===qe)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:r.COMPRESSED_RGBA8_ETC2_EAC}if(e===Ye||e===Je||e===Ze||e===Ke||e===Qe||e===$e||e===et||e===tt||e===rt||e===nt||e===it||e===at||e===st||e===ot){if(null===(r=i.get("WEBGL_compressed_texture_astc")))return null;if(e===Ye)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:r.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Je)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:r.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Ze)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:r.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Ke)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:r.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Qe)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:r.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===$e)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:r.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===et)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:r.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===tt)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:r.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===rt)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:r.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===nt)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:r.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===it)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:r.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===at)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:r.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===st)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:r.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===ot)return t===pt?r.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:r.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===lt){if(null===(r=i.get("EXT_texture_compression_bptc")))return null;if(e===lt)return t===pt?r.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:r.COMPRESSED_RGBA_BPTC_UNORM_EXT}return e===ke?a?n.UNSIGNED_INT_24_8:null!==(r=i.get("WEBGL_depth_texture"))?r.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}class Ys extends mi{constructor(e=[]){super(),this.cameras=e}}Ys.prototype.isArrayCamera=!0;class Js extends M{constructor(){super(),this.type="Group"}}Js.prototype.isGroup=!0;const Zs={type:"move"};class Ks{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Js,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Js,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ce,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ce),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Js,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ce,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ce),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,c){let r=null,n=null,u=null;const i=this._targetRay,a=this._grip,s=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==i&&null!==(r=t.getPose(e.targetRaySpace,c))&&(i.matrix.fromArray(r.transform.matrix),i.matrix.decompose(i.position,i.rotation,i.scale),r.linearVelocity?(i.hasLinearVelocity=!0,i.linearVelocity.copy(r.linearVelocity)):i.hasLinearVelocity=!1,r.angularVelocity?(i.hasAngularVelocity=!0,i.angularVelocity.copy(r.angularVelocity)):i.hasAngularVelocity=!1,this.dispatchEvent(Zs)),s&&e.hand){u=!0;for(const o of e.hand.values()){var d=t.getJointPose(o,c);if(void 0===s.joints[o.jointName]){const h=new Js;h.matrixAutoUpdate=!1,h.visible=!1,s.joints[o.jointName]=h,s.add(h)}const l=s.joints[o.jointName];null!==d&&(l.matrix.fromArray(d.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.jointRadius=d.radius),l.visible=null!==d}const m=s.joints["index-finger-tip"];var p=s.joints["thumb-tip"],p=m.position.distanceTo(p.position);s.inputState.pinching&&.025<p?(s.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!s.inputState.pinching&&p<=.015&&(s.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==a&&e.gripSpace&&null!==(n=t.getPose(e.gripSpace,c))&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1);return null!==i&&(i.visible=null!==r),null!==a&&(a.visible=null!==n),null!==s&&(s.visible=null!==u),this}}class Qs extends er{constructor(e,t,r,n,i,a,s,o,l,h){if((h=void 0!==h?h:je)!==je&&h!==Xe)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,n,i,a,s,o,h,r=void 0===(r=void 0===r&&h===je?He:r)&&h===Xe?ke:r,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:X,this.minFilter=void 0!==o?o:X,this.flipY=!1,this.generateMipmaps=!1}}Qs.prototype.isDepthTexture=!0;class $s extends Mt{constructor(h,a){super();const t=this;let m=null,l=1,g=null,r="local-floor",v=null,y=null,c=null,u=null,_=null;const s=a.getContextAttributes();let e=null,d=null;const p=[],o=new Map,x=new mi,M=(x.layers.enable(1),x.viewport=new tr,new mi),b=(M.layers.enable(2),M.viewport=new tr,[x,M]),f=new Ys;f.layers.enable(1),f.layers.enable(2);let w=null,E=null;function S(e){const t=o.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function T(){o.forEach(function(e,t){e.disconnect(t)}),o.clear(),w=null,E=null,h.setRenderTarget(e),u=null,c=null,y=null,m=null,d=null,D.stop(),t.isPresenting=!1,t.dispatchEvent({type:"sessionend"})}function A(t){var r=m.inputSources;for(let e=0;e<p.length;e++)o.set(r[e],p[e]);for(let e=0;e<t.removed.length;e++){var n=t.removed[e];const a=o.get(n);a&&(a.dispatchEvent({type:"disconnected",data:n}),o.delete(n))}for(let e=0;e<t.added.length;e++){var i=t.added[e];const s=o.get(i);s&&s.dispatchEvent({type:"connected",data:i})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=p[e];return void 0===t&&(t=new Ks,p[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=p[e];return void 0===t&&(t=new Ks,p[e]=t),t.getGripSpace()},this.getHand=function(e){let t=p[e];return void 0===t&&(t=new Ks,p[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){l=e,!0===t.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){r=e,!0===t.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return g},this.getBaseLayer=function(){return null!==c?c:u},this.getBinding=function(){return y},this.getFrame=function(){return _},this.getSession=function(){return m},this.setSession=async function(n){if(null!==(m=n)){if(e=h.getRenderTarget(),m.addEventListener("select",S),m.addEventListener("selectstart",S),m.addEventListener("selectend",S),m.addEventListener("squeeze",S),m.addEventListener("squeezestart",S),m.addEventListener("squeezeend",S),m.addEventListener("end",T),m.addEventListener("inputsourceschange",A),!0!==s.xrCompatible&&await a.makeXRCompatible(),void 0===m.renderState.layers||!1===h.capabilities.isWebGL2){n={antialias:void 0!==m.renderState.layers||s.antialias,alpha:s.alpha,depth:s.depth,stencil:s.stencil,framebufferScaleFactor:l};u=new XRWebGLLayer(m,a,n),m.updateRenderState({baseLayer:u}),d=new rr(u.framebufferWidth,u.framebufferHeight,{format:We,type:Be,encoding:h.outputEncoding})}else{let e=null,t=null,r=null;s.depth&&(r=s.stencil?a.DEPTH24_STENCIL8:a.DEPTH_COMPONENT24,e=s.stencil?Xe:je,t=s.stencil?ke:He);n={colorFormat:h.outputEncoding===pt?a.SRGB8_ALPHA8:a.RGBA8,depthFormat:r,scaleFactor:l};y=new XRWebGLBinding(m,a),c=y.createProjectionLayer(n),m.updateRenderState({layers:[c]}),d=new rr(c.textureWidth,c.textureHeight,{format:We,type:Be,depthTexture:new Qs(c.textureWidth,c.textureHeight,t,void 0,void 0,void 0,void 0,void 0,void 0,e),stencilBuffer:s.stencil,encoding:h.outputEncoding,samples:s.antialias?4:0});const i=h.properties.get(d);i.__ignoreDepthValues=c.ignoreDepthValues}d.isXRRenderTarget=!0,this.setFoveation(1),g=await m.requestReferenceSpace(r),D.setContext(m),D.start(),t.isPresenting=!0,t.dispatchEvent({type:"sessionstart"})}};const R=new Ce,C=new Ce;function L(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null!==m){f.near=M.near=x.near=e.near,f.far=M.far=x.far=e.far,w===f.near&&E===f.far||(m.updateRenderState({depthNear:f.near,depthFar:f.far}),w=f.near,E=f.far);var t,r,n,i,a,s,o,c,u,d,p=e.parent,l=f.cameras;L(f,p);for(let e=0;e<l.length;e++)L(l[e],p);f.matrixWorld.decompose(f.position,f.quaternion,f.scale),e.position.copy(f.position),e.quaternion.copy(f.quaternion),e.scale.copy(f.scale),e.matrix.copy(f.matrix),e.matrixWorld.copy(f.matrixWorld);const h=e.children;for(let e=0,t=h.length;e<t;e++)h[e].updateMatrixWorld(!0);2===l.length?(e=f,t=x,r=M,R.setFromMatrixPosition(t.matrixWorld),C.setFromMatrixPosition(r.matrixWorld),n=R.distanceTo(C),i=t.projectionMatrix.elements,r=r.projectionMatrix.elements,a=i[14]/(i[10]-1),s=i[14]/(i[10]+1),o=(i[9]+1)/i[5],c=(i[9]-1)/i[5],i=(i[8]-1)/i[0],r=(r[8]+1)/r[0],u=a*i,d=a*r,i=(r=n/(r-i))*-i,t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(i),e.translateZ(r),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),t=a+r,a=s+r,e.projectionMatrix.makePerspective(u-i,n-i+d,o*s/a*t,c*s/a*t,t,a)):f.projectionMatrix.copy(x.projectionMatrix)}},this.getCamera=function(){return f},this.getFoveation=function(){return null!==c?c.fixedFoveation:null!==u?u.fixedFoveation:void 0},this.setFoveation=function(e){null!==c&&(c.fixedFoveation=e),null!==u&&void 0!==u.fixedFoveation&&(u.fixedFoveation=e)};let P=null;const D=new Si;D.setAnimationLoop(function(e,t){if(v=t.getViewerPose(g),_=t,null!==v){var n=v.views;null!==u&&(h.setRenderTargetFramebuffer(d,u.framebuffer),h.setRenderTarget(d));let r=!1;n.length!==f.cameras.length&&(f.cameras.length=0,r=!0);for(let t=0;t<n.length;t++){var i,a=n[t];let e=null;null!==u?e=u.getViewport(a):(i=y.getViewSubImage(c,a),e=i.viewport,0===t&&(h.setRenderTargetTextures(d,i.colorTexture,c.ignoreDepthValues?void 0:i.depthStencilTexture),h.setRenderTarget(d)));const o=b[t];o.matrix.fromArray(a.transform.matrix),o.projectionMatrix.fromArray(a.projectionMatrix),o.viewport.set(e.x,e.y,e.width,e.height),0===t&&f.matrix.copy(o.matrix),!0===r&&f.cameras.push(o)}}var r=m.inputSources;for(let e=0;e<p.length;e++){const l=p[e];var s=r[e];l.update(s,t,g)}P&&P(e,t),_=null}),this.setAnimationLoop=function(e){P=e},this.dispose=function(){}}}function eo(a,u){function d(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===De&&(e.bumpScale.value*=-1)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===De&&e.normalScale.value.negate()),t.specularMap&&(e.specularMap.value=t.specularMap),0<t.alphaTest&&(e.alphaTest.value=t.alphaTest);var r=u.get(t).envMap;r&&(e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&!1===r.isRenderTargetTexture?-1:1,e.reflectivity.value=t.reflectivity,e.ior.value=t.ior,e.refractionRatio.value=t.refractionRatio),t.lightMap&&(e.lightMap.value=t.lightMap,r=!0!==a.physicallyCorrectLights?Math.PI:1,e.lightMapIntensity.value=t.lightMapIntensity*r),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let n;t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap?n=t.emissiveMap:t.clearcoatMap?n=t.clearcoatMap:t.clearcoatNormalMap?n=t.clearcoatNormalMap:t.clearcoatRoughnessMap?n=t.clearcoatRoughnessMap:t.specularIntensityMap?n=t.specularIntensityMap:t.specularColorMap?n=t.specularColorMap:t.transmissionMap?n=t.transmissionMap:t.thicknessMap?n=t.thicknessMap:t.sheenColorMap?n=t.sheenColorMap:t.sheenRoughnessMap&&(n=t.sheenRoughnessMap),void 0!==n&&(!0===(n=n.isWebGLRenderTarget?n.texture:n).matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix));let i;t.aoMap?i=t.aoMap:t.lightMap&&(i=t.lightMap),void 0!==i&&(!0===(i=i.isWebGLRenderTarget?i.texture:i).matrixAutoUpdate&&i.updateMatrix(),e.uv2Transform.value.copy(i.matrix))}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(t,r,n,i,a){if(r.isMeshBasicMaterial)d(t,r);else if(r.isMeshLambertMaterial)d(t,r);else if(r.isMeshToonMaterial)d(t,r),h=t,(c=r).gradientMap&&(h.gradientMap.value=c.gradientMap);else if(r.isMeshPhongMaterial)d(t,r),h=r,(c=t).specular.value.copy(h.specular),c.shininess.value=Math.max(h.shininess,1e-4);else if(r.isMeshStandardMaterial){d(t,r);var e=t,s=r,o=(e.roughness.value=s.roughness,e.metalness.value=s.metalness,s.roughnessMap&&(e.roughnessMap.value=s.roughnessMap),s.metalnessMap&&(e.metalnessMap.value=s.metalnessMap),u.get(s).envMap);o&&(e.envMapIntensity.value=s.envMapIntensity),r.isMeshPhysicalMaterial&&(o=r,e=a,(s=t).ior.value=o.ior,0<o.sheen&&(s.sheenColor.value.copy(o.sheenColor).multiplyScalar(o.sheen),s.sheenRoughness.value=o.sheenRoughness,o.sheenColorMap&&(s.sheenColorMap.value=o.sheenColorMap),o.sheenRoughnessMap&&(s.sheenRoughnessMap.value=o.sheenRoughnessMap)),0<o.clearcoat&&(s.clearcoat.value=o.clearcoat,s.clearcoatRoughness.value=o.clearcoatRoughness,o.clearcoatMap&&(s.clearcoatMap.value=o.clearcoatMap),o.clearcoatRoughnessMap&&(s.clearcoatRoughnessMap.value=o.clearcoatRoughnessMap),o.clearcoatNormalMap&&(s.clearcoatNormalScale.value.copy(o.clearcoatNormalScale),s.clearcoatNormalMap.value=o.clearcoatNormalMap,o.side===De&&s.clearcoatNormalScale.value.negate())),0<o.transmission&&(s.transmission.value=o.transmission,s.transmissionSamplerMap.value=e.texture,s.transmissionSamplerSize.value.set(e.width,e.height),o.transmissionMap&&(s.transmissionMap.value=o.transmissionMap),s.thickness.value=o.thickness,o.thicknessMap&&(s.thicknessMap.value=o.thicknessMap),s.attenuationDistance.value=o.attenuationDistance,s.attenuationColor.value.copy(o.attenuationColor)),s.specularIntensity.value=o.specularIntensity,s.specularColor.value.copy(o.specularColor),o.specularIntensityMap&&(s.specularIntensityMap.value=o.specularIntensityMap),o.specularColorMap&&(s.specularColorMap.value=o.specularColorMap))}else if(r.isMeshMatcapMaterial)d(t,r),a=t,(e=r).matcap&&(a.matcap.value=e.matcap);else if(r.isMeshDepthMaterial)d(t,r);else if(r.isMeshDistanceMaterial)d(t,r),s=r,(o=t).referencePosition.value.copy(s.referencePosition),o.nearDistance.value=s.nearDistance,o.farDistance.value=s.farDistance;else if(r.isMeshNormalMaterial)d(t,r);else if(r.isLineBasicMaterial)a=r,(l=t).diffuse.value.copy(a.color),l.opacity.value=a.opacity,r.isLineDashedMaterial&&(l=r,(a=t).dashSize.value=l.dashSize,a.totalSize.value=l.dashSize+l.gapSize,a.scale.value=l.scale);else if(r.isPointsMaterial){a=t;l=r;a.diffuse.value.copy(l.color),a.opacity.value=l.opacity,a.size.value=l.size*n,a.scale.value=.5*i,l.map&&(a.map.value=l.map);l.alphaMap&&(a.alphaMap.value=l.alphaMap);0<l.alphaTest&&(a.alphaTest.value=l.alphaTest);let e;l.map?e=l.map:l.alphaMap&&(e=l.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),a.uvTransform.value.copy(e.matrix))}else if(r.isSpriteMaterial){n=t;i=r;n.diffuse.value.copy(i.color),n.opacity.value=i.opacity,n.rotation.value=i.rotation,i.map&&(n.map.value=i.map);i.alphaMap&&(n.alphaMap.value=i.alphaMap);0<i.alphaTest&&(n.alphaTest.value=i.alphaTest);let e;i.map?e=i.map:i.alphaMap&&(e=i.alphaMap);void 0!==e&&(!0===e.matrixAutoUpdate&&e.updateMatrix(),n.uvTransform.value.copy(e.matrix))}else r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1);var l,h,c}}}function to(e={}){const i=void 0!==e.canvas?e.canvas:function(){const e=Bt("canvas");return e.style.display="block",e}(),t=void 0!==e.context?e.context:null,r=void 0===e.depth||e.depth,n=void 0===e.stencil||e.stencil,u=void 0!==e.antialias&&e.antialias,a=void 0===e.premultipliedAlpha||e.premultipliedAlpha,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,o=void 0!==e.powerPreference?e.powerPreference:"default",l=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let h,m=(h=void 0!==e.context?t.getContextAttributes().alpha:void 0!==e.alpha&&e.alpha,null),C=null;const c=[],p=[],L=(this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=dt,this.physicallyCorrectLights=!1,this.toneMapping=Ne,this.toneMappingExposure=1,this);let f=!1,g=0,v=0,O=null,F=-1,B=null;const y=new tr,_=new tr;let x=null,M=i.width,H=i.height,z=1,b=null,w=null;const E=new tr(0,0,M,H),S=new tr(0,0,M,H);let T=!1;const A=new Ei;let G=!1,V=!1,k=null;const R=new Le,W=new Re,j=new Ce,X={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function q(){return null===O?z:1}let P=t;function Y(t,r){for(let e=0;e<t.length;e++){var n=t[e],n=i.getContext(n,r);if(null!==n)return n}return null}try{var J={alpha:!0,depth:r,stencil:n,antialias:u,premultipliedAlpha:a,preserveDrawingBuffer:s,powerPreference:o,failIfMajorPerformanceCaveat:l};if("setAttribute"in i&&i.setAttribute("data-engine","three.js r139"),i.addEventListener("webglcontextlost",ge,!1),i.addEventListener("webglcontextrestored",ve,!1),null===P){const Ae=["webgl2","webgl","experimental-webgl"];if(!0===L.isWebGL1Renderer&&Ae.shift(),null===(P=Y(Ae,J)))throw Y(Ae)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===P.getShaderPrecisionFormat&&(P.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let d,D,I,Z,N,U,K,Q,$,ee,te,re,ne,ie,ae,se,oe,le,he,ce,ue,de,pe;function me(){d=new Zi(P),D=new Di(P,d,e),d.init(D),de=new qs(P,d,D),I=new js(P,d,D),Z=new $i(P),N=new Cs,U=new Xs(P,d,I,N,D,de,Z),K=new Ni(L),Q=new Ji(L),$=new Ti(P,D),pe=new Li(P,d,$,D),ee=new Ki(P,$,Z,pe),te=new ia(P,ee,$,Z),he=new na(P,D,U),se=new Ii(N),re=new Rs(L,K,Q,d,D,pe,se),ne=new eo(L,N),ie=new Is,ae=new Hs(d,D),le=new Ci(L,K,I,te,h,a),oe=new Ws(L,te,D),ce=new Pi(P,d,Z,D),ue=new Qi(P,d,Z,D),Z.programs=re.programs,L.capabilities=D,L.extensions=d,L.properties=N,L.renderLists=ie,L.shadowMap=oe,L.state=I,L.info=Z}me();const fe=new $s(L,P);function ge(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function ve(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1;var e=Z.autoReset,t=oe.enabled,r=oe.autoUpdate,n=oe.needsUpdate,i=oe.type;me(),Z.autoReset=e,oe.enabled=t,oe.autoUpdate=r,oe.needsUpdate=n,oe.type=i}function ye(e){const t=e.target;t.removeEventListener("dispose",ye),e=t;{var r=e;const n=N.get(r).programs;void 0!==n&&(n.forEach(function(e){re.releaseProgram(e)}),r.isShaderMaterial&&re.releaseShaderCache(r))}N.remove(e)}this.xr=fe,this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.forceContextLoss=function(){const e=d.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=d.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(e){void 0!==e&&(z=e,this.setSize(M,H,!1))},this.getSize=function(e){return e.set(M,H)},this.setSize=function(e,t,r){fe.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=e,H=t,i.width=Math.floor(e*z),i.height=Math.floor(t*z),!1!==r&&(i.style.width=e+"px",i.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return e.set(M*z,H*z).floor()},this.setDrawingBufferSize=function(e,t,r){M=e,H=t,z=r,i.width=Math.floor(e*r),i.height=Math.floor(t*r),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return e.copy(y)},this.getViewport=function(e){return e.copy(E)},this.setViewport=function(e,t,r,n){e.isVector4?E.set(e.x,e.y,e.z,e.w):E.set(e,t,r,n),I.viewport(y.copy(E).multiplyScalar(z).floor())},this.getScissor=function(e){return e.copy(S)},this.setScissor=function(e,t,r,n){e.isVector4?S.set(e.x,e.y,e.z,e.w):S.set(e,t,r,n),I.scissor(_.copy(S).multiplyScalar(z).floor())},this.getScissorTest=function(){return T},this.setScissorTest=function(e){I.setScissorTest(T=e)},this.setOpaqueSort=function(e){b=e},this.setTransparentSort=function(e){w=e},this.getClearColor=function(e){return e.copy(le.getClearColor())},this.setClearColor=function(){le.setClearColor.apply(le,arguments)},this.getClearAlpha=function(){return le.getClearAlpha()},this.setClearAlpha=function(){le.setClearAlpha.apply(le,arguments)},this.clear=function(e=!0,t=!0,r=!0){let n=0;e&&(n|=P.COLOR_BUFFER_BIT),t&&(n|=P.DEPTH_BUFFER_BIT),r&&(n|=P.STENCIL_BUFFER_BIT),P.clear(n)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",ge,!1),i.removeEventListener("webglcontextrestored",ve,!1),ie.dispose(),ae.dispose(),N.dispose(),K.dispose(),Q.dispose(),te.dispose(),pe.dispose(),re.dispose(),fe.dispose(),fe.removeEventListener("sessionstart",xe),fe.removeEventListener("sessionend",Me),k&&(k.dispose(),k=null),be.stop()},this.renderBufferDirect=function(e,t,r,n,i,a){null===t&&(t=X);var s=i.isMesh&&i.matrixWorld.determinant()<0,e=function(e,t,r,n,i){!0!==t.isScene&&(t=X);U.resetTextureUnits();const c=t.fog,u=n.isMeshStandardMaterial?t.environment:null,d=null===O?L.outputEncoding:!0===O.isXRRenderTarget?O.texture.encoding:dt,p=(n.isMeshStandardMaterial?Q:K).get(n.envMap||u),m=!0===n.vertexColors&&!!r.attributes.color&&4===r.attributes.color.itemSize,f=!!n.normalMap&&!!r.attributes.tangent,g=!!r.morphAttributes.position,v=!!r.morphAttributes.normal,y=!!r.morphAttributes.color,_=n.toneMapped?L.toneMapping:Ne,x=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,M=void 0!==x?x.length:0,a=N.get(n),b=C.state.lights;!0===G&&(!0!==V&&e===B||(A=e===B&&n.id===F,se.setState(n,e,A)));let w=!1;n.version===a.__version?(a.needsLights&&a.lightsStateVersion!==b.state.version||a.outputEncoding!==d||i.isInstancedMesh&&!1===a.instancing||!i.isInstancedMesh&&!0===a.instancing||i.isSkinnedMesh&&!1===a.skinning||!i.isSkinnedMesh&&!0===a.skinning||a.envMap!==p||n.fog&&a.fog!==c||void 0!==a.numClippingPlanes&&(a.numClippingPlanes!==se.numPlanes||a.numIntersection!==se.numIntersection)||a.vertexAlphas!==m||a.vertexTangents!==f||a.morphTargets!==g||a.morphNormals!==v||a.morphColors!==y||a.toneMapping!==_||!0===D.isWebGL2&&a.morphTargetsCount!==M)&&(w=!0):(w=!0,a.__version=n.version);let s=a.currentProgram;!0===w&&(s=Se(n,t,i));let E=!1,o=!1,S=!1;const l=s.getUniforms(),T=a.uniforms;I.useProgram(s.program)&&(E=!0,o=!0,S=!0);n.id!==F&&(F=n.id,o=!0);if(E||B!==e){if(l.setValue(P,"projectionMatrix",e.projectionMatrix),D.logarithmicDepthBuffer&&l.setValue(P,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),B!==e&&(B=e,o=!0,S=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const R=l.map.cameraPosition;void 0!==R&&R.setValue(P,j.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&l.setValue(P,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||i.isSkinnedMesh)&&l.setValue(P,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){l.setOptional(P,i,"bindMatrix"),l.setOptional(P,i,"bindMatrixInverse");const h=i.skeleton;h&&(D.floatVertexTextures?(null===h.boneTexture&&h.computeBoneTexture(),l.setValue(P,"boneTexture",h.boneTexture,U),l.setValue(P,"boneTextureSize",h.boneTextureSize)):l.setOptional(P,h,"boneMatrices"))}var A=r.morphAttributes;(void 0!==A.position||void 0!==A.normal||void 0!==A.color&&!0===D.isWebGL2)&&he.update(i,r,n,s);!o&&a.receiveShadow===i.receiveShadow||(a.receiveShadow=i.receiveShadow,l.setValue(P,"receiveShadow",i.receiveShadow));o&&(l.setValue(P,"toneMappingExposure",L.toneMappingExposure),a.needsLights&&function(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}(T,S),c&&n.fog&&ne.refreshFogUniforms(T,c),ne.refreshMaterialUniforms(T,n,z,H,k),os.upload(P,a.uniformsList,T,U));n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(os.upload(P,a.uniformsList,T,U),n.uniformsNeedUpdate=!1);n.isSpriteMaterial&&l.setValue(P,"center",i.center);return l.setValue(P,"modelViewMatrix",i.modelViewMatrix),l.setValue(P,"normalMatrix",i.normalMatrix),l.setValue(P,"modelMatrix",i.matrixWorld),s}(e,t,r,n,i);I.setMaterial(n,s);let o=r.index;t=r.attributes.position;if(null===o){if(void 0===t||0===t.count)return}else if(0===o.count)return;let l=1,h=(!0===n.wireframe&&(o=ee.getWireframeAttribute(r),l=2),pe.setup(i,n,e,r,o),ce);null!==o&&(s=$.get(o),(h=ue).setIndex(s));var e=(null!==o?o:t).count,s=r.drawRange.start*l,t=r.drawRange.count*l,c=null!==a?a.start*l:0,a=null!==a?a.count*l:1/0,u=Math.max(s,c),e=Math.min(e,s+t,c+a)-1,s=Math.max(0,e-u+1);if(0!==s){if(i.isMesh)!0===n.wireframe?(I.setLineWidth(n.wireframeLinewidth*q()),h.setMode(P.LINES)):h.setMode(P.TRIANGLES);else if(i.isLine){let e=n.linewidth;void 0===e&&(e=1),I.setLineWidth(e*q()),i.isLineSegments?h.setMode(P.LINES):i.isLineLoop?h.setMode(P.LINE_LOOP):h.setMode(P.LINE_STRIP)}else i.isPoints?h.setMode(P.POINTS):i.isSprite&&h.setMode(P.TRIANGLES);i.isInstancedMesh?h.renderInstances(u,s,i.count):r.isInstancedBufferGeometry?(t=Math.min(r.instanceCount,r._maxInstanceCount),h.renderInstances(u,s,t)):h.render(u,s)}},this.compile=function(n,t){(C=ae.get(n)).init(),p.push(C),n.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(C.pushLight(e),e.castShadow&&C.pushShadow(e))}),C.setupLights(L.physicallyCorrectLights),n.traverse(function(t){var r=t.material;if(r)if(Array.isArray(r))for(let e=0;e<r.length;e++)Se(r[e],n,t);else Se(r,n,t)}),p.pop(),C=null};let _e=null;function xe(){be.stop()}function Me(){be.start()}const be=new Si;function we(e,t,r,n){var i=e.opaque,a=e.transmissive,e=e.transparent;if(C.setupLightsView(r),0<a.length){var s=i,o=t,l=r,h=D.isWebGL2,h=(null===k&&(k=new rr(1,1,{generateMipmaps:!0,type:null!==de.convert(Ve)?Ve:Be,minFilter:Fe,samples:h&&!0===u?4:0})),L.getDrawingBufferSize(W),h?k.setSize(W.x,W.y):k.setSize(Dt(W.x),Dt(W.y)),L.getRenderTarget()),c=(L.setRenderTarget(k),L.clear(),L.toneMapping);L.toneMapping=Ne,Ee(s,o,l),L.toneMapping=c,U.updateMultisampleRenderTarget(k),U.updateRenderTargetMipmap(k),L.setRenderTarget(h)}n&&I.viewport(y.copy(n)),0<i.length&&Ee(i,t,r),0<a.length&&Ee(a,t,r),0<e.length&&Ee(e,t,r),I.buffers.depth.setTest(!0),I.buffers.depth.setMask(!0),I.buffers.color.setMask(!0),I.setPolygonOffset(!1)}function Ee(r,n,d){var p=!0===n.isScene?n.overrideMaterial:null;for(let e=0,t=r.length;e<t;e++){var i=r[e];const u=i.object;var a,s,o,l,h,c,m=i.geometry,f=null===p?i.material:p,i=i.group;u.layers.test(d.layers)&&(c=h=l=o=s=a=void 0,a=u,s=n,o=d,l=m,h=f,c=i,a.onBeforeRender(L,s,o,l,h,c),a.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,a.matrixWorld),a.normalMatrix.getNormalMatrix(a.modelViewMatrix),h.onBeforeRender(L,s,o,l,a,c),!0===h.transparent&&h.side===Ie?(h.side=De,h.needsUpdate=!0,L.renderBufferDirect(o,s,l,h,a,c),h.side=Pe,h.needsUpdate=!0,L.renderBufferDirect(o,s,l,h,a,c),h.side=Ie):L.renderBufferDirect(o,s,l,h,a,c),a.onAfterRender(L,s,o,l,h,c))}}function Se(e,t,r){!0!==t.isScene&&(t=X);const n=N.get(e);var i=C.state.lights,a=C.state.shadowsArray,c=i.state.version;const s=re.getParameters(e,i.state,a,t,r);a=re.getProgramCacheKey(s);let o=n.programs,l=(n.environment=e.isMeshStandardMaterial?t.environment:null,n.fog=t.fog,n.envMap=(e.isMeshStandardMaterial?Q:K).get(e.envMap||n.environment),void 0===o&&(e.addEventListener("dispose",ye),o=new Map,n.programs=o),o.get(a));if(void 0!==l){if(n.currentProgram===l&&n.lightsStateVersion===c)return Te(e,s),l}else s.uniforms=re.getUniforms(e),e.onBuild(r,s,L),e.onBeforeCompile(s,L),l=re.acquireProgram(s,a),o.set(a,l),n.uniforms=s.uniforms;const h=n.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(h.clippingPlanes=se.uniform),Te(e,s),n.needsLights=(t=e).isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights,n.lightsStateVersion=c,n.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);r=l.getUniforms(),a=os.seqWithValue(r.seq,h);return n.currentProgram=l,n.uniformsList=a,l}function Te(e,t){const r=N.get(e);r.outputEncoding=t.outputEncoding,r.instancing=t.instancing,r.skinning=t.skinning,r.morphTargets=t.morphTargets,r.morphNormals=t.morphNormals,r.morphColors=t.morphColors,r.morphTargetsCount=t.morphTargetsCount,r.numClippingPlanes=t.numClippingPlanes,r.numIntersection=t.numClipIntersection,r.vertexAlphas=t.vertexAlphas,r.vertexTangents=t.vertexTangents,r.toneMapping=t.toneMapping}be.setAnimationLoop(function(e){_e&&_e(e)}),"undefined"!=typeof self&&be.setContext(self),this.setAnimationLoop=function(e){_e=e,fe.setAnimationLoop(e),null===e?be.stop():be.start()},fe.addEventListener("sessionstart",xe),fe.addEventListener("sessionend",Me),this.render=function(r,e){if(void 0===e||!0===e.isCamera){if(!0!==f){!0===r.autoUpdate&&r.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===fe.enabled&&!0===fe.isPresenting&&(!0===fe.cameraAutoUpdate&&fe.updateCamera(e),e=fe.getCamera()),!0===r.isScene&&r.onBeforeRender(L,r,e,O),(C=ae.get(r,p.length)).init(),p.push(C),R.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),A.setFromProjectionMatrix(R),V=this.localClippingEnabled,G=se.init(this.clippingPlanes,V,e),(m=ie.get(r,c.length)).init(),c.push(m),function u(r,n,i,a){if(!1===r.visible)return;const t=r.layers.test(n.layers);if(t)if(r.isGroup)i=r.renderOrder;else if(r.isLOD)!0===r.autoUpdate&&r.update(n);else if(r.isLight)C.pushLight(r),r.castShadow&&C.pushShadow(r);else if(r.isSprite){if(!r.frustumCulled||A.intersectsSprite(r)){a&&j.setFromMatrixPosition(r.matrixWorld).applyMatrix4(R);const p=te.update(r),e=r.material;e.visible&&m.push(r,p,e,i,j.z,null)}}else if((r.isMesh||r.isLine||r.isPoints)&&(r.isSkinnedMesh&&r.skeleton.frame!==Z.render.frame&&(r.skeleton.update(),r.skeleton.frame=Z.render.frame),!r.frustumCulled||A.intersectsObject(r))){a&&j.setFromMatrixPosition(r.matrixWorld).applyMatrix4(R);const s=te.update(r),o=r.material;if(Array.isArray(o)){const l=s.groups;for(let e=0,t=l.length;e<t;e++){const h=l[e],c=o[h.materialIndex];c&&c.visible&&m.push(r,s,c,i,j.z,h)}}else o.visible&&m.push(r,s,o,i,j.z,null)}const d=r.children;for(let e=0,t=d.length;e<t;e++)u(d[e],n,i,a)}(r,e,0,L.sortObjects),m.finish(),!0===L.sortObjects&&m.sort(b,w),!0===G&&se.beginShadows();var t=C.state.shadowsArray;if(oe.render(t,r,e),!0===G&&se.endShadows(),!0===this.info.autoReset&&this.info.reset(),le.render(m,r),C.setupLights(L.physicallyCorrectLights),e.isArrayCamera){var n=e.cameras;for(let e=0,t=n.length;e<t;e++){var i=n[e];we(m,r,i,i.viewport)}}else we(m,r,e);null!==O&&(U.updateMultisampleRenderTarget(O),U.updateRenderTargetMipmap(O)),!0===r.isScene&&r.onAfterRender(L,r,e),pe.resetDefaultState(),F=-1,B=null,p.pop(),C=0<p.length?p[p.length-1]:null,c.pop(),m=0<c.length?c[c.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return g},this.getActiveMipmapLevel=function(){return v},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(e,t,r){N.get(e.texture).__webglTexture=t,N.get(e.depthTexture).__webglTexture=r;const n=N.get(e);n.__hasExternalTextures=!0,n.__hasExternalTextures&&(n.__autoAllocateDepthBuffer=void 0===r,n.__autoAllocateDepthBuffer||!0===d.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),n.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const r=N.get(e);r.__webglFramebuffer=t,r.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,r=0){O=e,g=t,v=r;let n=!0;var i;e&&(void 0!==(i=N.get(e)).__useDefaultFramebuffer?(I.bindFramebuffer(P.FRAMEBUFFER,null),n=!1):void 0===i.__webglFramebuffer?U.setupRenderTarget(e):i.__hasExternalTextures&&U.rebindTextures(e,N.get(e.texture).__webglTexture,N.get(e.depthTexture).__webglTexture));let a=null,s=!1,o=!1;x=e?(((i=e.texture).isData3DTexture||i.isDataArrayTexture)&&(o=!0),i=N.get(e).__webglFramebuffer,e.isWebGLCubeRenderTarget?(a=i[t],s=!0):a=D.isWebGL2&&0<e.samples&&!1===U.useMultisampledRTT(e)?N.get(e).__webglMultisampledFramebuffer:i,y.copy(e.viewport),_.copy(e.scissor),e.scissorTest):(y.copy(E).multiplyScalar(z).floor(),_.copy(S).multiplyScalar(z).floor(),T),I.bindFramebuffer(P.FRAMEBUFFER,a)&&D.drawBuffers&&n&&I.drawBuffers(e,a),I.viewport(y),I.scissor(_),I.setScissorTest(x),s?(i=N.get(e.texture),P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,r)):o&&(i=N.get(e.texture),e=t||0,P.framebufferTextureLayer(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,i.__webglTexture,r||0,e)),F=-1},this.readRenderTargetPixels=function(t,r,n,i,a,s,o){if(t&&t.isWebGLRenderTarget){let e=N.get(t).__webglFramebuffer;if(e=t.isWebGLCubeRenderTarget&&void 0!==o?e[o]:e){I.bindFramebuffer(P.FRAMEBUFFER,e);try{var l=t.texture,h=l.format,c=l.type;if(h!==We&&de.convert(h)!==P.getParameter(P.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=c===Ve&&(d.has("EXT_color_buffer_half_float")||D.isWebGL2&&d.has("EXT_color_buffer_float"));if(!(c===Be||de.convert(c)===P.getParameter(P.IMPLEMENTATION_COLOR_READ_TYPE)||c===Ge&&(D.isWebGL2||d.has("OES_texture_float")||d.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");0<=r&&r<=t.width-i&&0<=n&&n<=t.height-a&&P.readPixels(r,n,i,a,de.convert(h),de.convert(c),s)}finally{const e=null!==O?N.get(O).__webglFramebuffer:null;I.bindFramebuffer(P.FRAMEBUFFER,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,r=0){var n,i;!0===t.isFramebufferTexture?(i=Math.pow(2,-r),n=Math.floor(t.image.width*i),i=Math.floor(t.image.height*i),U.setTexture2D(t,0),P.copyTexSubImage2D(P.TEXTURE_2D,r,0,0,e.x,e.y,n,i),I.unbindTexture()):console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.")},this.copyTextureToTexture=function(e,t,r,n=0){var i=t.image.width,a=t.image.height,s=de.convert(r.format),o=de.convert(r.type);U.setTexture2D(r,0),P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,r.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,r.unpackAlignment),t.isDataTexture?P.texSubImage2D(P.TEXTURE_2D,n,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?P.compressedTexSubImage2D(P.TEXTURE_2D,n,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):P.texSubImage2D(P.TEXTURE_2D,n,e.x,e.y,s,o,t.image),0===n&&r.generateMipmaps&&P.generateMipmap(P.TEXTURE_2D),I.unbindTexture()},this.copyTextureToTexture3D=function(t,r,n,i,a=0){if(L.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var s=t.max.x-t.min.x+1,o=t.max.y-t.min.y+1,l=t.max.z-t.min.z+1,h=de.convert(i.format),u=de.convert(i.type);let e;if(i.isData3DTexture)U.setTexture3D(i,0),e=P.TEXTURE_3D;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");U.setTexture2DArray(i,0),e=P.TEXTURE_2D_ARRAY}P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,i.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,i.unpackAlignment);var d=P.getParameter(P.UNPACK_ROW_LENGTH),p=P.getParameter(P.UNPACK_IMAGE_HEIGHT),m=P.getParameter(P.UNPACK_SKIP_PIXELS),f=P.getParameter(P.UNPACK_SKIP_ROWS),g=P.getParameter(P.UNPACK_SKIP_IMAGES),c=n.isCompressedTexture?n.mipmaps[0]:n.image;P.pixelStorei(P.UNPACK_ROW_LENGTH,c.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,c.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,t.min.x),P.pixelStorei(P.UNPACK_SKIP_ROWS,t.min.y),P.pixelStorei(P.UNPACK_SKIP_IMAGES,t.min.z),n.isDataTexture||n.isData3DTexture?P.texSubImage3D(e,a,r.x,r.y,r.z,s,o,l,h,u,c.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),P.compressedTexSubImage3D(e,a,r.x,r.y,r.z,s,o,l,h,c.data)):P.texSubImage3D(e,a,r.x,r.y,r.z,s,o,l,h,u,c),P.pixelStorei(P.UNPACK_ROW_LENGTH,d),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,p),P.pixelStorei(P.UNPACK_SKIP_PIXELS,m),P.pixelStorei(P.UNPACK_SKIP_ROWS,f),P.pixelStorei(P.UNPACK_SKIP_IMAGES,g),0===a&&i.generateMipmaps&&P.generateMipmap(e),I.unbindTexture()}},this.initTexture=function(e){U.setTexture2D(e,0),I.unbindTexture()},this.resetState=function(){g=0,v=0,O=null,I.reset(),pe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}to.prototype.isWebGLRenderer=!0;class ro extends to{}class no{constructor(e,t=25e-5){this.name="",this.color=new x(e),this.density=t}clone(){return new no(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}no.prototype.isFogExp2=ro.prototype.isWebGL1Renderer=!0;class io{constructor(e,t=1,r=1e3){this.name="",this.color=new x(e),this.near=t,this.far=r}clone(){return new io(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}io.prototype.isFog=!0;class ao extends M{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}ao.prototype.isScene=!0;class so{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=a,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Tt()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(r,n,i){r*=this.stride,i*=n.stride;for(let e=0,t=this.stride;e<t;e++)this.array[r+e]=n.array[i+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Tt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const t=new this.constructor(e,this.stride);return t.setUsage(this.usage),t}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Tt()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}so.prototype.isInterleavedBuffer=!0;const oo=new Ce;class lo{constructor(e,t,r,n=!1){this.name="",this.data=e,this.itemSize=t,this.offset=r,this.normalized=!0===n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(r){for(let e=0,t=this.data.count;e<t;e++)oo.fromBufferAttribute(this,e),oo.applyMatrix4(r),this.setXYZ(e,oo.x,oo.y,oo.z);return this}applyNormalMatrix(r){for(let e=0,t=this.count;e<t;e++)oo.fromBufferAttribute(this,e),oo.applyNormalMatrix(r),this.setXYZ(e,oo.x,oo.y,oo.z);return this}transformDirection(r){for(let e=0,t=this.count;e<t;e++)oo.fromBufferAttribute(this,e),oo.transformDirection(r),this.setXYZ(e,oo.x,oo.y,oo.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this}setXYZ(e,t,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this}setXYZW(e,t,r,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=r,this.data.array[e+2]=n,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new lo(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const r=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)r.push(this.data.array[t+e])}return new Tn(new this.array.constructor(r),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const r=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)r.push(this.data.array[t+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:r,normalized:this.normalized}}}}lo.prototype.isInterleavedBufferAttribute=!0;class ho extends bn{constructor(e){super(),this.type="SpriteMaterial",this.color=new x(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}ho.prototype.isSpriteMaterial=!0;let co;const uo=new Ce,po=new Ce,mo=new Ce,fo=new Re,go=new Re,vo=new Le,yo=new Ce,_o=new Ce,xo=new Ce,Mo=new Re,bo=new Re,wo=new Re;class Eo extends M{constructor(e){var t;super(),this.type="Sprite",void 0===co&&(co=new T,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new so(t,5),co.setIndex([0,1,2,0,2,3]),co.setAttribute("position",new lo(t,3,0,!1)),co.setAttribute("uv",new lo(t,2,3,!1))),this.geometry=co,this.material=void 0!==e?e:new ho,this.center=new Re(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),po.setFromMatrixScale(this.matrixWorld),vo.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),mo.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&po.multiplyScalar(-mo.z);var r=this.material.rotation;let n,i;0!==r&&(i=Math.cos(r),n=Math.sin(r));var r=this.center,a=(So(yo.set(-.5,-.5,0),mo,r,po,n,i),So(_o.set(.5,-.5,0),mo,r,po,n,i),So(xo.set(.5,.5,0),mo,r,po,n,i),Mo.set(0,0),bo.set(1,0),wo.set(1,1),e.ray.intersectTriangle(yo,_o,xo,!1,uo));null===a&&(So(_o.set(-.5,.5,0),mo,r,po,n,i),bo.set(0,1),null===(a=e.ray.intersectTriangle(yo,xo,_o,!1,uo)))||((r=e.ray.origin.distanceTo(uo))<e.near||r>e.far||t.push({distance:r,point:uo.clone(),uv:xn.getUV(uo,yo,_o,xo,Mo,bo,wo,new Re),face:null,object:this}))}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function So(e,t,r,n,i,a){fo.subVectors(e,r).addScalar(.5).multiply(n),void 0!==i?(go.x=a*fo.x-i*fo.y,go.y=i*fo.x+a*fo.y):go.copy(fo),e.copy(t),e.x+=go.x,e.y+=go.y,e.applyMatrix4(vo)}Eo.prototype.isSprite=!0;const To=new Ce,Ao=new Ce;class Ro extends M{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var r=e.levels;for(let e=0,t=r.length;e<t;e++){const n=r[e];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const r=this.levels;let n;for(n=0;n<r.length&&!(t<r[n].distance);n++);return r.splice(n,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(r){var n=this.levels;if(0<n.length){let e,t;for(e=1,t=n.length;e<t&&!(r<n[e].distance);e++);return n[e-1].object}return null}raycast(e,t){var r;0<this.levels.length&&(To.setFromMatrixPosition(this.matrixWorld),r=e.ray.origin.distanceTo(To),this.getObjectForDistance(r).raycast(e,t))}update(r){const n=this.levels;if(1<n.length){To.setFromMatrixPosition(r.matrixWorld),Ao.setFromMatrixPosition(this.matrixWorld);var i=To.distanceTo(Ao)/r.zoom;n[0].object.visible=!0;let e,t;for(e=1,t=n.length;e<t&&i>=n[e].distance;e++)n[e-1].object.visible=!1,n[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)n[e].object.visible=!1}}toJSON(e){const r=super.toJSON(e);!1===this.autoUpdate&&(r.object.autoUpdate=!1),r.object.levels=[];var n=this.levels;for(let e=0,t=n.length;e<t;e++){var i=n[e];r.object.levels.push({object:i.object.uuid,distance:i.distance})}return r}}const Co=new Ce,Lo=new tr,Po=new tr,Do=new Ce,Io=new Le;class No extends si{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Le,this.bindMatrixInverse=new Le}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const r=new tr,n=this.geometry.attributes.skinWeight;for(let e=0,t=n.count;e<t;e++){r.fromBufferAttribute(n,e);var i=1/r.manhattanLength();i!=1/0?r.multiplyScalar(i):r.set(1,0,0,0),n.setXYZW(e,r.x,r.y,r.z,r.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var r=this.skeleton,n=this.geometry;Lo.fromBufferAttribute(n.attributes.skinIndex,e),Po.fromBufferAttribute(n.attributes.skinWeight,e),Co.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var i,a=Po.getComponent(e);0!==a&&(i=Lo.getComponent(e),Io.multiplyMatrices(r.bones[i].matrixWorld,r.boneInverses[i]),t.addScaledVector(Do.copy(Co).applyMatrix4(Io),a))}return t.applyMatrix4(this.bindMatrixInverse)}}No.prototype.isSkinnedMesh=!0;class Uo extends M{constructor(){super(),this.type="Bone"}}Uo.prototype.isBone=!0;class Oo extends er{constructor(e=null,t=1,r=1,n,i,a,s,o,l=X,h=X,c,u){super(null,a,s,o,l,h,n,i,c,u),this.image={data:e,width:t,height:r},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Oo.prototype.isDataTexture=!0;const Fo=new Le,Bo=new Le;class Ho{constructor(e=[],t=[]){this.uuid=Tt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Le)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){const r=new Le;this.bones[e]&&r.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(r)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const r=this.bones[e];r&&r.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){var r=this.bones,n=this.boneInverses,i=this.boneMatrices;const e=this.boneTexture;for(let e=0,t=r.length;e<t;e++){var a=r[e]?r[e].matrixWorld:Bo;Fo.multiplyMatrices(a,n[e]),Fo.toArray(i,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Ho(this.bones,this.boneInverses)}computeBoneTexture(){var e=Pt(Math.sqrt(4*this.bones.length));e=Math.max(e,4);const t=new Float32Array(e*e*4),r=(t.set(this.boneMatrices),new Oo(t,e,e,We,Ge));return r.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=r,this.boneTextureSize=e,this}getBoneByName(r){for(let e=0,t=this.bones.length;e<t;e++){var n=this.bones[e];if(n.name===r)return n}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(r,n){this.uuid=r.uuid;for(let t=0,e=r.bones.length;t<e;t++){var i=r.bones[t];let e=n[i];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),e=new Uo),this.bones.push(e),this.boneInverses.push((new Le).fromArray(r.boneInverses[t]))}return this.init(),this}toJSON(){const r={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};r.uuid=this.uuid;var n=this.bones,i=this.boneInverses;for(let e=0,t=n.length;e<t;e++){var a=n[e];r.bones.push(a.uuid);const s=i[e];r.boneInverses.push(s.toArray())}return r}}class zo extends Tn{constructor(e,t,r,n=1){"number"==typeof r&&(n=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,r),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}zo.prototype.isInstancedBufferAttribute=!0;const Go=new Le,Vo=new Le,ko=[],Wo=new si;class jo extends si{constructor(e,t,r){super(e,t),this.instanceMatrix=new zo(new Float32Array(16*r),16),this.instanceColor=null,this.count=r,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,n){var t=this.matrixWorld,i=this.count;if(Wo.geometry=this.geometry,Wo.material=this.material,void 0!==Wo.material)for(let r=0;r<i;r++){this.getMatrixAt(r,Go),Vo.multiplyMatrices(t,Go),Wo.matrixWorld=Vo,Wo.raycast(e,ko);for(let e=0,t=ko.length;e<t;e++){const a=ko[e];a.instanceId=r,a.object=this,n.push(a)}ko.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new zo(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}jo.prototype.isInstancedMesh=!0;class Xo extends bn{constructor(e){super(),this.type="LineBasicMaterial",this.color=new x(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Xo.prototype.isLineBasicMaterial=!0;const qo=new Ce,Yo=new Ce,Jo=new Le,Zo=new Br,Ko=new Lr;class Qo extends M{constructor(e=new T,t=new Xo){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var r=e.attributes.position;const n=[0];for(let e=1,t=r.count;e<t;e++)qo.fromBufferAttribute(r,e-1),Yo.fromBufferAttribute(r,e),n[e]=n[e-1],n[e]+=qo.distanceTo(Yo);e.setAttribute("lineDistance",new V(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(r,c){const e=this.geometry;var t=this.matrixWorld,u=r.params.Line.threshold,n=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),Ko.copy(e.boundingSphere),Ko.applyMatrix4(t),Ko.radius+=u,!1!==r.ray.intersectsSphere(Ko)){Jo.copy(t).invert(),Zo.copy(r.ray).applyMatrix4(Jo);var t=u/((this.scale.x+this.scale.y+this.scale.z)/3),d=t*t;const a=new Ce,s=new Ce,o=new Ce,l=new Ce;var p=this.isLineSegments?2:1;if(e.isBufferGeometry){const h=e.index;var m,i=e.attributes.position;if(null!==h)for(let e=Math.max(0,n.start),t=Math.min(h.count,n.start+n.count)-1;e<t;e+=p){var f=h.getX(e),g=h.getX(e+1),f=(a.fromBufferAttribute(i,f),s.fromBufferAttribute(i,g),Zo.distanceSqToSegment(a,s,l,o));d<f||(l.applyMatrix4(this.matrixWorld),(g=r.ray.origin.distanceTo(l))<r.near||g>r.far||c.push({distance:g,point:o.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else for(let e=Math.max(0,n.start),t=Math.min(i.count,n.start+n.count)-1;e<t;e+=p)a.fromBufferAttribute(i,e),s.fromBufferAttribute(i,e+1),d<Zo.distanceSqToSegment(a,s,l,o)||(l.applyMatrix4(this.matrixWorld),(m=r.ray.origin.distanceTo(l))<r.near||m>r.far||c.push({distance:m,point:o.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var n=t[r[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var i=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Qo.prototype.isLine=!0;const $o=new Ce,el=new Ce;class tl extends Qo{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var r=e.attributes.position;const n=[];for(let e=0,t=r.count;e<t;e+=2)$o.fromBufferAttribute(r,e),el.fromBufferAttribute(r,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+$o.distanceTo(el);e.setAttribute("lineDistance",new V(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}tl.prototype.isLineSegments=!0;class rl extends Qo{constructor(e,t){super(e,t),this.type="LineLoop"}}rl.prototype.isLineLoop=!0;class nl extends bn{constructor(e){super(),this.type="PointsMaterial",this.color=new x(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}nl.prototype.isPointsMaterial=!0;const il=new Le,al=new Br,sl=new Lr,ol=new Ce;class ll extends M{constructor(e=new T,t=new nl){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(r,n){const e=this.geometry;var i=this.matrixWorld,t=r.params.Points.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),sl.copy(e.boundingSphere),sl.applyMatrix4(i),sl.radius+=t,!1!==r.ray.intersectsSphere(sl)){il.copy(i).invert(),al.copy(r.ray).applyMatrix4(il);var t=t/((this.scale.x+this.scale.y+this.scale.z)/3),s=t*t;if(e.isBufferGeometry){const h=e.index;var o=e.attributes.position;if(null!==h)for(let e=Math.max(0,a.start),t=Math.min(h.count,a.start+a.count);e<t;e++){var l=h.getX(e);ol.fromBufferAttribute(o,l),hl(ol,l,s,i,r,n,this)}else for(let e=Math.max(0,a.start),t=Math.min(o.count,a.start+a.count);e<t;e++)ol.fromBufferAttribute(o,e),hl(ol,e,s,i,r,n,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,r=Object.keys(t);if(0<r.length){var n=t[r[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){var i=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{t=e.morphTargets;void 0!==t&&0<t.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function hl(e,t,r,n,i,a,s){var o=al.distanceSqToPoint(e);if(o<r){const l=new Ce;al.closestPointToPoint(e,l),l.applyMatrix4(n);r=i.ray.origin.distanceTo(l);r<i.near||r>i.far||a.push({distance:r,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}ll.prototype.isPoints=!0;class cl extends er{constructor(t,e,r,n,i,a,s,o,l){super(t,e,r,n,i,a,s,o,l),this.minFilter=void 0!==a?a:Ue,this.magFilter=void 0!==i?i:Ue,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class ul extends er{constructor(e,t,r){super({width:e,height:t}),this.format=r,this.magFilter=X,this.minFilter=X,this.generateMipmaps=!1,this.needsUpdate=!0}}class dl extends er{constructor(e,t,r,n,i,a,s,o,l,h,c,u){super(null,a,s,o,l,h,n,i,c,u),this.image={width:t,height:r},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}dl.prototype.isCompressedTexture=ul.prototype.isFramebufferTexture=cl.prototype.isVideoTexture=!0;class pl extends er{constructor(e,t,r,n,i,a,s,o,l){super(e,t,r,n,i,a,s,o,l),this.needsUpdate=!0}}class ml{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){const r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return r}getSpacedPoints(t=5){const r=[];for(let e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const r=[];let n,i=this.getPoint(0),a=0;r.push(0);for(let e=1;e<=t;e++)n=this.getPoint(e/t),a+=n.distanceTo(i),r.push(a),i=n;return this.cacheArcLengths=r}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var r=this.getLengths();let n=0;var i=r.length;let a,s=(a=t||e*r[i-1],0),o=i-1,l;for(;s<=o;)if((l=r[n=Math.floor(s+(o-s)/2)]-a)<0)s=n+1;else{if(!(0<l)){o=n;break}o=n-1}if(r[n=o]===a)return n/(i-1);t=r[n],e=r[n+1],e=(a-t)/(e-t);return(n+e)/(i-1)}getTangent(e,t){let r=e-1e-4,n=e+1e-4;r<0&&(r=0),1<n&&(n=1);var e=this.getPoint(r),i=this.getPoint(n);const a=t||new(e.isVector2?Re:Ce);return a.copy(i).sub(e).normalize(),a}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(r,c){const e=new Ce,n=[],i=[],a=[],s=new Ce,o=new Le;for(let e=0;e<=r;e++){var u=e/r;n[e]=this.getTangentAt(u,new Ce)}i[0]=new Ce,a[0]=new Ce;let t=Number.MAX_VALUE;var l,h=Math.abs(n[0].x),d=Math.abs(n[0].y),p=Math.abs(n[0].z);h<=t&&(t=h,e.set(1,0,0)),d<=t&&(t=d,e.set(0,1,0)),p<=t&&e.set(0,0,1),s.crossVectors(n[0],e).normalize(),i[0].crossVectors(n[0],s),a[0].crossVectors(n[0],i[0]);for(let e=1;e<=r;e++)i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(n[e-1],n[e]),s.length()>Number.EPSILON&&(s.normalize(),l=Math.acos(At(n[e-1].dot(n[e]),-1,1)),i[e].applyMatrix4(o.makeRotationAxis(s,l))),a[e].crossVectors(n[e],i[e]);if(!0===c){let t=Math.acos(At(i[0].dot(i[r]),-1,1));t/=r,0<n[0].dot(s.crossVectors(i[0],i[r]))&&(t=-t);for(let e=1;e<=r;e++)i[e].applyMatrix4(o.makeRotationAxis(n[e],t*e)),a[e].crossVectors(n[e],i[e])}return{tangents:n,normals:i,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class fl extends ml{constructor(e=0,t=0,r=1,n=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=n,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const r=t||new Re;var n=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(t=Math.abs(i)<Number.EPSILON;i<0;)i+=n;for(;i>n;)i-=n;i<Number.EPSILON&&(i=t?0:n),!0!==this.aClockwise||t||(i===n?i=-n:i-=n);var a,s,t=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(t),l=this.aY+this.yRadius*Math.sin(t);return 0!==this.aRotation&&(e=Math.cos(this.aRotation),t=Math.sin(this.aRotation),a=o-this.aX,s=l-this.aY,o=a*e-s*t+this.aX,l=a*t+s*e+this.aY),r.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}fl.prototype.isEllipseCurve=pl.prototype.isCanvasTexture=!0;class gl extends fl{constructor(e,t,r,n,i,a){super(e,t,r,r,n,i,a),this.type="ArcCurve"}}function vl(){let i=0,a=0,s=0,o=0;function l(e,t,r,n){i=e,a=r,s=-3*e+3*t-2*r-n,o=2*e-2*t+r+n}return{initCatmullRom:function(e,t,r,n,i){l(t,r,i*(r-e),i*(n-t))},initNonuniformCatmullRom:function(e,t,r,n,i,a,s){e=(t-e)/i-(r-e)/(i+a)+(r-t)/a,i=(r-t)/a-(n-t)/(a+s)+(n-r)/s;l(t,r,e*=a,i*=a)},calc:function(e){var t=e*e,r=t*e;return i+a*e+s*t+o*r}}}gl.prototype.isArcCurve=!0;const yl=new Ce,_l=new vl,xl=new vl,Ml=new vl;class bl extends ml{constructor(e=[],t=!1,r="centripetal",n=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=r,this.tension=n}getPoint(n,e=new Ce){const t=e;var e=this.points,r=e.length,n=(r-(this.closed?0:1))*n;let i=Math.floor(n),a=n-i;this.closed?i+=0<i?0:(Math.floor(Math.abs(i)/r)+1)*r:0===a&&i===r-1&&(i=r-2,a=1);let s,o;s=this.closed||0<i?e[(i-1)%r]:(yl.subVectors(e[0],e[1]).add(e[0]),yl);const l=e[i%r],h=e[(i+1)%r];if(o=this.closed||i+2<r?e[(i+2)%r]:(yl.subVectors(e[r-1],e[r-2]).add(e[r-1]),yl),"centripetal"===this.curveType||"chordal"===this.curveType){n="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),n),t=Math.pow(l.distanceToSquared(h),n),r=Math.pow(h.distanceToSquared(o),n);t<1e-4&&(t=1),e<1e-4&&(e=t),r<1e-4&&(r=t),_l.initNonuniformCatmullRom(s.x,l.x,h.x,o.x,e,t,r),xl.initNonuniformCatmullRom(s.y,l.y,h.y,o.y,e,t,r),Ml.initNonuniformCatmullRom(s.z,l.z,h.z,o.z,e,t,r)}else"catmullrom"===this.curveType&&(_l.initCatmullRom(s.x,l.x,h.x,o.x,this.tension),xl.initCatmullRom(s.y,l.y,h.y,o.y,this.tension),Ml.initCatmullRom(s.z,l.z,h.z,o.z,this.tension));return t.set(_l.calc(a),xl.calc(a),Ml.calc(a)),t}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){const n=r.points[e];this.points.push(n.clone())}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}toJSON(){const r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){const n=this.points[e];r.points.push(n.toArray())}return r.closed=this.closed,r.curveType=this.curveType,r.tension=this.tension,r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var n=r.points[e];this.points.push((new Ce).fromArray(n))}return this.closed=r.closed,this.curveType=r.curveType,this.tension=r.tension,this}}function wl(e,t,r,n,i){var t=.5*(n-t),i=.5*(i-r),a=e*e;return(2*r-2*n+t+i)*(e*a)+(-3*r+3*n-2*t-i)*a+t*e+r}function El(e,t,r,n){return(i=1-(i=e))*i*t+2*(1-e)*e*r+e*e*n;var i}function Sl(e,t,r,n,i){return(a=1-(a=e))*a*a*t+3*(a=1-e)*a*e*r+3*(1-e)*e*e*n+e*e*e*i;var a}class Tl extends ml{constructor(e=new Re,t=new Re,r=new Re,n=new Re){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new Re){const r=t;var t=this.v0,n=this.v1,i=this.v2,a=this.v3;return r.set(Sl(e,t.x,n.x,i.x,a.x),Sl(e,t.y,n.y,i.y,a.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Tl.prototype.isCubicBezierCurve=bl.prototype.isCatmullRomCurve3=!0;class Al extends ml{constructor(e=new Ce,t=new Ce,r=new Ce,n=new Ce){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=r,this.v3=n}getPoint(e,t=new Ce){const r=t;var t=this.v0,n=this.v1,i=this.v2,a=this.v3;return r.set(Sl(e,t.x,n.x,i.x,a.x),Sl(e,t.y,n.y,i.y,a.y),Sl(e,t.z,n.z,i.z,a.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Rl extends ml{constructor(e=new Re,t=new Re){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Re){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const r=t||new Re;return r.copy(this.v2).sub(this.v1).normalize(),r}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Rl.prototype.isLineCurve=Al.prototype.isCubicBezierCurve3=!0;class Cl extends ml{constructor(e=new Ce,t=new Ce){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new Ce){const r=t;return 1===e?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(e).add(this.v1)),r}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Ll extends ml{constructor(e=new Re,t=new Re,r=new Re){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Re){const r=t;var t=this.v0,n=this.v1,i=this.v2;return r.set(El(e,t.x,n.x,i.x),El(e,t.y,n.y,i.y)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Ll.prototype.isQuadraticBezierCurve=!0;class Pl extends ml{constructor(e=new Ce,t=new Ce,r=new Ce){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=r}getPoint(e,t=new Ce){const r=t;var t=this.v0,n=this.v1,i=this.v2;return r.set(El(e,t.x,n.x,i.x),El(e,t.y,n.y,i.y),El(e,t.z,n.z,i.z)),r}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Pl.prototype.isQuadraticBezierCurve3=!0;class Dl extends ml{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Re){const r=t;var t=this.points,e=(t.length-1)*e,n=Math.floor(e),e=e-n,i=t[0===n?n:n-1],a=t[n],s=t[n>t.length-2?t.length-1:n+1],t=t[n>t.length-3?t.length-1:n+2];return r.set(wl(e,i.x,a.x,s.x,t.x),wl(e,i.y,a.y,s.y,t.y)),r}copy(r){super.copy(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){const n=r.points[e];this.points.push(n.clone())}return this}toJSON(){const r=super.toJSON();r.points=[];for(let e=0,t=this.points.length;e<t;e++){const n=this.points[e];r.points.push(n.toArray())}return r}fromJSON(r){super.fromJSON(r),this.points=[];for(let e=0,t=r.points.length;e<t;e++){var n=r.points[e];this.points.push((new Re).fromArray(n))}return this}}Dl.prototype.isSplineCurve=!0;var Il=Object.freeze({__proto__:null,ArcCurve:gl,CatmullRomCurve3:bl,CubicBezierCurve:Tl,CubicBezierCurve3:Al,EllipseCurve:fl,LineCurve:Rl,LineCurve3:Cl,QuadraticBezierCurve:Ll,QuadraticBezierCurve3:Pl,SplineCurve:Dl});class Nl extends ml{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Rl(t,e))}getPoint(e,t){var r=e*this.getLength(),n=this.getCurveLengths();let i=0;for(;i<n.length;){if(n[i]>=r){var a=n[i]-r;const o=this.curves[i];var s=o.getLength();return o.getPointAt(0===s?0:1-a/s,t)}i++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const r=[];let n=0;for(let e=0,t=this.curves.length;e<t;e++)n+=this.curves[e].getLength(),r.push(n);return this.cacheLengths=r}getSpacedPoints(t=40){const r=[];for(let e=0;e<=t;e++)r.push(this.getPoint(e/t));return this.autoClose&&r.push(r[0]),r}getPoints(r=12){const n=[];let i;for(let e=0,t=this.curves;e<t.length;e++){const l=t[e];var a=l.isEllipseCurve?2*r:l.isLineCurve||l.isLineCurve3?1:l.isSplineCurve?r*l.points.length:r,s=l.getPoints(a);for(let e=0;e<s.length;e++){var o=s[e];i&&i.equals(o)||(n.push(o),i=o)}}return this.autoClose&&1<n.length&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}copy(r){super.copy(r),this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){const n=r.curves[e];this.curves.push(n.clone())}return this.autoClose=r.autoClose,this}toJSON(){const r=super.toJSON();r.autoClose=this.autoClose,r.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const n=this.curves[e];r.curves.push(n.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.autoClose=r.autoClose,this.curves=[];for(let e=0,t=r.curves.length;e<t;e++){var n=r.curves[e];this.curves.push((new Il[n.type]).fromJSON(n))}return this}}class Ul extends Nl{constructor(e){super(),this.type="Path",this.currentPoint=new Re,e&&this.setFromPoints(e)}setFromPoints(r){this.moveTo(r[0].x,r[0].y);for(let e=1,t=r.length;e<t;e++)this.lineTo(r[e].x,r[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var r=new Rl(this.currentPoint.clone(),new Re(e,t));return this.curves.push(r),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,r,n){e=new Ll(this.currentPoint.clone(),new Re(e,t),new Re(r,n));return this.curves.push(e),this.currentPoint.set(r,n),this}bezierCurveTo(e,t,r,n,i,a){e=new Tl(this.currentPoint.clone(),new Re(e,t),new Re(r,n),new Re(i,a));return this.curves.push(e),this.currentPoint.set(i,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new Dl(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,r,n,i,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,r,n,i,a),this}absarc(e,t,r,n,i,a){return this.absellipse(e,t,r,r,n,i,a),this}ellipse(e,t,r,n,i,a,s,o){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,r,n,i,a,s,o),this}absellipse(e,t,r,n,i,a,s,o){const l=new fl(e,t,r,n,i,a,s,o);if(0<this.curves.length){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);e=l.getPoint(1);return this.currentPoint.copy(e),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ol extends T{constructor(r=[new Re(0,.5),new Re(.5,0),new Re(0,-.5)],n=12,c=0,e=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:r,segments:n,phiStart:c,phiLength:e},n=Math.floor(n),e=At(e,0,2*Math.PI);const u=[],d=[],p=[],i=[],m=[];var f=1/n;const a=new Ce,s=new Re,t=new Ce,g=new Ce,o=new Ce;let l=0,h=0;for(let e=0;e<=r.length-1;e++)switch(e){case 0:l=r[e+1].x-r[e].x,h=r[e+1].y-r[e].y,t.x=+h,t.y=-l,t.z=0*h,o.copy(t),t.normalize(),i.push(t.x,t.y,t.z);break;case r.length-1:i.push(o.x,o.y,o.z);break;default:l=r[e+1].x-r[e].x,h=r[e+1].y-r[e].y,t.x=+h,t.y=-l,t.z=0*h,g.copy(t),t.x+=o.x,t.y+=o.y,t.z+=o.z,t.normalize(),i.push(t.x,t.y,t.z),o.copy(g)}for(let t=0;t<=n;t++){var v=c+t*f*e,y=Math.sin(v),_=Math.cos(v);for(let e=0;e<=r.length-1;e++){a.x=r[e].x*y,a.y=r[e].y,a.z=r[e].x*_,d.push(a.x,a.y,a.z),s.x=t/n,s.y=e/(r.length-1),p.push(s.x,s.y);var x=i[3*e+0]*y,M=i[3*e+1],b=i[3*e+0]*_;m.push(x,M,b)}}for(let t=0;t<n;t++)for(let e=0;e<r.length-1;e++){var w=e+t*r.length,E=w+r.length,S=w+r.length+1,T=w+1;u.push(w,E,T),u.push(S,T,E)}this.setIndex(u),this.setAttribute("position",new V(d,3)),this.setAttribute("uv",new V(p,2)),this.setAttribute("normal",new V(m,3))}static fromJSON(e){return new Ol(e.points,e.segments,e.phiStart,e.phiLength)}}class Fl extends Ol{constructor(e=1,t=1,r=4,n=8){const i=new Ul;i.absarc(0,-t/2,e,1.5*Math.PI,0),i.absarc(0,t/2,e,0,.5*Math.PI),super(i.getPoints(r),n),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:r,radialSegments:n}}static fromJSON(e){return new Fl(e.radius,e.length,e.capSegments,e.radialSegments)}}class Bl extends T{constructor(r=1,n=8,i=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:r,segments:n,thetaStart:i,thetaLength:a},n=Math.max(3,n);const t=[],s=[],o=[],l=[],h=new Ce,c=new Re;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=n;e++,t+=3){var u=i+e/n*a;h.x=r*Math.cos(u),h.y=r*Math.sin(u),s.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(s[t]/r+1)/2,c.y=(s[t+1]/r+1)/2,l.push(c.x,c.y)}for(let e=1;e<=n;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new V(s,3)),this.setAttribute("normal",new V(o,3)),this.setAttribute("uv",new V(l,2))}static fromJSON(e){return new Bl(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Hl extends T{constructor(p=1,m=1,t=1,f=8,n=1,e=!1,y=0,_=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:p,radiusBottom:m,height:t,radialSegments:f,heightSegments:n,openEnded:e,thetaStart:y,thetaLength:_};const x=this,g=(f=Math.floor(f),n=Math.floor(n),[]),M=[],b=[],w=[];let v=0;const i=[],E=t/2;let S=0;{const a=new Ce,s=new Ce;let r=0;var o=(m-p)/t;for(let e=0;e<=n;e++){const L=[];var l=e/n,h=l*(m-p)+p;for(let e=0;e<=f;e++){var c=e/f,u=c*_+y,d=Math.sin(u),u=Math.cos(u);s.x=h*d,s.y=-l*t+E,s.z=h*u,M.push(s.x,s.y,s.z),a.set(d,o,u).normalize(),b.push(a.x,a.y,a.z),w.push(c,1-l),L.push(v++)}i.push(L)}for(let t=0;t<f;t++)for(let e=0;e<n;e++){var T=i[e][t],A=i[e+1][t],R=i[e+1][t+1],C=i[e][t+1];g.push(T,A,C),g.push(A,R,C),r+=6}x.addGroup(S,r,0),S+=r}function r(t){var u=v;const r=new Re,n=new Ce;let i=0;var a=!0===t?p:m,s=!0===t?1:-1;for(let e=1;e<=f;e++)M.push(0,E*s,0),b.push(0,s,0),w.push(.5,.5),v++;var d=v;for(let e=0;e<=f;e++){var o=e/f*_+y,l=Math.cos(o),o=Math.sin(o);n.x=a*o,n.y=E*s,n.z=a*l,M.push(n.x,n.y,n.z),b.push(0,s,0),r.x=.5*l+.5,r.y=.5*o*s+.5,w.push(r.x,r.y),v++}for(let e=0;e<f;e++){var h=u+e,c=d+e;!0===t?g.push(c,c+1,h):g.push(c+1,c,h),i+=3}x.addGroup(S,i,!0===t?1:2),S+=i}!1===e&&(0<p&&r(!0),0<m&&r(!1)),this.setIndex(g),this.setAttribute("position",new V(M,3)),this.setAttribute("normal",new V(b,3)),this.setAttribute("uv",new V(w,2))}static fromJSON(e){return new Hl(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class zl extends Hl{constructor(e=1,t=1,r=8,n=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,r,n,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:r,heightSegments:n,openEnded:i,thetaStart:a,thetaLength:s}}static fromJSON(e){return new zl(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Gl extends T{constructor(r=[],t=[],e=1,u=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:r,indices:t,radius:e,detail:u};const n=[],i=[];var d=u,p=new Ce,m=new Ce,f=new Ce;for(let e=0;e<t.length;e+=3){P(t[e+0],p),P(t[e+1],m),P(t[e+2],f);{g=void 0;v=void 0;y=void 0;_=void 0;x=void 0;M=void 0;a=void 0;var g=p;var v=m;var y=f;var _=d;const o=_+1,l=[];for(let t=0;t<=o;t++){l[t]=[];const N=g.clone().lerp(y,t/o);var x=v.clone().lerp(y,t/o),M=o-t;for(let e=0;e<=M;e++)0===e&&t===o?l[t][e]=N:l[t][e]=N.clone().lerp(x,e/M)}for(let t=0;t<o;t++)for(let e=0;e<2*(o-t)-1;e++){var a=Math.floor(e/2);e%2==0?(s(l[t][a+1]),s(l[t+1][a]),s(l[t][a])):(s(l[t][a+1]),s(l[t+1][a+1]),s(l[t+1][a]))}}}{var b=e;const h=new Ce;for(let e=0;e<n.length;e+=3)h.x=n[e+0],h.y=n[e+1],h.z=n[e+2],h.normalize().multiplyScalar(b),n[e+0]=h.x,n[e+1]=h.y,n[e+2]=h.z}{const c=new Ce;for(let e=0;e<n.length;e+=3){c.x=n[e+0],c.y=n[e+1],c.z=n[e+2];var w=I(c)/2/Math.PI+.5,E=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(c)/Math.PI+.5;i.push(w,1-E)}{const U=new Ce,O=new Ce,F=new Ce,B=new Ce,H=new Re,z=new Re,G=new Re;for(let e=0,t=0;e<n.length;e+=9,t+=6){U.set(n[e+0],n[e+1],n[e+2]),O.set(n[e+3],n[e+4],n[e+5]),F.set(n[e+6],n[e+7],n[e+8]),H.set(i[t+0],i[t+1]),z.set(i[t+2],i[t+3]),G.set(i[t+4],i[t+5]),B.copy(U).add(O).add(F).divideScalar(3);var S=I(B);D(H,t+0,U,S),D(z,t+2,O,S),D(G,t+4,F,S)}}for(let e=0;e<i.length;e+=6){var T=i[e+0],A=i[e+2],R=i[e+4],C=Math.max(T,A,R),L=Math.min(T,A,R);.9<C&&L<.1&&(T<.2&&(i[e+0]+=1),A<.2&&(i[e+2]+=1),R<.2&&(i[e+4]+=1))}}function s(e){n.push(e.x,e.y,e.z)}function P(e,t){e*=3;t.x=r[0+e],t.y=r[1+e],t.z=r[2+e]}function D(e,t,r,n){n<0&&1===e.x&&(i[t]=e.x-1),0===r.x&&0===r.z&&(i[t]=n/2/Math.PI+.5)}function I(e){return Math.atan2(e.z,-e.x)}this.setAttribute("position",new V(n,3)),this.setAttribute("normal",new V(n.slice(),3)),this.setAttribute("uv",new V(i,2)),0===u?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(e){return new Gl(e.vertices,e.indices,e.radius,e.details)}}class Vl extends Gl{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2,n=1/r;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-r,0,-n,r,0,n,-r,0,n,r,-n,-r,0,-n,r,0,n,-r,0,n,r,0,-r,0,-n,r,0,-n,-r,0,n,r,0,n],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Vl(e.radius,e.detail)}}const kl=new Ce,Wl=new Ce,jl=new Ce,Xl=new xn;class ql extends T{constructor(e=null,u=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:u},null!==e){var t=Math.pow(10,4),d=Math.cos(Et*u);const i=e.getIndex();var r=e.getAttribute("position"),p=(i||r).count;const a=[0,0,0];var m,f,g=["a","b","c"];const s=new Array(3),o={},l=[];for(let e=0;e<p;e+=3){i?(a[0]=i.getX(e),a[1]=i.getX(e+1),a[2]=i.getX(e+2)):(a[0]=e,a[1]=e+1,a[2]=e+2);const{a:h,b:c,c:b}=Xl;if(h.fromBufferAttribute(r,a[0]),c.fromBufferAttribute(r,a[1]),b.fromBufferAttribute(r,a[2]),Xl.getNormal(jl),s[0]=`${Math.round(h.x*t)},${Math.round(h.y*t)},`+Math.round(h.z*t),s[1]=`${Math.round(c.x*t)},${Math.round(c.y*t)},`+Math.round(c.z*t),s[2]=`${Math.round(b.x*t)},${Math.round(b.y*t)},`+Math.round(b.z*t),s[0]!==s[1]&&s[1]!==s[2]&&s[2]!==s[0])for(let e=0;e<3;e++){var v=(e+1)%3,y=s[e],n=s[v],_=Xl[g[e]],x=Xl[g[v]],M=y+"_"+n,n=n+"_"+y;n in o&&o[n]?(jl.dot(o[n].normal)<=d&&(l.push(_.x,_.y,_.z),l.push(x.x,x.y,x.z)),o[n]=null):M in o||(o[M]={index0:a[e],index1:a[v],normal:jl.clone()})}}for(const w in o)o[w]&&({index0:m,index1:f}=o[w],kl.fromBufferAttribute(r,m),Wl.fromBufferAttribute(r,f),l.push(kl.x,kl.y,kl.z),l.push(Wl.x,Wl.y,Wl.z));this.setAttribute("position",new V(l,3))}}}class Yl extends Ul{constructor(e){super(e),this.uuid=Tt(),this.type="Shape",this.holes=[]}getPointsHoles(r){const n=[];for(let e=0,t=this.holes.length;e<t;e++)n[e]=this.holes[e].getPoints(r);return n}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(r){super.copy(r),this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){const n=r.holes[e];this.holes.push(n.clone())}return this}toJSON(){const r=super.toJSON();r.uuid=this.uuid,r.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const n=this.holes[e];r.holes.push(n.toJSON())}return r}fromJSON(r){super.fromJSON(r),this.uuid=r.uuid,this.holes=[];for(let e=0,t=r.holes.length;e<t;e++){var n=r.holes[e];this.holes.push((new Ul).fromJSON(n))}return this}}const Jl={triangulate:function(t,e,r=2){var c=e&&e.length,u=c?e[0]*r:t.length;let n=Zl(t,0,u,r,!0);var d=[];if(!n||n.next===n.prev)return d;let i,a,s,o,l,h,p;if(c&&(n=function(e,t,r,n){const i=[];let a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*n,l=a<s-1?t[a+1]*n:e.length,(h=Zl(e,o,l,n,!1))===h.next&&(h.steiner=!0),i.push(function(e){let t=e,r=e;for(;(t.x<r.x||t.x===r.x&&t.y<r.y)&&(r=t),t=t.next,t!==e;);return r}(h));for(i.sort($l),a=0;a<i.length;a++)!function(e,t){(t=function(e,c){let t=c;var r=e.x,n=e.y;let i=-1/0,a;do{if(n<=t.y&&n>=t.next.y&&t.next.y!==t.y){var s=t.x+(n-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(s<=r&&s>i){if((i=s)===r){if(n===t.y)return t;if(n===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}}while(t=t.next,t!==c);if(!a)return null;if(r===i)return a;var u=a,d=a.x,o=a.y;let l=1/0,h;t=a;for(;r>=t.x&&t.x>=d&&r!==t.x&&th(n<o?r:i,n,d,o,n<o?i:r,n,t.x,t.y)&&(h=Math.abs(n-t.y)/(r-t.x),oh(t,e)&&(h<l||h===l&&(t.x>a.x||t.x===a.x&&function(e,t){return rh(e.prev,e,t.prev)<0&&rh(t.next,e,e.next)<0}(a,t)))&&(a=t,l=h)),t=t.next,t!==u;);return a}(e,t))&&(e=lh(t,e),Kl(t,t.next),Kl(e,e.next))}(i[a],r),r=Kl(r,r.next);return r}(t,e,n,r)),t.length>80*r){i=s=t[0],a=o=t[1];for(let e=r;e<u;e+=r)l=t[e],h=t[e+1],l<i&&(i=l),h<a&&(a=h),l>s&&(s=l),h>o&&(o=h);p=0!==(p=Math.max(s-i,o-a))?1/p:0}return Ql(n,d,r,i,a,p),d}};function Zl(e,t,r,n,i){let a,s;if(i===0<function(r,n,i,a){let s=0;for(let e=n,t=i-a;e<i;e+=a)s+=(r[t]-r[e])*(r[e+1]+r[t+1]),t=e;return s}(e,t,r,n))for(a=t;a<r;a+=n)s=hh(a,e[a],e[a+1],s);else for(a=r-n;a>=t;a-=n)s=hh(a,e[a],e[a+1],s);return s&&nh(s,s.next)&&(ch(s),s=s.next),s}function Kl(e,t){if(!e)return e;t=t||e;let r=e,n;do{if(n=!1,r.steiner||!nh(r,r.next)&&0!==rh(r.prev,r,r.next))r=r.next;else{if(ch(r),(r=t=r.prev)===r.next)break;n=!0}}while(n||r!==t);return t}function Ql(n,i,a,s,o,l,h){if(n){if(!h&&l){var c=n,u=s,p=o,m=l;let h=c;for(;null===h.z&&(h.z=eh(h.x,h.y,u,p,m)),h.prevZ=h.prev,h.nextZ=h.next,(h=h.next)!==c;);h.prevZ.nextZ=null,h.prevZ=null;{var d=h;let e,t,r,n,i,a,s,o,l=1;do{for(t=d,d=null,i=null,a=0;t;){for(a++,r=t,s=0,e=0;e<l&&(s++,r=r.nextZ);e++);for(o=l;0<s||0<o&&r;)0!==s&&(0===o||!r||t.z<=r.z)?(t=(n=t).nextZ,s--):(r=(n=r).nextZ,o--),i?i.nextZ=n:d=n,n.prevZ=i,i=n;t=r}}while(i.nextZ=null,l*=2,1<a)}}let e=n,t,r;for(;n.prev!==n.next;)if(t=n.prev,r=n.next,l?function(e,t,r,n){var i=e.prev,a=e,s=e.next;if(0<=rh(i,a,s))return!1;var c=(i.x<a.x?i.x<s.x?i:s:a.x<s.x?a:s).x,u=(i.y<a.y?i.y<s.y?i:s:a.y<s.y?a:s).y,d=(i.x>a.x?i.x>s.x?i:s:a.x>s.x?a:s).x,p=(i.y>a.y?i.y>s.y?i:s:a.y>s.y?a:s).y,o=eh(c,u,t,r,n),m=eh(d,p,t,r,n);let l=e.prevZ,h=e.nextZ;for(;l&&l.z>=o&&h&&h.z<=m;){if(l!==e.prev&&l!==e.next&&th(i.x,i.y,a.x,a.y,s.x,s.y,l.x,l.y)&&0<=rh(l.prev,l,l.next))return!1;if(l=l.prevZ,h!==e.prev&&h!==e.next&&th(i.x,i.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=rh(h.prev,h,h.next))return!1;h=h.nextZ}for(;l&&l.z>=o;){if(l!==e.prev&&l!==e.next&&th(i.x,i.y,a.x,a.y,s.x,s.y,l.x,l.y)&&0<=rh(l.prev,l,l.next))return!1;l=l.prevZ}for(;h&&h.z<=m;){if(h!==e.prev&&h!==e.next&&th(i.x,i.y,a.x,a.y,s.x,s.y,h.x,h.y)&&0<=rh(h.prev,h,h.next))return!1;h=h.nextZ}return!0}(n,s,o,l):function(e){var t=e.prev,r=e,n=e.next;if(0<=rh(t,r,n))return!1;let i=e.next.next;for(;i!==e.prev;){if(th(t.x,t.y,r.x,r.y,n.x,n.y,i.x,i.y)&&0<=rh(i.prev,i,i.next))return!1;i=i.next}return!0}(n))i.push(t.i/a),i.push(n.i/a),i.push(r.i/a),ch(n),n=r.next,e=r.next;else if((n=r)===e){h?1===h?Ql(n=function(e,t,r){let n=e;do{var i=n.prev,a=n.next.next;!nh(i,a)&&ih(i,n,n.next,a)&&oh(i,a)&&oh(a,i)&&(t.push(i.i/r),t.push(n.i/r),t.push(a.i/r),ch(n),ch(n.next),n=e=a),n=n.next}while(n!==e);return Kl(n)}(Kl(n),i,a),i,a,s,o,l,2):2===h&&function(e,t,r,n,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){var o;if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let r=e;do{if(r.i!==e.i&&r.next.i!==e.i&&r.i!==t.i&&r.next.i!==t.i&&ih(r,r.next,e,t))return!0}while(r=r.next,r!==e);return!1}(e,t)&&(oh(e,t)&&oh(t,e)&&function(e,t){let r=e,n=!1;var i=(e.x+t.x)/2,a=(e.y+t.y)/2;for(;r.y>a!=r.next.y>a&&r.next.y!==r.y&&i<(r.next.x-r.x)*(a-r.y)/(r.next.y-r.y)+r.x&&(n=!n),r=r.next,r!==e;);return n}(e,t)&&(rh(e.prev,e,t.prev)||rh(e,t.prev,t))||nh(e,t)&&0<rh(e.prev,e,e.next)&&0<rh(t.prev,t,t.next))}(s,e))return o=lh(s,e),s=Kl(s,s.next),o=Kl(o,o.next),Ql(s,t,r,n,i,a),Ql(o,t,r,n,i,a);e=e.next}}while(s=s.next,s!==e)}(n,i,a,s,o,l):Ql(Kl(n),i,a,s,o,l,1);break}}}function $l(e,t){return e.x-t.x}function eh(e,t,r,n,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function th(e,t,r,n,i,a,s,o){return 0<=(i-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(n-o)-(r-s)*(t-o)&&0<=(r-s)*(a-o)-(i-s)*(n-o)}function rh(e,t,r){return(t.y-e.y)*(r.x-t.x)-(t.x-e.x)*(r.y-t.y)}function nh(e,t){return e.x===t.x&&e.y===t.y}function ih(e,t,r,n){var i=sh(rh(e,t,r)),a=sh(rh(e,t,n)),s=sh(rh(r,n,e)),o=sh(rh(r,n,t));return i!==a&&s!==o||(0===i&&ah(e,r,t)||(0===a&&ah(e,n,t)||(0===s&&ah(r,e,n)||!(0!==o||!ah(r,t,n)))))}function ah(e,t,r){return t.x<=Math.max(e.x,r.x)&&t.x>=Math.min(e.x,r.x)&&t.y<=Math.max(e.y,r.y)&&t.y>=Math.min(e.y,r.y)}function sh(e){return 0<e?1:e<0?-1:0}function oh(e,t){return rh(e.prev,e,e.next)<0?0<=rh(e,t,e.next)&&0<=rh(e,e.prev,t):rh(e,t,e.prev)<0||rh(e,e.next,t)<0}function lh(e,t){const r=new uh(e.i,e.x,e.y),n=new uh(t.i,t.x,t.y),i=e.next,a=t.prev;return(e.next=t).prev=e,(r.next=i).prev=r,(n.next=r).prev=n,(a.next=n).prev=a,n}function hh(e,t,r,n){const i=new uh(e,t,r);return n?(i.next=n.next,(i.prev=n).next.prev=i,n.next=i):(i.prev=i).next=i,i}function ch(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function uh(e,t,r){this.i=e,this.x=t,this.y=r,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class dh{static area(r){var n=r.length;let i=0;for(let e=n-1,t=0;t<n;e=t++)i+=r[e].x*r[t].y-r[t].x*r[e].y;return.5*i}static isClockWise(e){return dh.area(e)<0}static triangulateShape(e,t){var r=[];const n=[],i=[];ph(e),mh(r,e);let a=e.length;t.forEach(ph);for(let e=0;e<t.length;e++)n.push(a),a+=t[e].length,mh(r,t[e]);const s=Jl.triangulate(r,n);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function ph(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function mh(t,r){for(let e=0;e<r.length;e++)t.push(r[e].x),t.push(r[e].y)}class fh extends T{constructor(r=new Yl([new Re(.5,.5),new Re(-.5,.5),new Re(-.5,-.5),new Re(.5,-.5)]),Q={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:r,options:Q},r=Array.isArray(r)?r:[r];const $=this,ee=[],te=[];for(let e=0,t=r.length;e<t;e++)!function(e){const l=[],t=void 0!==Q.curveSegments?Q.curveSegments:12,p=void 0!==Q.steps?Q.steps:1;let h=void 0!==Q.depth?Q.depth:1,c=void 0===Q.bevelEnabled||Q.bevelEnabled,u=void 0!==Q.bevelThickness?Q.bevelThickness:.2,d=void 0!==Q.bevelSize?Q.bevelSize:u-.1,v=void 0!==Q.bevelOffset?Q.bevelOffset:0,y=void 0!==Q.bevelSegments?Q.bevelSegments:3;const _=Q.extrudePath,x=void 0!==Q.UVGenerator?Q.UVGenerator:gh;void 0!==Q.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),h=Q.amount);let M,b=!1,w,E,S,r;_&&(M=_.getSpacedPoints(p),b=!0,c=!1,w=_.computeFrenetFrames(p,!1),E=new Ce,S=new Ce,r=new Ce);c||(y=0,u=0,d=0,v=0);e=e.extractPoints(t);let n=e.shape;const i=e.holes,T=!dh.isClockWise(n);if(T){n=n.reverse();for(let e=0,t=i.length;e<t;e++){const K=i[e];dh.isClockWise(K)&&(i[e]=K.reverse())}}const A=dh.triangulateShape(n,i),a=n;for(let e=0,t=i.length;e<t;e++){var R=i[e];n=n.concat(R)}function C(e,t,r){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(r).add(e)}const m=n.length,L=A.length;function P(e,t,r){let n,i,a;var s=e.x-t.x,o=e.y-t.y,l=r.x-e.x,h=r.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){var u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,t=t.y+s/u,u=((r.x-h/d-p)*h-(r.y+l/d-t)*l)/(s*h-o*l),r=(n=p+s*u-e.x,i=t+o*u-e.y,n*n+i*i);if(r<=2)return new Re(n,i);a=Math.sqrt(r/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),a=e?(n=-o,i=s,Math.sqrt(c)):(n=s,i=o,Math.sqrt(c/2))}return new Re(n/a,i/a)}const D=[];for(let e=0,t=a.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),D[e]=P(a[e],a[r],a[n]);const I=[];let s,N=D.concat();for(let e=0,t=i.length;e<t;e++){var U=i[e];s=[];for(let e=0,t=U.length,r=t-1,n=e+1;e<t;e++,r++,n++)r===t&&(r=0),n===t&&(n=0),s[e]=P(U[e],U[r],U[n]);I.push(s),N=N.concat(s)}for(let e=0;e<y;e++){var O=e/y,F=u*Math.cos(O*Math.PI/2);const G=d*Math.sin(O*Math.PI/2)+v;for(let e=0,t=a.length;e<t;e++){var B=C(a[e],D[e],G);o(B.x,B.y,-F)}for(let e=0,t=i.length;e<t;e++){var H=i[e];s=I[e];for(let e=0,t=H.length;e<t;e++){var z=C(H[e],s[e],G);o(z.x,z.y,-F)}}}const G=d+v;for(let e=0;e<m;e++){var V=c?C(n[e],N[e],G):n[e];b?(S.copy(w.normals[0]).multiplyScalar(V.x),E.copy(w.binormals[0]).multiplyScalar(V.y),r.copy(M[0]).add(S).add(E),o(r.x,r.y,r.z)):o(V.x,V.y,0)}for(let t=1;t<=p;t++)for(let e=0;e<m;e++){var k=c?C(n[e],N[e],G):n[e];b?(S.copy(w.normals[t]).multiplyScalar(k.x),E.copy(w.binormals[t]).multiplyScalar(k.y),r.copy(M[t]).add(S).add(E),o(r.x,r.y,r.z)):o(k.x,k.y,h/p*t)}for(let e=y-1;0<=e;e--){var W=e/y,j=u*Math.cos(W*Math.PI/2);const G=d*Math.sin(W*Math.PI/2)+v;for(let e=0,t=a.length;e<t;e++){var X=C(a[e],D[e],G);o(X.x,X.y,h+j)}for(let e=0,t=i.length;e<t;e++){var q=i[e];s=I[e];for(let e=0,t=q.length;e<t;e++){var Y=C(q[e],s[e],G);b?o(Y.x,Y.y+M[p-1].y,M[p-1].x+j):o(Y.x,Y.y,h+j)}}}function J(e,n){let t=e.length;for(;0<=--t;){var i=t;let r=t-1;r<0&&(r=e.length-1);for(let e=0,t=p+2*y;e<t;e++){var a=m*e,s=m*(e+1),u=n+r+a,d=n+r+s,o=(l=o=c=h=l=o=void 0,n+i+a),l=u,h=d,c=n+i+s;f(o),f(l),f(c),f(l),f(h),f(c),o=ee.length/3,g((l=x.generateSideWallUV($,ee,o-6,o-3,o-2,o-1))[0]),g(l[1]),g(l[3]),g(l[1]),g(l[2]),g(l[3])}}}function o(e,t,r){l.push(e),l.push(t),l.push(r)}function Z(e,t,r){f(e),f(t),f(r);e=ee.length/3,t=x.generateTopUV($,ee,e-3,e-2,e-1);g(t[0]),g(t[1]),g(t[2])}function f(e){ee.push(l[3*e+0]),ee.push(l[3*e+1]),ee.push(l[3*e+2])}function g(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(c){let t=0*m;for(let e=0;e<L;e++){var r=A[e];Z(r[2]+t,r[1]+t,r[0]+t)}e=p+2*y,t=m*e;for(let e=0;e<L;e++){var n=A[e];Z(n[0]+t,n[1]+t,n[2]+t)}}else{for(let e=0;e<L;e++){var i=A[e];Z(i[2],i[1],i[0])}for(let e=0;e<L;e++){var a=A[e];Z(a[0]+m*p,a[1]+m*p,a[2]+m*p)}}$.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let r=0;J(a,r),r+=a.length;for(let e=0,t=i.length;e<t;e++){var n=i[e];J(n,r),r+=n.length}$.addGroup(e,ee.length/3-e,1)}()}(r[e]);this.setAttribute("position",new V(ee,3)),this.setAttribute("uv",new V(te,2)),this.computeVertexNormals()}toJSON(){var e=super.toJSON(),t=this.parameters.shapes,r=this.parameters.options,n=t,t=r,i=e;if(i.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var a=n[e];i.shapes.push(a.uuid)}else i.shapes.push(n.uuid);return void 0!==t.extrudePath&&(i.options.extrudePath=t.extrudePath.toJSON()),i}static fromJSON(r,n){const i=[];for(let e=0,t=r.shapes.length;e<t;e++){var a=n[r.shapes[e]];i.push(a)}var e=r.options.extrudePath;return void 0!==e&&(r.options.extrudePath=(new Il[e.type]).fromJSON(e)),new fh(i,r.options)}}const gh={generateTopUV:function(e,t,r,n,i){var a=t[3*r],r=t[3*r+1],s=t[3*n],n=t[3*n+1],o=t[3*i],t=t[3*i+1];return[new Re(a,r),new Re(s,n),new Re(o,t)]},generateSideWallUV:function(c,e,t,r,n,i){var a=e[3*t],s=e[3*t+1],t=e[3*t+2],o=e[3*r],l=e[3*r+1],r=e[3*r+2],h=e[3*n],u=e[3*n+1],n=e[3*n+2],d=e[3*i],p=e[3*i+1],e=e[3*i+2];return Math.abs(s-l)<Math.abs(a-o)?[new Re(a,1-t),new Re(o,1-r),new Re(h,1-n),new Re(d,1-e)]:[new Re(s,1-t),new Re(l,1-r),new Re(u,1-n),new Re(p,1-e)]}};class vh extends Gl{constructor(e=1,t=0){var r=(1+Math.sqrt(5))/2;super([-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vh(e.radius,e.detail)}}class yh extends Gl{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new yh(e.radius,e.detail)}}class _h extends T{constructor(e=.5,t=1,r=8,n=1,i=0,c=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:r,phiSegments:n,thetaStart:i,thetaLength:c},r=Math.max(3,r);const a=[],u=[],d=[],p=[];let s=e;var m=(t-e)/(n=Math.max(1,n));const o=new Ce,l=new Re;for(let e=0;e<=n;e++){for(let e=0;e<=r;e++){var f=i+e/r*c;o.x=s*Math.cos(f),o.y=s*Math.sin(f),u.push(o.x,o.y,o.z),d.push(0,0,1),l.x=(o.x/t+1)/2,l.y=(o.y/t+1)/2,p.push(l.x,l.y)}s+=m}for(let e=0;e<n;e++){var g=e*(r+1);for(let e=0;e<r;e++){var h=e+g,v=h+r+1,y=h+r+2,_=h+1;a.push(h,v,_),a.push(v,y,_)}}this.setIndex(a),this.setAttribute("position",new V(u,3)),this.setAttribute("normal",new V(d,3)),this.setAttribute("uv",new V(p,2))}static fromJSON(e){return new _h(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class xh extends T{constructor(t=new Yl([new Re(0,.5),new Re(-.5,-.5),new Re(.5,-.5)]),d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let r=0,v=0;if(!1===Array.isArray(t))n(t);else for(let e=0;e<t.length;e++)n(t[e]),this.addGroup(r,v,e),r+=v,v=0;function n(e){var r=m.length/3,e=e.extractPoints(d);let n=e.shape;const i=e.holes;!1===dh.isClockWise(n)&&(n=n.reverse());for(let e=0,t=i.length;e<t;e++){const c=i[e];!0===dh.isClockWise(c)&&(i[e]=c.reverse())}var a=dh.triangulateShape(n,i);for(let e=0,t=i.length;e<t;e++){var s=i[e];n=n.concat(s)}for(let e=0,t=n.length;e<t;e++){var o=n[e];m.push(o.x,o.y,0),f.push(0,0,1),g.push(o.x,o.y)}for(let e=0,t=a.length;e<t;e++){var l=a[e],h=l[0]+r,u=l[1]+r,l=l[2]+r;p.push(h,u,l),v+=3}}this.setIndex(p),this.setAttribute("position",new V(m,3)),this.setAttribute("normal",new V(f,3)),this.setAttribute("uv",new V(g,2))}toJSON(){var e=super.toJSON(),r=this.parameters.shapes,n=e;if(n.shapes=[],Array.isArray(r))for(let e=0,t=r.length;e<t;e++){var i=r[e];n.shapes.push(i.uuid)}else n.shapes.push(r.uuid);return n}static fromJSON(r,n){const i=[];for(let e=0,t=r.shapes.length;e<t;e++){var a=n[r.shapes[e]];i.push(a)}return new xh(i,r.curveSegments)}}class Mh extends T{constructor(r=1,n=32,i=16,a=0,d=2*Math.PI,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:r,widthSegments:n,heightSegments:i,phiStart:a,phiLength:d,thetaStart:s,thetaLength:o},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));var p=Math.min(s+o,Math.PI);let m=0;const l=[],h=new Ce,c=new Ce,f=[],g=[],v=[],y=[];for(let e=0;e<=i;e++){const E=[];var u=e/i;let t=0;0==e&&0==s?t=.5/n:e==i&&p==Math.PI&&(t=-.5/n);for(let e=0;e<=n;e++){var _=e/n;h.x=-r*Math.cos(a+_*d)*Math.sin(s+u*o),h.y=r*Math.cos(s+u*o),h.z=r*Math.sin(a+_*d)*Math.sin(s+u*o),g.push(h.x,h.y,h.z),c.copy(h).normalize(),v.push(c.x,c.y,c.z),y.push(_+t,1-u),E.push(m++)}l.push(E)}for(let t=0;t<i;t++)for(let e=0;e<n;e++){var x=l[t][e+1],M=l[t][e],b=l[t+1][e],w=l[t+1][e+1];(0!==t||0<s)&&f.push(x,M,w),(t!==i-1||p<Math.PI)&&f.push(M,b,w)}this.setIndex(f),this.setAttribute("position",new V(g,3)),this.setAttribute("normal",new V(v,3)),this.setAttribute("uv",new V(y,2))}static fromJSON(e){return new Mh(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class bh extends Gl{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new bh(e.radius,e.detail)}}class wh extends T{constructor(r=1,n=.4,i=8,a=6,d=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:r,tube:n,radialSegments:i,tubularSegments:a,arc:d},i=Math.floor(i),a=Math.floor(a);const s=[],p=[],m=[],o=[],l=new Ce,h=new Ce,c=new Ce;for(let t=0;t<=i;t++)for(let e=0;e<=a;e++){var u=e/a*d,f=t/i*Math.PI*2;h.x=(r+n*Math.cos(f))*Math.cos(u),h.y=(r+n*Math.cos(f))*Math.sin(u),h.z=n*Math.sin(f),p.push(h.x,h.y,h.z),l.x=r*Math.cos(u),l.y=r*Math.sin(u),c.subVectors(h,l).normalize(),m.push(c.x,c.y,c.z),o.push(e/a),o.push(t/i)}for(let t=1;t<=i;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,y=(a+1)*(t-1)+e,_=(a+1)*t+e;s.push(g,v,_),s.push(v,y,_)}this.setIndex(s),this.setAttribute("position",new V(p,3)),this.setAttribute("normal",new V(m,3)),this.setAttribute("uv",new V(o,2))}static fromJSON(e){return new wh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Eh extends T{constructor(e=1,u=.4,r=64,n=8,i=2,d=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:u,tubularSegments:r,radialSegments:n,p:i,q:d},r=Math.floor(r),n=Math.floor(n);const p=[],m=[],f=[],g=[],a=new Ce,s=new Ce;var o=new Ce,v=new Ce;const l=new Ce,y=new Ce,h=new Ce;for(let t=0;t<=r;++t){var _=t/r*i*Math.PI*2;S(_,i,d,e,o),S(.01+_,i,d,e,v),y.subVectors(v,o),h.addVectors(v,o),l.crossVectors(y,h),h.crossVectors(l,y),l.normalize(),h.normalize();for(let e=0;e<=n;++e){var c=e/n*Math.PI*2,x=-u*Math.cos(c),c=u*Math.sin(c);a.x=o.x+(x*h.x+c*l.x),a.y=o.y+(x*h.y+c*l.y),a.z=o.z+(x*h.z+c*l.z),m.push(a.x,a.y,a.z),s.subVectors(a,o).normalize(),f.push(s.x,s.y,s.z),g.push(t/r),g.push(e/n)}}for(let t=1;t<=r;t++)for(let e=1;e<=n;e++){var M=(n+1)*(t-1)+(e-1),b=(n+1)*t+(e-1),w=(n+1)*t+e,E=(n+1)*(t-1)+e;p.push(M,b,E),p.push(b,w,E)}function S(e,t,r,n,i){var a=Math.cos(e),s=Math.sin(e),r=r/t*e,t=Math.cos(r);i.x=n*(2+t)*.5*a,i.y=n*(2+t)*s*.5,i.z=n*Math.sin(r)*.5}this.setIndex(p),this.setAttribute("position",new V(m,3)),this.setAttribute("normal",new V(f,3)),this.setAttribute("uv",new V(g,2))}static fromJSON(e){return new Eh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Sh extends T{constructor(a=new Pl(new Ce(-1,-1,0),new Ce(-1,1,0),new Ce(1,1,0)),s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const h=a.computeFrenetFrames(s,e),c=(this.tangents=h.tangents,this.normals=h.normals,this.binormals=h.binormals,new Ce),u=new Ce,r=new Re;let d=new Ce;const p=[],m=[],n=[],i=[];for(let e=0;e<s;e++)t(e);t(!1===e?s:0);for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)r.x=t/s,r.y=e/l,n.push(r.x,r.y);for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var f=(l+1)*(t-1)+(e-1),g=(l+1)*t+(e-1),v=(l+1)*t+e,y=(l+1)*(t-1)+e;i.push(f,g,y),i.push(g,v,y)}function t(e){d=a.getPointAt(e/s,d);var t=h.normals[e],r=h.binormals[e];for(let e=0;e<=l;e++){var n=e/l*Math.PI*2,i=Math.sin(n),n=-Math.cos(n);u.x=n*t.x+i*r.x,u.y=n*t.y+i*r.y,u.z=n*t.z+i*r.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+o*u.x,c.y=d.y+o*u.y,c.z=d.z+o*u.z,p.push(c.x,c.y,c.z)}}this.setIndex(i),this.setAttribute("position",new V(p,3)),this.setAttribute("normal",new V(m,3)),this.setAttribute("uv",new V(n,2))}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Sh((new Il[e.path.type]).fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Th extends T{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const o=[];var n=new Set;const l=new Ce,h=new Ce;if(null!==e.index){var i=e.attributes.position;const c=e.index;let r=e.groups;for(let e=0,t=(r=0===r.length?[{start:0,count:c.count,materialIndex:0}]:r).length;e<t;++e){var a=r[e],s=a.start;for(let t=s,e=s+a.count;t<e;t+=3)for(let e=0;e<3;e++){var u=c.getX(t+e),d=c.getX(t+(e+1)%3);l.fromBufferAttribute(i,u),h.fromBufferAttribute(i,d),!0===Ah(l,h,n)&&(o.push(l.x,l.y,l.z),o.push(h.x,h.y,h.z))}}}else{var r=e.attributes.position;for(let t=0,e=r.count/3;t<e;t++)for(let e=0;e<3;e++){var p=3*t+e,m=3*t+(e+1)%3;l.fromBufferAttribute(r,p),h.fromBufferAttribute(r,m),!0===Ah(l,h,n)&&(o.push(l.x,l.y,l.z),o.push(h.x,h.y,h.z))}}this.setAttribute("position",new V(o,3))}}}function Ah(e,t,r){var n=`${e.x},${e.y},${e.z}-${t.x},${t.y},`+t.z,t=`${t.x},${t.y},${t.z}-${e.x},${e.y},`+e.z;return!0!==r.has(n)&&!0!==r.has(t)&&(r.add(n),r.add(t),!0)}var Rh=Object.freeze({__proto__:null,BoxGeometry:li,BoxBufferGeometry:li,CapsuleGeometry:Fl,CapsuleBufferGeometry:Fl,CircleGeometry:Bl,CircleBufferGeometry:Bl,ConeGeometry:zl,ConeBufferGeometry:zl,CylinderGeometry:Hl,CylinderBufferGeometry:Hl,DodecahedronGeometry:Vl,DodecahedronBufferGeometry:Vl,EdgesGeometry:ql,ExtrudeGeometry:fh,ExtrudeBufferGeometry:fh,IcosahedronGeometry:vh,IcosahedronBufferGeometry:vh,LatheGeometry:Ol,LatheBufferGeometry:Ol,OctahedronGeometry:yh,OctahedronBufferGeometry:yh,PlaneGeometry:Ai,PlaneBufferGeometry:Ai,PolyhedronGeometry:Gl,PolyhedronBufferGeometry:Gl,RingGeometry:_h,RingBufferGeometry:_h,ShapeGeometry:xh,ShapeBufferGeometry:xh,SphereGeometry:Mh,SphereBufferGeometry:Mh,TetrahedronGeometry:bh,TetrahedronBufferGeometry:bh,TorusGeometry:wh,TorusBufferGeometry:wh,TorusKnotGeometry:Eh,TorusKnotBufferGeometry:Eh,TubeGeometry:Sh,TubeBufferGeometry:Sh,WireframeGeometry:Th});class Ch extends bn{constructor(e){super(),this.type="ShadowMaterial",this.color=new x(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}Ch.prototype.isShadowMaterial=!0;class Lh extends di{constructor(e){super(e),this.type="RawShaderMaterial"}}class Ph extends bn{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new x(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new x(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=mt,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Ph.prototype.isMeshStandardMaterial=Lh.prototype.isRawShaderMaterial=!0;class Dh extends Ph{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Re(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return At(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.sheenColor=new x(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new x(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new x(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){0<this._sheen!=0<e&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){0<this._clearcoat!=0<e&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){0<this._transmission!=0<e&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Ih extends bn{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new x(16777215),this.specular=new x(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new x(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=mt,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}class Nh extends bn{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new x(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new x(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=mt,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}class Uh extends bn{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=mt,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Oh extends bn{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new x(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new x(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}class Fh extends bn{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new x(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=mt,this.normalScale=new Re(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}class Bh extends Xo{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}Bh.prototype.isLineDashedMaterial=Fh.prototype.isMeshMatcapMaterial=Oh.prototype.isMeshLambertMaterial=Uh.prototype.isMeshNormalMaterial=Nh.prototype.isMeshToonMaterial=Ih.prototype.isMeshPhongMaterial=Dh.prototype.isMeshPhysicalMaterial=!0;const Hh={ShadowMaterial:Ch,SpriteMaterial:ho,RawShaderMaterial:Lh,ShaderMaterial:di,PointsMaterial:nl,MeshPhysicalMaterial:Dh,MeshStandardMaterial:Ph,MeshPhongMaterial:Ih,MeshToonMaterial:Nh,MeshNormalMaterial:Uh,MeshLambertMaterial:Oh,MeshDepthMaterial:zs,MeshDistanceMaterial:Gs,MeshBasicMaterial:wn,MeshMatcapMaterial:Fh,LineDashedMaterial:Bh,LineBasicMaterial:Xo,Material:bn},zh=(bn.fromType=function(e){return new Hh[e]},{arraySlice:function(e,t,r){return zh.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==r?r:e.length)):e.slice(t,r)},convertArray:function(e,t,r){return!e||!r&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(r){var t=r.length;const n=new Array(t);for(let e=0;e!==t;++e)n[e]=e;return n.sort(function(e,t){return r[e]-r[t]}),n},sortedArray:function(r,n,i){var a=r.length;const s=new r.constructor(a);for(let e=0,t=0;t!==a;++e){var o=i[e]*n;for(let e=0;e!==n;++e)s[t++]=r[o+e]}return s},flattenJSON:function(t,r,n,i){let a=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[a++];if(void 0!==s){let e=s[i];if(void 0!==e)if(Array.isArray(e))for(;void 0!==(e=s[i])&&(r.push(s.time),n.push.apply(n,e)),void 0!==(s=t[a++]););else if(void 0!==e.toArray)for(;void 0!==(e=s[i])&&(r.push(s.time),e.toArray(n,n.length)),void 0!==(s=t[a++]););else for(;void 0!==(e=s[i])&&(r.push(s.time),n.push(e)),void 0!==(s=t[a++]););}},subclip:function(e,t,c,u,d=30){const r=e.clone(),n=(r.name=t,[]);for(let e=0;e<r.tracks.length;++e){const o=r.tracks[e];var i=o.getValueSize();const l=[],h=[];for(let t=0;t<o.times.length;++t){var a=o.times[t]*d;if(!(a<c||u<=a)){l.push(o.times[t]);for(let e=0;e<i;++e)h.push(o.values[t*i+e])}}0!==l.length&&(o.times=zh.convertArray(l,o.times.constructor),o.values=zh.convertArray(h,o.values.constructor),n.push(o))}r.tracks=n;let s=1/0;for(let e=0;e<r.tracks.length;++e)s>r.tracks[e].times[0]&&(s=r.tracks[e].times[0]);for(let e=0;e<r.tracks.length;++e)r.tracks[e].shift(-1*s);return r.resetDuration(),r},makeClipAdditive:function(t,r=0,u=t,e=30){var d=u.tracks.length,n=r/(e=e<=0?30:e);for(let e=0;e<d;++e){const l=u.tracks[e],h=l.ValueTypeName;if("bool"!==h&&"string"!==h){const c=t.tracks.find(function(e){return e.name===l.name&&e.ValueTypeName===h});if(void 0!==c){let e=0;var i=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=i/3);let t=0;var a=c.getValueSize(),s=(c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=a/3),l.times.length-1);let r;if(n<=l.times[0]){var o=e,p=i-e;r=zh.arraySlice(l.values,o,p)}else if(n>=l.times[s]){o=s*i+e,p=o+i-e;r=zh.arraySlice(l.values,o,p)}else{const v=l.createInterpolant();s=e,i=i-e;v.evaluate(n),r=zh.arraySlice(v.resultBuffer,s,i)}if("quaternion"===h){const y=(new lr).fromArray(r).normalize().conjugate();y.toArray(r)}var m=c.times.length;for(let e=0;e<m;++e){var f=e*a+t;if("quaternion"===h)lr.multiplyQuaternionsFlat(c.values,f,r,0,c.values,f);else{var g=a-2*t;for(let e=0;e<g;++e)c.values[f+e]-=r[e]}}}}}return t.blendMode=2501,t}});class Gh{constructor(e,t,r,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==n?n:new t.constructor(r),this.sampleValues=t,this.valueSize=r,this.settings=null,this.DefaultSettings_={}}evaluate(t){var r=this.parameterPositions;let n=this._cachedIndex,i=r[n],a=r[n-1];e:{t:{let e;r:{n:if(!(t<i)){for(var s=n+2;;){if(void 0===i){if(t<a)break n;return n=r.length,this._cachedIndex=n,this.afterEnd_(n-1,t,a)}if(n===s)break;if(a=i,t<(i=r[++n]))break t}e=r.length;break r}if(t>=a)break e;var o=r[1];t<o&&(n=2,a=o);for(var l=n-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(n===l)break;if(i=a,t>=(a=r[--n-1]))break t}e=n,n=0}for(;n<e;){var h=n+e>>>1;t<r[h]?e=h:n=1+h}if(i=r[n],void 0===(a=r[n-1]))return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return n=r.length,this._cachedIndex=n,this.afterEnd_(n-1,a,t)}this._cachedIndex=n,this.intervalChanged_(n,a,i)}return this.interpolate_(n,a,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=e*n;for(let e=0;e!==n;++e)t[e]=r[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Gh.prototype.beforeStart_=Gh.prototype.copySampleValue_,Gh.prototype.afterEnd_=Gh.prototype.copySampleValue_;class Vh extends Gh{constructor(e,t,r,n){super(e,t,r,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ht,endingEnd:ht}}intervalChanged_(e,t,r){var n=this.parameterPositions;let i=e-2,a=e+1,s=n[i],o=n[a];if(void 0===s)switch(this.getSettings_().endingStart){case ct:i=e,s=2*t-r;break;case ut:i=n.length-2,s=t+n[i]-n[i+1];break;default:i=e,s=r}if(void 0===o)switch(this.getSettings_().endingEnd){case ct:a=e,o=2*r-t;break;case ut:a=1,o=r+n[1]-n[0];break;default:a=e-1,o=t}var l=.5*(r-t),h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-r),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(c,e,u,d){const t=this.resultBuffer,r=this.sampleValues,n=this.valueSize,i=c*n,p=i-n,m=this._offsetPrev,f=this._offsetNext,a=this._weightPrev,s=this._weightNext,o=(u-e)/(d-e),l=o*o,h=l*o;var g=-a*h+2*a*l-a*o,v=(1+a)*h+(-1.5-2*a)*l+(-.5+a)*o+1,y=(-1-s)*h+(1.5+s)*l+.5*o,_=s*h-s*l;for(let e=0;e!==n;++e)t[e]=g*r[m+e]+v*r[p+e]+y*r[i+e]+_*r[f+e];return t}}class kh extends Gh{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(r-t)/(n-t),c=1-h;for(let e=0;e!==s;++e)i[e]=a[l+e]*c+a[o+e]*h;return i}}class Wh extends Gh{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class jh{constructor(e,t,r,n){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=zh.convertArray(t,this.TimeBufferType),this.values=zh.convertArray(r,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let r;var n;return t.toJSON!==this.toJSON?r=t.toJSON(e):(r={name:e.name,times:zh.convertArray(e.times,Array),values:zh.convertArray(e.values,Array)},(n=e.getInterpolation())!==e.DefaultInterpolation&&(r.interpolation=n)),r.type=e.ValueTypeName,r}InterpolantFactoryMethodDiscrete(e){return new Wh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new kh(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Vh(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case n:t=this.InterpolantFactoryMethodDiscrete;break;case i:t=this.InterpolantFactoryMethodLinear;break;case 2302:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)return this.createInterpolant=t,this;var r="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(r);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",r),this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return n;case this.InterpolantFactoryMethodLinear:return i;case this.InterpolantFactoryMethodSmooth:return 2302}}getValueSize(){return this.values.length/this.times.length}shift(r){if(0!==r){const n=this.times;for(let e=0,t=n.length;e!==t;++e)n[e]+=r}return this}scale(r){if(1!==r){const n=this.times;for(let e=0,t=n.length;e!==t;++e)n[e]*=r}return this}trim(e,t){var r,n=this.times,i=n.length;let a=0,s=i-1;for(;a!==i&&n[a]<e;)++a;for(;-1!==s&&n[s]>t;)--s;return++s,0===a&&s===i||(a>=s&&(s=Math.max(s,1),a=s-1),r=this.getValueSize(),this.times=zh.arraySlice(n,a,s),this.values=zh.arraySlice(this.values,a*r,s*r)),this}validate(){let r=!0;var e=this.getValueSize(),t=(e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),r=!1),this.times),n=this.values,i=t.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),r=!1);let a=null;for(let e=0;e!==i;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),r=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),r=!1;break}a=s}if(void 0!==n&&zh.isTypedArray(n))for(let e=0,t=n.length;e!==t;++e){var o=n[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),r=!1;break}}return r}optimize(){const r=zh.arraySlice(this.times),n=zh.arraySlice(this.values),i=this.getValueSize(),a=2302===this.getInterpolation(),s=r.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=r[e];if(l!==r[e+1]&&(1!==e||l!==r[0]))if(a)t=!0;else{var h=e*i,c=h-i,d=h+i;for(let e=0;e!==i;++e){var u=n[h+e];if(u!==n[c+e]||u!==n[d+e]){t=!0;break}}}if(t){if(e!==o){r[o]=r[e];var p=e*i,m=o*i;for(let e=0;e!==i;++e)n[m+e]=n[p+e]}++o}}if(0<s){r[o]=r[s];for(let e=s*i,t=o*i,r=0;r!==i;++r)n[t+r]=n[e+r];++o}return o!==r.length?(this.times=zh.arraySlice(r,0,o),this.values=zh.arraySlice(n,0,o*i)):(this.times=r,this.values=n),this}clone(){var e=zh.arraySlice(this.times,0),t=zh.arraySlice(this.values,0);const r=this.constructor,n=new r(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}jh.prototype.TimeBufferType=Float32Array,jh.prototype.ValueBufferType=Float32Array,jh.prototype.DefaultInterpolation=i;class Xh extends jh{}Xh.prototype.ValueTypeName="bool",Xh.prototype.ValueBufferType=Array,Xh.prototype.DefaultInterpolation=n,Xh.prototype.InterpolantFactoryMethodLinear=void 0,Xh.prototype.InterpolantFactoryMethodSmooth=void 0;class qh extends jh{}qh.prototype.ValueTypeName="color";class Yh extends jh{}Yh.prototype.ValueTypeName="number";class Jh extends Gh{constructor(e,t,r,n){super(e,t,r,n)}interpolate_(e,t,r,n){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(r-t)/(n-t);let l=e*s;for(var h=l+s;l!==h;l+=4)lr.slerpFlat(i,0,a,l-s,a,l,o);return i}}class Zh extends jh{InterpolantFactoryMethodLinear(e){return new Jh(this.times,this.values,this.getValueSize(),e)}}Zh.prototype.ValueTypeName="quaternion",Zh.prototype.DefaultInterpolation=i,Zh.prototype.InterpolantFactoryMethodSmooth=void 0;class Kh extends jh{}Kh.prototype.ValueTypeName="string",Kh.prototype.ValueBufferType=Array,Kh.prototype.DefaultInterpolation=n,Kh.prototype.InterpolantFactoryMethodLinear=void 0,Kh.prototype.InterpolantFactoryMethodSmooth=void 0;class Qh extends jh{}class $h{constructor(e,t=-1,r,n=2500){this.name=e,this.tracks=r,this.duration=t,this.blendMode=n,this.uuid=Tt(),this.duration<0&&this.resetDuration()}static parse(e){const r=[],n=e.tracks,i=1/(e.fps||1);for(let e=0,t=n.length;e!==t;++e)r.push(function(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Yh;case"vector":case"vector2":case"vector3":case"vector4":return Qh;case"color":return qh;case"quaternion":return Zh;case"bool":case"boolean":return Xh;case"string":return Kh}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);{var r,n;void 0===e.times&&(r=[],n=[],zh.flattenJSON(e.keys,r,n,"value"),e.times=r,e.values=n)}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}(n[e]).scale(i));const t=new this(e.name,e.duration,r,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){const r=[],n=e.tracks;e={name:e.name,duration:e.duration,tracks:r,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=n.length;e!==t;++e)r.push(jh.toJSON(n[e]));return e}static CreateFromMorphTargetSequence(e,n,i,a){var s=n.length;const o=[];for(let r=0;r<s;r++){let e=[],t=[];e.push((r+s-1)%s,r,(r+1)%s),t.push(0,1,0);var l=zh.getKeyframeOrder(e);e=zh.sortedArray(e,1,l),t=zh.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new Yh(".morphTargetInfluences["+n[r].name+"]",e,t).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let r=e;Array.isArray(e)||(r=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<r.length;e++)if(r[e].name===t)return r[e];return null}static CreateClipsFromMorphTargetSequences(r,e,t){const n={};var i=/^([\w-]*?)([\d]+)$/;for(let e=0,t=r.length;e<t;e++){const o=r[e];var a=o.name.match(i);if(a&&1<a.length){a=a[1];let e=n[a];e||(n[a]=e=[]),e.push(o)}}const s=[];for(const l in n)s.push(this.CreateFromMorphTargetSequence(l,n[l],e,t));return s}static parseAnimation(e,c){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function t(e,t,r,n,i){var a,s;0!==r.length&&(a=[],s=[],zh.flattenJSON(r,a,s,n),0!==a.length&&i.push(new e(t,a,s)))}const r=[];var u=e.name||"default",d=e.fps||30,p=e.blendMode;let n=e.length||-1;var m=e.hierarchy||[];for(let e=0;e<m.length;e++){var i=m[e].keys;if(i&&0!==i.length)if(i[0].morphTargets){const s={};let t;for(t=0;t<i.length;t++)if(i[t].morphTargets)for(let e=0;e<i[t].morphTargets.length;e++)s[i[t].morphTargets[e]]=-1;for(const o in s){const l=[],h=[];for(let e=0;e!==i[t].morphTargets.length;++e){var f=i[t];l.push(f.time),h.push(f.morphTarget===o?1:0)}r.push(new Yh(".morphTargetInfluence["+o+"]",l,h))}n=s.length*d}else{var a=".bones["+c[e].name+"]";t(Qh,a+".position",i,"pos",r),t(Zh,a+".quaternion",i,"rot",r),t(Qh,a+".scale",i,"scl",r)}}return 0===r.length?null:new this(u,n,r,p)}resetDuration(){let r=0;for(let e=0,t=this.tracks.length;e!==t;++e){var n=this.tracks[e];r=Math.max(r,n.times[n.times.length-1])}return this.duration=r,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const ec={enabled:!(Qh.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class tc{constructor(e,t,r){const n=this;let i=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=r,this.itemStart=function(e){s++,!1===i&&void 0!==n.onStart&&n.onStart(e,a,s),i=!0},this.itemEnd=function(e){a++,void 0!==n.onProgress&&n.onProgress(e,a,s),a===s&&(i=!1,void 0!==n.onLoad&&n.onLoad())},this.itemError=function(e){void 0!==n.onError&&n.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(r){for(let e=0,t=l.length;e<t;e+=2){const i=l[e];var n=l[e+1];if(i.global&&(i.lastIndex=0),i.test(r))return n}return null}}}const rc=new tc;class nc{constructor(e){this.manager=void 0!==e?e:rc,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(r,n){const i=this;return new Promise(function(e,t){i.load(r,e,n,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const ic={};class ac extends nc{constructor(e){super(e)}load(a,e,t,r){void 0===a&&(a=""),void 0!==this.path&&(a=this.path+a),a=this.manager.resolveURL(a);const n=ec.get(a);if(void 0!==n)return this.manager.itemStart(a),setTimeout(()=>{e&&e(n),this.manager.itemEnd(a)},0),n;if(void 0===ic[a]){ic[a]=[],ic[a].push({onLoad:e,onProgress:t,onError:r});var i=new Request(a,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"});const s=this.mimeType,o=this.responseType;fetch(i).then(e=>{if(200!==e.status&&0!==e.status)throw Error(`fetch for "${e.url}" responded with ${e.status}: `+e.statusText);{if(0===e.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),"undefined"==typeof ReadableStream||void 0===e.body||void 0===e.body.getReader)return e;const o=ic[a],t=e.body.getReader();e=e.headers.get("Content-Length");const l=e?parseInt(e):0,h=0!==l;let s=0;e=new ReadableStream({start(a){!function i(){t.read().then(({done:e,value:t})=>{if(e)a.close();else{s+=t.byteLength;const r=new ProgressEvent("progress",{lengthComputable:h,loaded:s,total:l});for(let e=0,t=o.length;e<t;e++){const n=o[e];n.onProgress&&n.onProgress(r)}a.enqueue(t),i()}})}()}});return new Response(e)}}).then(e=>{switch(o){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"document":return e.text().then(e=>{const t=new DOMParser;return t.parseFromString(e,s)});case"json":return e.json();default:if(void 0===s)return e.text();{const r=/charset="?([^;"\s]*)"?/i,n=r.exec(s);var t=n&&n[1]?n[1].toLowerCase():void 0;const i=new TextDecoder(t);return e.arrayBuffer().then(e=>i.decode(e))}}}).then(r=>{ec.add(a,r);var n=ic[a];delete ic[a];for(let e=0,t=n.length;e<t;e++){const i=n[e];i.onLoad&&i.onLoad(r)}}).catch(r=>{var n=ic[a];if(void 0===n)throw this.manager.itemError(a),r;delete ic[a];for(let e=0,t=n.length;e<t;e++){const i=n[e];i.onError&&i.onError(r)}this.manager.itemError(a)}).finally(()=>{this.manager.itemEnd(a)}),this.manager.itemStart(a)}else ic[a].push({onLoad:e,onProgress:t,onError:r})}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class sc extends nc{constructor(e){super(e)}load(t,e,h,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const n=this,i=ec.get(t);if(void 0!==i)return n.manager.itemStart(t),setTimeout(function(){e&&e(i),n.manager.itemEnd(t)},0),i;const a=Bt("img");function s(){l(),ec.add(t,this),e&&e(this),n.manager.itemEnd(t)}function o(e){l(),r&&r(e),n.manager.itemError(t),n.manager.itemEnd(t)}function l(){a.removeEventListener("load",s,!1),a.removeEventListener("error",o,!1)}return a.addEventListener("load",s,!1),a.addEventListener("error",o,!1),"data:"!==t.slice(0,5)&&void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),n.manager.itemStart(t),a.src=t,a}}class oc extends nc{constructor(e){super(e)}load(r,n,e,i){const a=new gi,s=new sc(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<r.length;++e)!function(t){s.load(r[t],function(e){a.images[t]=e,6===++o&&(a.needsUpdate=!0,n&&n(a))},void 0,i)}(e);return a}}class lc extends nc{constructor(e){super(e)}load(e,t,r,n){const i=this,a=new Oo,s=new ac(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,function(e){e=i.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:W,a.wrapT=void 0!==e.wrapT?e.wrapT:W,a.magFilter=void 0!==e.magFilter?e.magFilter:Ue,a.minFilter=void 0!==e.minFilter?e.minFilter:Ue,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=Fe),1===e.mipmapCount&&(a.minFilter=Ue),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t&&t(a,e))},r,n),a}}class hc extends nc{constructor(e){super(e)}load(e,t,r,n){const i=new er,a=new sc(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(e){i.image=e,i.needsUpdate=!0,void 0!==t&&t(i)},r,n),i}}class cc extends M{constructor(e,t=1){super(),this.type="Light",this.color=new x(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}cc.prototype.isLight=!0;class uc extends cc{constructor(e,t,r){super(e,r),this.type="HemisphereLight",this.position.copy(M.DefaultUp),this.updateMatrix(),this.groundColor=new x(t)}copy(e){return cc.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}uc.prototype.isHemisphereLight=!0;const dc=new Le,pc=new Ce,mc=new Ce;class fc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Re(512,512),this.map=null,this.mapPass=null,this.matrix=new Le,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ei,this._frameExtents=new Re(1,1),this._viewportCount=1,this._viewports=[new tr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,r=this.matrix;pc.setFromMatrixPosition(e.matrixWorld),t.position.copy(pc),mc.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(mc),t.updateMatrixWorld(),dc.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(dc),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiply(t.projectionMatrix),r.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class gc extends fc{constructor(){super(new mi(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera;var r=2*St*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;r===t.fov&&n===t.aspect&&i===t.far||(t.fov=r,t.aspect=n,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}gc.prototype.isSpotLightShadow=!0;class vc extends cc{constructor(e,t,r=0,n=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(M.DefaultUp),this.updateMatrix(),this.target=new M,this.distance=r,this.angle=n,this.penumbra=i,this.decay=a,this.shadow=new gc}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}vc.prototype.isSpotLight=!0;const yc=new Le,_c=new Ce,xc=new Ce;class Mc extends fc{constructor(){super(new mi(90,1,.5,500)),this._frameExtents=new Re(4,2),this._viewportCount=6,this._viewports=[new tr(2,1,1,1),new tr(0,1,1,1),new tr(3,1,1,1),new tr(1,1,1,1),new tr(3,0,1,1),new tr(1,0,1,1)],this._cubeDirections=[new Ce(1,0,0),new Ce(-1,0,0),new Ce(0,0,1),new Ce(0,0,-1),new Ce(0,1,0),new Ce(0,-1,0)],this._cubeUps=[new Ce(0,1,0),new Ce(0,1,0),new Ce(0,1,0),new Ce(0,1,0),new Ce(0,0,1),new Ce(0,0,-1)]}updateMatrices(e,t=0){const r=this.camera,n=this.matrix;var i=e.distance||r.far;i!==r.far&&(r.far=i,r.updateProjectionMatrix()),_c.setFromMatrixPosition(e.matrixWorld),r.position.copy(_c),xc.copy(r.position),xc.add(this._cubeDirections[t]),r.up.copy(this._cubeUps[t]),r.lookAt(xc),r.updateMatrixWorld(),n.makeTranslation(-_c.x,-_c.y,-_c.z),yc.multiplyMatrices(r.projectionMatrix,r.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yc)}}Mc.prototype.isPointLightShadow=!0;class bc extends cc{constructor(e,t,r=0,n=1){super(e,t),this.type="PointLight",this.distance=r,this.decay=n,this.shadow=new Mc}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}bc.prototype.isPointLight=!0;class wc extends fc{constructor(){super(new Ui(-5,5,5,-5,.5,500))}}wc.prototype.isDirectionalLightShadow=!0;class Ec extends cc{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(M.DefaultUp),this.updateMatrix(),this.target=new M,this.shadow=new wc}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Ec.prototype.isDirectionalLight=!0;class Sc extends cc{constructor(e,t){super(e,t),this.type="AmbientLight"}}Sc.prototype.isAmbientLight=!0;class Tc extends cc{constructor(e,t,r=10,n=10){super(e,t),this.type="RectAreaLight",this.width=r,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}Tc.prototype.isRectAreaLight=!0;class Ac{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new Ce)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var r=e.x,n=e.y,e=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.282095),t.addScaledVector(i[1],.488603*n),t.addScaledVector(i[2],.488603*e),t.addScaledVector(i[3],.488603*r),t.addScaledVector(i[4],r*n*1.092548),t.addScaledVector(i[5],n*e*1.092548),t.addScaledVector(i[6],.315392*(3*e*e-1)),t.addScaledVector(i[7],r*e*1.092548),t.addScaledVector(i[8],.546274*(r*r-n*n)),t}getIrradianceAt(e,t){var r=e.x,n=e.y,e=e.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.886227),t.addScaledVector(i[1],1.023328*n),t.addScaledVector(i[2],1.023328*e),t.addScaledVector(i[3],1.023328*r),t.addScaledVector(i[4],.858086*r*n),t.addScaledVector(i[5],.858086*n*e),t.addScaledVector(i[6],.743125*e*e-.247708),t.addScaledVector(i[7],.858086*r*e),t.addScaledVector(i[8],.429043*(r*r-n*n)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,r){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],r);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,r){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],r);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,r=0){const n=this.coefficients;for(let e=0;e<9;e++)n[e].fromArray(t,r+3*e);return this}toArray(t=[],r=0){const n=this.coefficients;for(let e=0;e<9;e++)n[e].toArray(t,r+3*e);return t}static getBasisAt(e,t){var r=e.x,n=e.y,e=e.z;t[0]=.282095,t[1]=.488603*n,t[2]=.488603*e,t[3]=.488603*r,t[4]=1.092548*r*n,t[5]=1.092548*n*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*r*e,t[8]=.546274*(r*r-n*n)}}Ac.prototype.isSphericalHarmonics3=!0;class Rc extends cc{constructor(e=new Ac,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Rc.prototype.isLightProbe=!0;class Cc extends nc{constructor(e){super(e),this.textures={}}load(t,r,e,n){const i=this,a=new ac(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{r(i.parse(JSON.parse(e)))}catch(e){n?n(e):console.error(e),i.manager.itemError(t)}},e,n)}parse(t){const r=this.textures;function e(e){return void 0===r[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),r[e]}const n=bn.fromType(t.type);if(void 0!==t.uuid&&(n.uuid=t.uuid),void 0!==t.name&&(n.name=t.name),void 0!==t.color&&void 0!==n.color&&n.color.setHex(t.color),void 0!==t.roughness&&(n.roughness=t.roughness),void 0!==t.metalness&&(n.metalness=t.metalness),void 0!==t.sheen&&(n.sheen=t.sheen),void 0!==t.sheenColor&&(n.sheenColor=(new x).setHex(t.sheenColor)),void 0!==t.sheenRoughness&&(n.sheenRoughness=t.sheenRoughness),void 0!==t.emissive&&void 0!==n.emissive&&n.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==n.specular&&n.specular.setHex(t.specular),void 0!==t.specularIntensity&&(n.specularIntensity=t.specularIntensity),void 0!==t.specularColor&&void 0!==n.specularColor&&n.specularColor.setHex(t.specularColor),void 0!==t.shininess&&(n.shininess=t.shininess),void 0!==t.clearcoat&&(n.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(n.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.transmission&&(n.transmission=t.transmission),void 0!==t.thickness&&(n.thickness=t.thickness),void 0!==t.attenuationDistance&&(n.attenuationDistance=t.attenuationDistance),void 0!==t.attenuationColor&&void 0!==n.attenuationColor&&n.attenuationColor.setHex(t.attenuationColor),void 0!==t.fog&&(n.fog=t.fog),void 0!==t.flatShading&&(n.flatShading=t.flatShading),void 0!==t.blending&&(n.blending=t.blending),void 0!==t.combine&&(n.combine=t.combine),void 0!==t.side&&(n.side=t.side),void 0!==t.shadowSide&&(n.shadowSide=t.shadowSide),void 0!==t.opacity&&(n.opacity=t.opacity),void 0!==t.transparent&&(n.transparent=t.transparent),void 0!==t.alphaTest&&(n.alphaTest=t.alphaTest),void 0!==t.depthTest&&(n.depthTest=t.depthTest),void 0!==t.depthWrite&&(n.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(n.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(n.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(n.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(n.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(n.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(n.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(n.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(n.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(n.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(n.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(n.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(n.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(n.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(n.rotation=t.rotation),1!==t.linewidth&&(n.linewidth=t.linewidth),void 0!==t.dashSize&&(n.dashSize=t.dashSize),void 0!==t.gapSize&&(n.gapSize=t.gapSize),void 0!==t.scale&&(n.scale=t.scale),void 0!==t.polygonOffset&&(n.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(n.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(n.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.dithering&&(n.dithering=t.dithering),void 0!==t.alphaToCoverage&&(n.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(n.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.visible&&(n.visible=t.visible),void 0!==t.toneMapped&&(n.toneMapped=t.toneMapped),void 0!==t.userData&&(n.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?n.vertexColors=0<t.vertexColors:n.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var i=t.uniforms[a];switch(n.uniforms[a]={},i.type){case"t":n.uniforms[a].value=e(i.value);break;case"c":n.uniforms[a].value=(new x).setHex(i.value);break;case"v2":n.uniforms[a].value=(new Re).fromArray(i.value);break;case"v3":n.uniforms[a].value=(new Ce).fromArray(i.value);break;case"v4":n.uniforms[a].value=(new tr).fromArray(i.value);break;case"m3":n.uniforms[a].value=(new Nt).fromArray(i.value);break;case"m4":n.uniforms[a].value=(new Le).fromArray(i.value);break;default:n.uniforms[a].value=i.value}}if(void 0!==t.defines&&(n.defines=t.defines),void 0!==t.vertexShader&&(n.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(n.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)n.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(n.flatShading=1===t.shading),void 0!==t.size&&(n.size=t.size),void 0!==t.sizeAttenuation&&(n.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(n.map=e(t.map)),void 0!==t.matcap&&(n.matcap=e(t.matcap)),void 0!==t.alphaMap&&(n.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(n.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(n.bumpScale=t.bumpScale),void 0!==t.normalMap&&(n.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(n.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),n.normalScale=(new Re).fromArray(e)}return void 0!==t.displacementMap&&(n.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(n.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(n.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(n.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(n.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(n.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(n.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(n.specularMap=e(t.specularMap)),void 0!==t.specularIntensityMap&&(n.specularIntensityMap=e(t.specularIntensityMap)),void 0!==t.specularColorMap&&(n.specularColorMap=e(t.specularColorMap)),void 0!==t.envMap&&(n.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(n.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(n.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(n.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(n.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(n.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(n.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(n.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(n.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(n.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(n.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(n.clearcoatNormalScale=(new Re).fromArray(t.clearcoatNormalScale)),void 0!==t.transmissionMap&&(n.transmissionMap=e(t.transmissionMap)),void 0!==t.thicknessMap&&(n.thicknessMap=e(t.thicknessMap)),void 0!==t.sheenColorMap&&(n.sheenColorMap=e(t.sheenColorMap)),void 0!==t.sheenRoughnessMap&&(n.sheenRoughnessMap=e(t.sheenRoughnessMap)),n}setTextures(e){return this.textures=e,this}}class Lc{static decodeText(r){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(r);let n="";for(let e=0,t=r.length;e<t;e++)n+=String.fromCharCode(r[e]);try{return decodeURIComponent(escape(n))}catch(e){return n}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.slice(0,t+1)}static resolveURL(e,t){return"string"!=typeof e||""===e?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Pc extends T{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Pc.prototype.isInstancedBufferGeometry=!0;class Dc extends nc{constructor(e){super(e)}load(t,r,e,n){const i=this,a=new ac(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{r(i.parse(JSON.parse(e)))}catch(e){n?n(e):console.error(e),i.manager.itemError(t)}},e,n)}parse(r){const i={},a={};function c(e,t){if(void 0!==i[t])return i[t];var r=e.interleavedBuffers[t],e=function(e,t){if(void 0!==a[t])return a[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return a[t]=e}(e,r.buffer),e=Ft(r.type,e);const n=new so(e,r.stride);return n.uuid=r.uuid,i[t]=n}const n=new(r.isInstancedBufferGeometry?Pc:T);var e=r.data.index,u=(void 0!==e&&(e=Ft(e.type,e.array),n.setIndex(new Tn(e,1))),r.data.attributes);for(const f in u){var t=u[f];let e;if(t.isInterleavedBufferAttribute){var s=c(r.data,t.data);e=new lo(s,t.itemSize,t.offset,t.normalized)}else{s=Ft(t.type,t.array);const g=t.isInstancedBufferAttribute?zo:Tn;e=new g(s,t.itemSize,t.normalized)}void 0!==t.name&&(e.name=t.name),void 0!==t.usage&&e.setUsage(t.usage),void 0!==t.updateRange&&(e.updateRange.offset=t.updateRange.offset,e.updateRange.count=t.updateRange.count),n.setAttribute(f,e)}var o=r.data.morphAttributes;if(o)for(const v in o){var d=o[v];const y=[];for(let t=0,e=d.length;t<e;t++){var l,h=d[t];let e;e=h.isInterleavedBufferAttribute?(l=c(r.data,h.data),new lo(l,h.itemSize,h.offset,h.normalized)):(l=Ft(h.type,h.array),new Tn(l,h.itemSize,h.normalized)),void 0!==h.name&&(e.name=h.name),y.push(e)}n.morphAttributes[v]=y}r.data.morphTargetsRelative&&(n.morphTargetsRelative=!0);var p=r.data.groups||r.data.drawcalls||r.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){var m=p[e];n.addGroup(m.start,m.count,m.materialIndex)}e=r.data.boundingSphere;if(void 0!==e){const _=new Ce;void 0!==e.center&&_.fromArray(e.center),n.boundingSphere=new Lr(_,e.radius)}return r.name&&(n.name=r.name),r.userData&&(n.userData=r.userData),n}}const Ic={UVMapping:300,CubeReflectionMapping:w,CubeRefractionMapping:E,EquirectangularReflectionMapping:l,EquirectangularRefractionMapping:h,CubeUVReflectionMapping:U},Nc={RepeatWrapping:k,ClampToEdgeWrapping:W,MirroredRepeatWrapping:j},Uc={NearestFilter:X,NearestMipmapNearestFilter:Te,NearestMipmapLinearFilter:Ae,LinearFilter:Ue,LinearMipmapNearestFilter:Oe,LinearMipmapLinearFilter:Fe};class Oc extends nc{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,r,e,n){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=ec.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){r&&r(a),i.manager.itemEnd(t)},0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(e){ec.add(t,e),r&&r(e),i.manager.itemEnd(t)}).catch(function(e){n&&n(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}let Fc;const Bc={getContext:function(){return Fc=void 0===Fc?new(window.AudioContext||window.webkitAudioContext):Fc},setContext:function(e){Fc=e}};class Hc extends nc{constructor(e){super(e)}load(n,i,e,a){const s=this,t=new ac(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(n,function(e){try{var t=e.slice(0);const r=Bc.getContext();r.decodeAudioData(t,function(e){i(e)})}catch(e){a?a(e):console.error(e),s.manager.itemError(n)}},e,a)}}class zc extends Rc{constructor(e,t,r=1){super(void 0,r);var r=(new x).set(e),e=(new x).set(t),t=new Ce(r.r,r.g,r.b),r=new Ce(e.r,e.g,e.b),e=Math.sqrt(Math.PI),n=e*Math.sqrt(.75);this.sh.coefficients[0].copy(t).add(r).multiplyScalar(e),this.sh.coefficients[1].copy(t).sub(r).multiplyScalar(n)}}class Gc extends Rc{constructor(e,t=1){super(void 0,t);t=(new x).set(e);this.sh.coefficients[0].set(t.r,t.g,t.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Gc.prototype.isAmbientLightProbe=zc.prototype.isHemisphereLightProbe=Oc.prototype.isImageBitmapLoader=!0;const Vc=new Le,kc=new Le,Wc=new Le;class jc{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Xc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=Xc(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e);var t}}function Xc(){return("undefined"==typeof performance?Date:performance).now()}const qc=new Ce,Yc=new lr,Jc=new Ce,Zc=new Ce;class Kc extends M{constructor(){super(),this.type="AudioListener",this.context=Bc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new jc}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;var r,e=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(qc,Yc,Jc),Zc.set(0,0,-1).applyQuaternion(Yc),t.positionX?(r=this.context.currentTime+this.timeDelta,t.positionX.linearRampToValueAtTime(qc.x,r),t.positionY.linearRampToValueAtTime(qc.y,r),t.positionZ.linearRampToValueAtTime(qc.z,r),t.forwardX.linearRampToValueAtTime(Zc.x,r),t.forwardY.linearRampToValueAtTime(Zc.y,r),t.forwardZ.linearRampToValueAtTime(Zc.z,r),t.upX.linearRampToValueAtTime(e.x,r),t.upY.linearRampToValueAtTime(e.y,r),t.upZ.linearRampToValueAtTime(e.z,r)):(t.setPosition(qc.x,qc.y,qc.z),t.setOrientation(Zc.x,Zc.y,Zc.z,e.x,e.y,e.z))}}class Qc extends M{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const $c=new Ce,eu=new lr,tu=new Ce,ru=new Ce;class nu{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var r=this.getFrequencyData();for(let e=0;e<r.length;e++)t+=r[e];return t/r.length}}class iu{constructor(e,t,r){this.binding=e,this.valueSize=r;let n,i,a;switch(t){case"quaternion":n=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*r),this._workIndex=5;break;case"string":case"bool":n=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*r);break;default:n=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*r)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const r=this.buffer,n=this.valueSize,i=e*n+n;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==n;++e)r[i+e]=r[e];a=t}else{e=t/(a+=t);this._mixBufferRegion(r,i,0,e,n)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,r=this.valueSize,n=r*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,n,0,e,r),this.cumulativeWeightAdditive+=e}apply(e){const r=this.valueSize,n=this.buffer,i=e*r+r,t=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,t<1&&(e=r*this._origIndex,this._mixBufferRegion(n,i,e,1-t,r)),0<a&&this._mixBufferRegionAdditive(n,i,this._addIndex*r,1,r);for(let e=r,t=r+r;e!==t;++e)if(n[e]!==n[e+r]){s.setValue(n,i);break}}saveOriginalState(){const e=this.binding,r=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(r,i);for(let e=n,t=i;e!==t;++e)r[e]=r[i+e%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,r=t+this.valueSize;for(let e=t;e<r;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,r=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[r+e]=this.buffer[t+e]}_select(t,r,n,e,i){if(.5<=e)for(let e=0;e!==i;++e)t[r+e]=t[n+e]}_slerp(e,t,r,n){lr.slerpFlat(e,t,e,t,e,r,n)}_slerpAdditive(e,t,r,n,i){i=this._workIndex*i;lr.multiplyQuaternionsFlat(e,i,e,t,e,r),lr.slerpFlat(e,t,e,t,e,i,n)}_lerp(t,r,n,i,a){var s=1-i;for(let e=0;e!==a;++e){var o=r+e;t[o]=t[o]*s+t[n+e]*i}}_lerpAdditive(t,r,n,i,a){for(let e=0;e!==a;++e){var s=r+e;t[s]=t[s]+t[n+e]*i}}}zi="\\[\\]\\.:\\/";const au=new RegExp("["+zi+"]","g");var Gi="[^"+zi+"]",zi="[^"+zi.replace("\\.","")+"]",su=/((?:WC+[\/:])*)/.source.replace("WC",Gi),zi=/(WCOD+)?/.source.replace("WCOD",zi),ou=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Gi),Gi=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Gi);const lu=new RegExp("^"+su+zi+ou+Gi+"$"),hu=["material","materials","bones"];class cu{constructor(e,t,r){this.path=t,this.parsedPath=r||cu.parseTrackName(t),this.node=cu.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,r){return new(e&&e.isAnimationObjectGroup?cu.Composite:cu)(e,t,r)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(au,"")}static parseTrackName(e){var t=lu.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const r={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var n,t=r.nodeName&&r.nodeName.lastIndexOf(".");if(void 0!==t&&-1!==t&&(n=r.nodeName.substring(t+1),-1!==hu.indexOf(n)&&(r.nodeName=r.nodeName.substring(0,t),r.objectName=n)),null===r.propertyName||0===r.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return r}static findNode(e,n){if(void 0===n||""===n||"."===n||-1===n||n===e.name||n===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(n);if(void 0!==t)return t}if(e.children){const i=function(t){for(let e=0;e<t.length;e++){var r=t[e];if(r.name===n||r.uuid===n)return r;r=i(r.children);if(r)return r}return null};t=i(e.children);if(t)return t}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(r,n){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)r[n++]=i[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(r,n){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=r[n++]}_setValue_array_setNeedsUpdate(r,n){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=r[n++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(r,n){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=r[n++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let r=this.node;var n=this.parsedPath,i=n.objectName,a=n.propertyName;let s=n.propertyIndex;if(r||(r=cu.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=r),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,r){if(i){let t=n.objectIndex;switch(i){case"materials":if(!r.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!r.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);r=r.material.materials;break;case"bones":if(!r.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);r=r.skeleton.bones;for(let e=0;e<r.length;e++)if(r[e].name===t){t=e;break}break;default:if(void 0===r[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);r=r[i]}if(void 0!==t){if(void 0===r[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,r);r=r[t]}}var o=r[a];if(void 0===o)return n=n.nodeName,void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+a+" but it wasn't found.",r);let e=this.Versioning.None,t=(void 0!==(this.targetObject=r).needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==r.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate),this.BindingType.Direct);if(void 0!==s){if("morphTargetInfluences"===a){if(!r.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!r.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!r.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==r.morphTargetDictionary[s]&&(s=r.morphTargetDictionary[s])}t=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else void 0!==o.fromArray&&void 0!==o.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(t=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=a;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}cu.Composite=class{constructor(e,t,r){r=r||cu.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)}getValue(e,t){this.bind();const r=this._targetGroup.nCachedObjects_,n=this._bindings[r];void 0!==n&&n.getValue(e,t)}setValue(r,n){const i=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=i.length;e!==t;++e)i[e].setValue(r,n)}bind(){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].bind()}unbind(){const r=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=r.length;e!==t;++e)r[e].unbind()}},cu.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},cu.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},cu.prototype.GetterByBindingType=[cu.prototype._getValue_direct,cu.prototype._getValue_array,cu.prototype._getValue_arrayElement,cu.prototype._getValue_toArray],cu.prototype.SetterByBindingTypeAndVersioning=[[cu.prototype._setValue_direct,cu.prototype._setValue_direct_setNeedsUpdate,cu.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[cu.prototype._setValue_array,cu.prototype._setValue_array_setNeedsUpdate,cu.prototype._setValue_array_setMatrixWorldNeedsUpdate],[cu.prototype._setValue_arrayElement,cu.prototype._setValue_arrayElement_setNeedsUpdate,cu.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[cu.prototype._setValue_fromArray,cu.prototype._setValue_fromArray_setNeedsUpdate,cu.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class uu{constructor(){this.uuid=Tt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const r={};this._indicesByUUID=r;for(let e=0,t=arguments.length;e!==t;++e)r[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const n=this._objects,i=this._indicesByUUID,a=this._paths,d=this._parsedPaths,s=this._bindings,p=s.length;let m=void 0,f=n.length,o=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e],h=l.uuid;let r=i[h];if(void 0===r){r=f++,i[h]=r,n.push(l);for(let e=0,t=p;e!==t;++e)s[e].push(new cu(l,a[e],d[e]))}else if(r<o){m=n[r];var c=--o,g=n[c];i[g.uuid]=r,n[r]=g,i[h]=c,n[c]=l;for(let t=0,e=p;t!==e;++t){const u=s[t],v=u[c];let e=u[r];u[r]=v,void 0===e&&(e=new cu(l,a[t],d[t])),u[c]=e}}else n[r]!==m&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=o}remove(){const r=this._objects,n=this._indicesByUUID,i=this._bindings,u=i.length;let a=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var s=arguments[e],o=s.uuid,l=n[o];if(void 0!==l&&l>=a){var h=a++,d=r[h];n[d.uuid]=l,r[l]=d,n[o]=h,r[h]=s;for(let e=0,t=u;e!==t;++e){const c=i[e],p=c[h],m=c[l];c[l]=p,c[h]=m}}}this.nCachedObjects_=a}uncache(){const r=this._objects,n=this._indicesByUUID,i=this._bindings,d=i.length;let a=this.nCachedObjects_,p=r.length;for(let e=0,t=arguments.length;e!==t;++e){var s=arguments[e].uuid,o=n[s];if(void 0!==o)if(delete n[s],o<a){var l=--a,s=r[l],m=--p,f=r[m];n[s.uuid]=o,r[o]=s,n[f.uuid]=l,r[l]=f,r.pop();for(let e=0,t=d;e!==t;++e){const c=i[e],g=c[l],v=c[m];c[o]=g,c[l]=v,c.pop()}}else{var h=--p,s=r[h];0<h&&(n[s.uuid]=o),r[o]=s,r.pop();for(let e=0,t=d;e!==t;++e){const u=i[e];u[o]=u[h],u.pop()}}}this.nCachedObjects_=a}subscribe_(r,n){const e=this._bindingsIndicesByPath;let t=e[r];const i=this._bindings;if(void 0!==t)return i[t];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,c=this.nCachedObjects_,h=new Array(l);t=i.length,e[r]=t,a.push(r),s.push(n),i.push(h);for(let e=c,t=o.length;e!==t;++e){var u=o[e];h[e]=new cu(u,r,n)}return h}unsubscribe_(e){const t=this._bindingsIndicesByPath,r=t[e];if(void 0!==r){const n=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=r,a[r]=o,a.pop(),i[r]=i[s],i.pop(),n[r]=n[s],n.pop()}}}uu.prototype.isAnimationObjectGroup=!0;class du{constructor(e,t,r=null,n=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=r,this.blendMode=n;const i=t.tracks,a=i.length,s=new Array(a);var o={endingStart:ht,endingEnd:ht};for(let e=0;e!==a;++e){const l=i[e].createInterpolant(null);(s[e]=l).settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,r){var n,i;return e.fadeOut(t),this.fadeIn(t),r&&(i=(r=this._clip.duration)/(n=e._clip.duration),e.warp(1,n/r,t),this.warp(i,1,t)),this}crossFadeTo(e,t,r){return e.crossFadeFrom(this,t,r)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,r){const n=this._mixer,i=n.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=n._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+r,l[0]=e/a,l[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,r,n){if(this.enabled){var i=this._startTime;if(null!==i){i=(e-i)*r;if(i<0||0===r)return;this._startTime=null,t=r*i}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){const o=this._interpolants,l=this._propertyBindings;if(2501===this.blendMode)for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);else for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(n,s)}}else this._updateWeight(e)}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;var r;null!==n&&(r=n.evaluate(e)[0],t*=r,e>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1)))}return this._effectiveWeight=t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;var r;null!==n&&(r=n.evaluate(e)[0],t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t}_updateTime(e){var t=this._clip.duration,r=this.loop;let n=this.time+e,i=this._loopCount;var a,s=2202===r;if(0===e)return-1!==i&&s&&1==(1&i)?t-n:n;if(2200===r){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(n>=t)n=t;else{if(!(n<0)){this.time=n;break e}n=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),n>=t||n<0?(r=Math.floor(n/t),n-=t*r,i+=Math.abs(r),(a=this.repetitions-i)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=0<e?t:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==a?this._setEndings(a=e<0,!a,s):this._setEndings(!1,!1,s),this._loopCount=i,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:r}))):this.time=n,s&&1==(1&i))return t-n;return n}_setEndings(e,t,r){const n=this._interpolantSettings;r?(n.endingStart=ct,n.endingEnd=ct):(n.endingStart=e?this.zeroSlopeAtStart?ct:ht:ut,n.endingEnd=t?this.zeroSlopeAtEnd?ct:ht:ut)}_scheduleFading(e,t,r){const n=this._mixer,i=n.time;let a=this._weightInterpolant;null===a&&(a=n._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=r,this}}class pu extends Mt{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,r){const n=e._localRoot||this._root,i=e._clip.tracks,c=i.length,a=e._propertyBindings,u=e._interpolants,s=n.uuid,t=this._bindingsByRootAndName;let o=t[s];void 0===o&&(o={},t[s]=o);for(let t=0;t!==c;++t){const l=i[t],h=l.name;let e=o[h];if(void 0!==e)++e.referenceCount,a[t]=e;else{if(void 0!==(e=a[t])){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,s,h));continue}var d=r&&r._propertyBindings[t].binding.parsedPath;++(e=new iu(cu.create(n,h,d),l.ValueTypeName,l.getValueSize())).referenceCount,this._addInactiveBinding(e,s,h),a[t]=e}u[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,r=e._clip.uuid,n=this._actionsByClip[r],this._bindAction(e,n&&n.knownActions[0]),this._addInactiveAction(e,r,t));var t,r,n,i=e._propertyBindings;for(let e=0,t=i.length;e!==t;++e){const a=i[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){const n=r[e];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,r){const n=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=n.length,n.push(e),a.actionByRoot[r]=e}_removeInactiveAction(e){const t=this._actions,r=t[t.length-1],n=e._cacheIndex,i=(r._cacheIndex=n,t[n]=r,t.pop(),e._cacheIndex=null,e._clip.uuid),a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex,c=(l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null,s.actionByRoot),u=(e._localRoot||this._root).uuid;delete c[u],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var r=e._propertyBindings;for(let e=0,t=r.length;e!==t;++e){const n=r[e];0==--n.referenceCount&&this._removeInactiveBinding(n)}}_lendAction(e){const t=this._actions,r=e._cacheIndex,n=this._nActiveActions++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_takeBackAction(e){const t=this._actions,r=e._cacheIndex,n=--this._nActiveActions,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_addInactiveBinding(e,t,r){const n=this._bindingsByRootAndName,i=this._bindings;let a=n[t];void 0===a&&(a={},n[t]=a),(a[r]=e)._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,r=e.binding,n=r.rootNode.uuid,i=r.path,a=this._bindingsByRootAndName,s=a[n],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete a[n]}_lendBinding(e){const t=this._bindings,r=e._cacheIndex,n=this._nActiveBindings++,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_takeBackBinding(e){const t=this._bindings,r=e._cacheIndex,n=--this._nActiveBindings,i=t[n];e._cacheIndex=n,t[n]=e,i._cacheIndex=r,t[r]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let r=e[t];return void 0===r&&((r=new kh(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=r),r}_takeBackControlInterpolant(e){const t=this._controlInterpolants,r=e.__cacheIndex,n=--this._nActiveControlInterpolants,i=t[n];e.__cacheIndex=n,t[n]=e,i.__cacheIndex=r,t[r]=i}clipAction(e,t,r){var n=t||this._root,i=n.uuid;let a="string"==typeof e?$h.findByName(n,e):e;n=null!==a?a.uuid:e,e=this._actionsByClip[n];let s=null;if(void 0===r&&(r=null!==a?a.blendMode:2500),void 0!==e){var o=e.actionByRoot[i];if(void 0!==o&&o.blendMode===r)return o;s=e.knownActions[0],null===a&&(a=s._clip)}if(null===a)return null;o=new du(this,a,t,r);return this._bindAction(o,s),this._addInactiveAction(o,n,i),o}existingAction(e,t){var t=t||this._root,r=t.uuid,t="string"==typeof e?$h.findByName(t,e):e,t=t?t.uuid:e,e=this._actionsByClip[t];return void 0!==e&&e.actionByRoot[r]||null}stopAllAction(){const t=this._actions,r=this._nActiveActions;for(let e=r-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var r=this._actions,n=this._nActiveActions,i=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==n;++e){const h=r[e];h._update(i,t,a,s)}const o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const r=this._actions,t=e.uuid,n=this._actionsByClip,i=n[t];if(void 0!==i){var a=i.knownActions;for(let e=0,t=a.length;e!==t;++e){const s=a[e],o=(this._deactivateAction(s),s._cacheIndex),l=r[r.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,l._cacheIndex=o,r[o]=l,r.pop(),this._removeInactiveBindingsForAction(s)}delete n[t]}}uncacheRoot(e){var t=e.uuid,r=this._actionsByClip;for(const a in r){var n=r[a].actionByRoot[t];void 0!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}var i=this._bindingsByRootAndName[t];if(void 0!==i)for(const s in i){const o=i[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){e=this.existingAction(e,t);null!==e&&(this._deactivateAction(e),this._removeInactiveAction(e))}}pu.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class mu{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new mu(void 0===this.value.clone?this.value:this.value.clone())}}class fu extends so{constructor(e,t,r=1){super(e,t),this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class gu{constructor(e,t,r,n,i){this.buffer=e,this.type=t,this.itemSize=r,this.elementSize=n,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}gu.prototype.isGLBufferAttribute=fu.prototype.isInstancedInterleavedBuffer=!0;function vu(e,t){return e.distance-t.distance}function yu(e,r,n,t){if(e.layers.test(r.layers)&&e.raycast(r,n),!0===t){var i=e.children;for(let e=0,t=i.length;e<t;e++)yu(i[e],r,n,!0)}}const _u=new Re;class xu{constructor(e=new Re(1/0,1/0),t=new Re(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(r){this.makeEmpty();for(let e=0,t=r.length;e<t;e++)this.expandByPoint(r[e]);return this}setFromCenterAndSize(e,t){t=_u.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=_u.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}xu.prototype.isBox2=!0;const Mu=new Ce,bu=new Ce;class wu{constructor(e=new Ce,t=new Ce){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Mu.subVectors(e,this.start),bu.subVectors(this.end,this.start);e=bu.dot(bu);let r=bu.dot(Mu)/e;return r=t?At(r,0,1):r}closestPointToPoint(e,t,r){e=this.closestPointToPointParameter(e,t);return this.delta(r).multiplyScalar(e).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const Eu=new Ce;class Su extends M{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const r=new T,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var i=e/32*Math.PI*2,a=t/32*Math.PI*2;n.push(Math.cos(i),Math.sin(i),1,Math.cos(a),Math.sin(a),1)}r.setAttribute("position",new V(n,3));e=new Xo({fog:!1,toneMapped:!1});this.cone=new tl(r,e),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Eu.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Eu),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Tu=new Ce,Au=new Le,Ru=new Le;class Cu extends tl{constructor(e){var t=function t(r){const n=[];!0===r.isBone&&n.push(r);for(let e=0;e<r.children.length;e++)n.push.apply(n,t(r.children[e]));return n}(e);const r=new T,n=[],i=[];var a=new x(0,0,1),s=new x(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}r.setAttribute("position",new V(n,3)),r.setAttribute("color",new V(i,3));var l=new Xo({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(r,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var r=this.bones;const t=this.geometry,n=t.getAttribute("position");Ru.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<r.length;e++){var i=r[e];i.parent&&i.parent.isBone&&(Au.multiplyMatrices(Ru,i.matrixWorld),Tu.setFromMatrixPosition(Au),n.setXYZ(t,Tu.x,Tu.y,Tu.z),Au.multiplyMatrices(Ru,i.parent.matrixWorld),Tu.setFromMatrixPosition(Au),n.setXYZ(t+1,Tu.x,Tu.y,Tu.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class Lu extends si{constructor(e,t,r){super(new Mh(t,4,2),new wn({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=r,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Pu=new Ce,Du=new x,Iu=new x;class Nu extends M{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r;const n=new yh(t);n.rotateY(.5*Math.PI),this.material=new wn({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);e=n.getAttribute("position"),r=new Float32Array(3*e.count);n.setAttribute("color",new Tn(r,3)),this.add(new si(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const n=e.geometry.getAttribute("color");Du.copy(this.light.color),Iu.copy(this.light.groundColor);for(let e=0,t=n.count;e<t;e++){var r=e<t/2?Du:Iu;n.setXYZ(e,r.r,r.g,r.b)}n.needsUpdate=!0}e.lookAt(Pu.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Uu extends tl{constructor(e=10,n=10,i=4473924,a=8947848){i=new x(i),a=new x(a);var s=n/2,u=e/n,o=e/2;const l=[],h=[];for(let e=0,t=0,r=-o;e<=n;e++,r+=u){l.push(-o,0,r,o,0,r),l.push(r,0,-o,r,0,o);const c=e===s?i:a;c.toArray(h,t),t+=3,c.toArray(h,t),t+=3,c.toArray(h,t),t+=3,c.toArray(h,t),t+=3}const t=new T;t.setAttribute("position",new V(l,3)),t.setAttribute("color",new V(h,3));e=new Xo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="GridHelper"}}tl;const Ou=new Ce,Fu=new Ce,Bu=new Ce;class Hu extends M{constructor(e,t,r){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=r,void 0===t&&(t=1);let n=new T;n.setAttribute("position",new V([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));e=new Xo({fog:!1,toneMapped:!1});this.lightPlane=new Qo(n,e),this.add(this.lightPlane),(n=new T).setAttribute("position",new V([0,0,0,0,0,1],3)),this.targetLine=new Qo(n,e),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Ou.setFromMatrixPosition(this.light.matrixWorld),Fu.setFromMatrixPosition(this.light.target.matrixWorld),Bu.subVectors(Fu,Ou),this.lightPlane.lookAt(Fu),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Fu),this.targetLine.scale.z=Bu.length()}}const zu=new Ce,Gu=new pi;tl;function Vu(e,t,r,n,i,a,s){zu.set(i,a,s).unproject(n);var o=t[e];if(void 0!==o){const l=r.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],zu.x,zu.y,zu.z)}}const ku=new ur;class Wu extends tl{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24);const i=new T;i.setIndex(new Tn(r,1)),i.setAttribute("position",new Tn(n,3)),super(i,new Xo({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&ku.setFromObject(this.object),!ku.isEmpty()){var e=ku.min,t=ku.max;const r=this.geometry.attributes.position,n=r.array;n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=e.x,n[4]=t.y,n[5]=t.z,n[6]=e.x,n[7]=e.y,n[8]=t.z,n[9]=t.x,n[10]=e.y,n[11]=t.z,n[12]=t.x,n[13]=t.y,n[14]=e.z,n[15]=e.x,n[16]=t.y,n[17]=e.z,n[18]=e.x,n[19]=e.y,n[20]=e.z,n[21]=t.x,n[22]=e.y,n[23]=e.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return tl.prototype.copy.call(this,e),this.object=e.object,this}}tl;Qo;const ju=new Ce;let Xu,qu;class Yu extends M{constructor(e=new Ce(0,0,1),t=new Ce(0,0,0),r=1,n=16776960,i=.2*r,a=.2*i){super(),this.type="ArrowHelper",void 0===Xu&&((Xu=new T).setAttribute("position",new V([0,0,0,0,1,0],3)),(qu=new Hl(0,.5,1,5,1)).translate(0,-.5,0)),this.position.copy(t),this.line=new Qo(Xu,new Xo({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new si(qu,new wn({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(r,i,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(ju.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(ju,e))}setLength(e,t=.2*e,r=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(r,t,r),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Ju extends tl{constructor(e=1){e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const t=new T;t.setAttribute("position",new V(e,3)),t.setAttribute("color",new V([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));e=new Xo({vertexColors:!0,toneMapped:!1});super(t,e),this.type="AxesHelper"}setColors(e,t,r){const n=new x;var i=this.geometry.attributes.color.array;return n.set(e),n.toArray(i,0),n.toArray(i,3),n.set(t),n.toArray(i,6),n.toArray(i,9),n.set(r),n.toArray(i,12),n.toArray(i,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}su=new ArrayBuffer(4);const Zu=new Float32Array(su),Ku=new Uint32Array(su),Qu=new Uint32Array(512),$u=new Uint32Array(512);for(let e=0;e<256;++e){var ed=e-127;ed<-27?(Qu[e]=0,Qu[256|e]=32768,$u[e]=24,$u[256|e]=24):ed<-14?(Qu[e]=1024>>-ed-14,Qu[256|e]=1024>>-ed-14|32768,$u[e]=-ed-1,$u[256|e]=-ed-1):ed<=15?(Qu[e]=15+ed<<10,Qu[256|e]=15+ed<<10|32768,$u[e]=13,$u[256|e]=13):ed<128?(Qu[e]=31744,Qu[256|e]=64512,$u[e]=24,$u[256|e]=24):(Qu[e]=31744,Qu[256|e]=64512,$u[e]=13,$u[256|e]=13)}const td=new Uint32Array(2048),rd=new Uint32Array(64),nd=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;0==(8388608&e);)e<<=1,t-=8388608;e&=-8388609,t+=947912704,td[r]=e|t}for(let e=1024;e<2048;++e)td[e]=939524096+(e-1024<<13);for(let e=1;e<31;++e)rd[e]=e<<23;rd[31]=1199570944,rd[32]=2147483648;for(let e=33;e<63;++e)rd[e]=2147483648+(e-32<<23);rd[63]=3347054592;for(let e=1;e<64;++e)32!==e&&(nd[e]=1024);ll;Eo;ll;nl;nl;nl;class id extends Ce{constructor(e,t,r){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(e,t,r)}}class ad extends Tn{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(e,t),this.setUsage(yt)}}class sd extends Pn{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(e,t)}}class od extends In{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(e,t)}}class ld extends V{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(e,t)}}ml.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(ml.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},Ul.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)};tl;Uu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Cu.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};tl;nc.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Lc.extractUrlBase(e)},nc.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};ac;xu.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},xu.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},xu.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},xu.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},ur.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},ur.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},ur.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},ur.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},ur.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Yr.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")},Lr.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ei.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},wu.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Nt.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Nt.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Nt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Nt.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Nt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Nt.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Le.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Le.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Le.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Ce).setFromMatrixColumn(this,3)},Le.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Le.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Le.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Le.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Le.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Le.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Le.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Le.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Le.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Le.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Le.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Le.prototype.makeFrustum=function(e,t,r,n,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,n,r,i,a)},Le.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Mi.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},lr.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},lr.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Br.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Br.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Br.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},xn.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},xn.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},xn.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},xn.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},xn.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},xn.barycoordFromPoint=function(e,t,r,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),xn.getBarycoord(e,t,r,n,i)},xn.normal=function(e,t,r,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),xn.getNormal(e,t,r,n)},Yl.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},Yl.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new fh(this,e)},Yl.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new xh(this,e)},Re.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},Re.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Re.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ce.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Ce.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Ce.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Ce.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Ce.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Ce.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Ce.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},Ce.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Ce.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},tr.prototype.fromAttribute=function(e,t,r){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,r)},tr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},M.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},M.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},M.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},M.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},M.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(M.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),si.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(si.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),No.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},mi.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(cc.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Tn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===yt},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(yt)}}}),Tn.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?yt:a),this},Tn.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Tn.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},T.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},T.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Tn(t,arguments[2])))},T.prototype.addDrawCall=function(e,t,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},T.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},T.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},T.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},T.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(T.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),so.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?yt:a),this},so.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},fh.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},fh.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},fh.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},ao.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},mu.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(bn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new x}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(di.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),to.prototype.clearTarget=function(e,t,r,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,r,n)},to.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},to.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},to.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},to.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},to.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},to.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},to.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},to.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},to.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},to.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},to.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},to.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},to.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},to.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},to.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},to.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},to.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},to.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},to.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},to.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},to.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},to.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},to.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},to.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(to.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?pt:dt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}}),Object.defineProperties(Ws.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class hd extends vi{constructor(e,t,r){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(e,r)}}Object.defineProperties(rr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Qc.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,r=new Hc;return r.load(e,function(e){t.setBuffer(e)}),this},nu.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},fi.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},fi.prototype.clear=function(e,t,r,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,r,n)},Zt.crossOrigin=void 0,Zt.loadTexture=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new hc,a=(i.setCrossOrigin(this.crossOrigin),i.load(e,r,void 0,n));return t&&(a.mapping=t),a},Zt.loadTextureCube=function(e,t,r,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new oc,a=(i.setCrossOrigin(this.crossOrigin),i.load(e,r,void 0,n));return t&&(a.mapping=t),a},Zt.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Zt.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};zi={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};class cd extends T{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class ud extends T{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}class dd extends rr{constructor(e,t,r){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,r),this.samples=4}}class pd extends nr{constructor(e,t,r,n){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,r,n)}}ar;"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:t}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=t),e.ACESFilmicToneMapping=4,e.AddEquation=re,e.AddOperation=2,e.AdditiveAnimationBlendMode=2501,e.AdditiveBlending=Q,e.AlphaFormat=p,e.AlwaysDepth=_e,e.AlwaysStencilFunc=519,e.AmbientLight=Sc,e.AmbientLightProbe=Gc,e.AnimationClip=$h,e.AnimationLoader=class extends nc{constructor(e){super(e)}load(t,r,e,n){const i=this,a=new ac(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{r(i.parse(JSON.parse(e)))}catch(e){n?n(e):console.error(e),i.manager.itemError(t)}},e,n)}parse(t){const r=[];for(let e=0;e<t.length;e++){var n=$h.parse(t[e]);r.push(n)}return r}},e.AnimationMixer=pu,e.AnimationObjectGroup=uu,e.AnimationUtils=zh,e.ArcCurve=gl,e.ArrayCamera=Ys,e.ArrowHelper=Yu,e.Audio=Qc,e.AudioAnalyser=nu,e.AudioContext=Bc,e.AudioListener=Kc,e.AudioLoader=Hc,e.AxesHelper=Ju,e.AxisHelper=class extends Ju{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(e)}},e.BackSide=De,e.BasicDepthPacking=3200,e.BasicShadowMap=0,e.BinaryTextureLoader=class extends lc{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(e)}},e.Bone=Uo,e.BooleanKeyframeTrack=Xh,e.BoundingBoxHelper=class extends Wu{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(e,t)}},e.Box2=xu,e.Box3=ur,e.Box3Helper=class extends tl{constructor(e,t=16776960){var r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const n=new T;n.setIndex(new Tn(r,1)),n.setAttribute("position",new V([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(n,new Xo({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}},e.BoxBufferGeometry=li,e.BoxGeometry=li,e.BoxHelper=Wu,e.BufferAttribute=Tn,e.BufferGeometry=T,e.BufferGeometryLoader=Dc,e.ByteType=s,e.Cache=ec,e.Camera=pi,e.CameraHelper=class extends tl{constructor(e){const t=new T;var c=new Xo({color:16777215,vertexColors:!0,toneMapped:!1});const r=[],n=[],i={};var a=new x(16755200),s=new x(16711680),o=new x(43775),u=new x(16777215),l=new x(3355443);function h(e,t,r){d(e,r),d(t,r)}function d(e,t){r.push(0,0,0),n.push(t.r,t.g,t.b),void 0===i[e]&&(i[e]=[]),i[e].push(r.length/3-1)}h("n1","n2",a),h("n2","n4",a),h("n4","n3",a),h("n3","n1",a),h("f1","f2",a),h("f2","f4",a),h("f4","f3",a),h("f3","f1",a),h("n1","f1",a),h("n2","f2",a),h("n3","f3",a),h("n4","f4",a),h("p","n1",s),h("p","n2",s),h("p","n3",s),h("p","n4",s),h("u1","u2",o),h("u2","u3",o),h("u3","u1",o),h("c","t",u),h("p","c",l),h("cn1","cn2",l),h("cn3","cn4",l),h("cf1","cf2",l),h("cf3","cf4",l),t.setAttribute("position",new V(r,3)),t.setAttribute("color",new V(n,3)),super(t,c),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()}update(){const e=this.geometry;var t=this.pointMap;Gu.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Vu("c",t,e,Gu,0,0,-1),Vu("t",t,e,Gu,0,0,1),Vu("n1",t,e,Gu,-1,-1,-1),Vu("n2",t,e,Gu,1,-1,-1),Vu("n3",t,e,Gu,-1,1,-1),Vu("n4",t,e,Gu,1,1,-1),Vu("f1",t,e,Gu,-1,-1,1),Vu("f2",t,e,Gu,1,-1,1),Vu("f3",t,e,Gu,-1,1,1),Vu("f4",t,e,Gu,1,1,1),Vu("u1",t,e,Gu,.7,1.1,-1),Vu("u2",t,e,Gu,-.7,1.1,-1),Vu("u3",t,e,Gu,0,2,-1),Vu("cf1",t,e,Gu,-1,0,1),Vu("cf2",t,e,Gu,1,0,1),Vu("cf3",t,e,Gu,0,-1,1),Vu("cf4",t,e,Gu,0,1,1),Vu("cn1",t,e,Gu,-1,0,-1),Vu("cn2",t,e,Gu,1,0,-1),Vu("cn3",t,e,Gu,0,-1,-1),Vu("cn4",t,e,Gu,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}},e.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been removed")},e.CanvasTexture=pl,e.CapsuleBufferGeometry=Fl,e.CapsuleGeometry=Fl,e.CatmullRomCurve3=bl,e.CineonToneMapping=3,e.CircleBufferGeometry=Bl,e.CircleGeometry=Bl,e.ClampToEdgeWrapping=W,e.Clock=jc,e.Color=x,e.ColorKeyframeTrack=qh,e.ColorManagement=Vt,e.CompressedTexture=dl,e.CompressedTextureLoader=class extends nc{constructor(e){super(e)}load(r,i,n,a){const s=this,o=[],l=new dl,h=new ac(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(s.withCredentials);let c=0;if(Array.isArray(r))for(let e=0,t=r.length;e<t;++e)!function(t){h.load(r[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},6===(c+=1)&&(1===e.mipmapCount&&(l.minFilter=Ue),l.image=o,l.format=e.format,l.needsUpdate=!0,i&&i(l))},n,a)}(e);else h.load(r,function(e){var r=s.parse(e,!0);if(r.isCubemap){var n=r.mipmaps.length/r.mipmapCount;for(let t=0;t<n;t++){o[t]={mipmaps:[]};for(let e=0;e<r.mipmapCount;e++)o[t].mipmaps.push(r.mipmaps[t*r.mipmapCount+e]),o[t].format=r.format,o[t].width=r.width,o[t].height=r.height}l.image=o}else l.image.width=r.width,l.image.height=r.height,l.mipmaps=r.mipmaps;1===r.mipmapCount&&(l.minFilter=Ue),l.format=r.format,l.needsUpdate=!0,i&&i(l)},n,a);return l}},e.ConeBufferGeometry=zl,e.ConeGeometry=zl,e.CubeCamera=fi,e.CubeReflectionMapping=w,e.CubeRefractionMapping=E,e.CubeTexture=gi,e.CubeTextureLoader=oc,e.CubeUVReflectionMapping=U,e.CubicBezierCurve=Tl,e.CubicBezierCurve3=Al,e.CubicInterpolant=Vh,e.CullFaceBack=Y,e.CullFaceFront=J,e.CullFaceFrontBack=3,e.CullFaceNone=q,e.Curve=ml,e.CurvePath=Nl,e.CustomBlending=te,e.CustomToneMapping=5,e.CylinderBufferGeometry=Hl,e.CylinderGeometry=Hl,e.Cylindrical=class{constructor(e=1,t=0,r=0){return this.radius=e,this.theta=t,this.y=r,this}set(e,t,r){return this.radius=e,this.theta=t,this.y=r,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+r*r),this.theta=Math.atan2(e,r),this.y=t,this}clone(){return(new this.constructor).copy(this)}},e.Data3DTexture=ar,e.DataArrayTexture=nr,e.DataTexture=Oo,e.DataTexture2DArray=pd,e.DataTexture3D=class extends ar{constructor(e,t,r,n){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,r,n)}},e.DataTextureLoader=lc,e.DataUtils=class{static toHalfFloat(e){65504<Math.abs(e)&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=At(e,-65504,65504),Zu[0]=e;var e=Ku[0],t=e>>23&511;return Qu[t]+((8388607&e)>>$u[t])}static fromHalfFloat(e){var t=e>>10;return Ku[0]=td[nd[t]+(1023&e)]+rd[t],Zu[0]}},e.DecrementStencilOp=7683,e.DecrementWrapStencilOp=34056,e.DefaultLoadingManager=rc,e.DepthFormat=je,e.DepthStencilFormat=Xe,e.DepthTexture=Qs,e.DirectionalLight=Ec,e.DirectionalLightHelper=Hu,e.DiscreteInterpolant=Wh,e.DodecahedronBufferGeometry=Vl,e.DodecahedronGeometry=Vl,e.DoubleSide=Ie,e.DstAlphaFactor=pe,e.DstColorFactor=fe,e.DynamicBufferAttribute=ad,e.DynamicCopyUsage=35050,e.DynamicDrawUsage=yt,e.DynamicReadUsage=35049,e.EdgesGeometry=ql,e.EdgesHelper=class extends tl{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new ql(e.geometry),new Xo({color:void 0!==t?t:16777215}))}},e.EllipseCurve=fl,e.EqualDepth=be,e.EqualStencilFunc=514,e.EquirectangularReflectionMapping=l,e.EquirectangularRefractionMapping=h,e.Euler=Yr,e.EventDispatcher=Mt,e.ExtrudeBufferGeometry=fh,e.ExtrudeGeometry=fh,e.FaceColors=1,e.FileLoader=ac,e.FlatShading=1,e.Float16BufferAttribute=Nn,e.Float32Attribute=ld,e.Float32BufferAttribute=V,e.Float64Attribute=class extends Un{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(e,t)}},e.Float64BufferAttribute=Un,e.FloatType=Ge,e.Fog=io,e.FogExp2=no,e.Font=function(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")},e.FontLoader=function(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")},e.FramebufferTexture=ul,e.FrontSide=Pe,e.Frustum=Ei,e.GLBufferAttribute=gu,e.GLSL1="100",e.GLSL3=_t,e.GreaterDepth=Ee,e.GreaterEqualDepth=we,e.GreaterEqualStencilFunc=518,e.GreaterStencilFunc=516,e.GridHelper=Uu,e.Group=Js,e.HalfFloatType=Ve,e.HemisphereLight=uc,e.HemisphereLightHelper=Nu,e.HemisphereLightProbe=zc,e.IcosahedronBufferGeometry=vh,e.IcosahedronGeometry=vh,e.ImageBitmapLoader=Oc,e.ImageLoader=sc,e.ImageUtils=Zt,e.ImmediateRenderObject=function(){console.error("THREE.ImmediateRenderObject has been removed.")},e.IncrementStencilOp=7682,e.IncrementWrapStencilOp=34055,e.InstancedBufferAttribute=zo,e.InstancedBufferGeometry=Pc,e.InstancedInterleavedBuffer=fu,e.InstancedMesh=jo,e.Int16Attribute=class extends Ln{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(e,t)}},e.Int16BufferAttribute=Ln,e.Int32Attribute=class extends Dn{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(e,t)}},e.Int32BufferAttribute=Dn,e.Int8Attribute=class extends An{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(e,t)}},e.Int8BufferAttribute=An,e.IntType=c,e.InterleavedBuffer=so,e.InterleavedBufferAttribute=lo,e.Interpolant=Gh,e.InterpolateDiscrete=n,e.InterpolateLinear=i,e.InterpolateSmooth=2302,e.InvertStencilOp=5386,e.JSONLoader=function(){console.error("THREE.JSONLoader has been removed.")},e.KeepStencilOp=7680,e.KeyframeTrack=jh,e.LOD=Ro,e.LatheBufferGeometry=Ol,e.LatheGeometry=Ol,e.Layers=Jr,e.LensFlare=function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},e.LessDepth=xe,e.LessEqualDepth=Me,e.LessEqualStencilFunc=515,e.LessStencilFunc=513,e.Light=cc,e.LightProbe=Rc,e.Line=Qo,e.Line3=wu,e.LineBasicMaterial=Xo,e.LineCurve=Rl,e.LineCurve3=Cl,e.LineDashedMaterial=Bh,e.LineLoop=rl,e.LinePieces=1,e.LineSegments=tl,e.LineStrip=0,e.LinearEncoding=dt,e.LinearFilter=Ue,e.LinearInterpolant=kh,e.LinearMipMapLinearFilter=1008,e.LinearMipMapNearestFilter=1007,e.LinearMipmapLinearFilter=Fe,e.LinearMipmapNearestFilter=Oe,e.LinearSRGBColorSpace=vt,e.LinearToneMapping=1,e.Loader=nc,e.LoaderUtils=Lc,e.LoadingManager=tc,e.LoopOnce=2200,e.LoopPingPong=2202,e.LoopRepeat=2201,e.LuminanceAlphaFormat=g,e.LuminanceFormat=f,e.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},e.Material=bn,e.MaterialLoader=Cc,e.Math=It,e.MathUtils=It,e.Matrix3=Nt,e.Matrix4=Le,e.MaxEquation=se,e.Mesh=si,e.MeshBasicMaterial=wn,e.MeshDepthMaterial=zs,e.MeshDistanceMaterial=Gs,e.MeshFaceMaterial=function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},e.MeshLambertMaterial=Oh,e.MeshMatcapMaterial=Fh,e.MeshNormalMaterial=Uh,e.MeshPhongMaterial=Ih,e.MeshPhysicalMaterial=Dh,e.MeshStandardMaterial=Ph,e.MeshToonMaterial=Nh,e.MinEquation=ae,e.MirroredRepeatWrapping=j,e.MixOperation=1,e.MultiMaterial=function(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e},e.MultiplyBlending=ee,e.MultiplyOperation=0,e.NearestFilter=X,e.NearestMipMapLinearFilter=1005,e.NearestMipMapNearestFilter=1004,e.NearestMipmapLinearFilter=Ae,e.NearestMipmapNearestFilter=Te,e.NeverDepth=ye,e.NeverStencilFunc=512,e.NoBlending=Z,e.NoColorSpace="",e.NoColors=0,e.NoToneMapping=Ne,e.NormalAnimationBlendMode=2500,e.NormalBlending=K,e.NotEqualDepth=Se,e.NotEqualStencilFunc=517,e.NumberKeyframeTrack=Yh,e.Object3D=M,e.ObjectLoader=class extends nc{constructor(e){super(e)}load(n,i,e,a){const s=this;var t=""===this.path?Lc.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||t;const r=new ac(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials),r.load(n,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==a&&a(e),void console.error("THREE:ObjectLoader: Can't parse "+n+".",e.message)}const r=t.metadata;void 0!==r&&void 0!==r.type&&"geometry"!==r.type.toLowerCase()?s.parse(t,i):console.error("THREE.ObjectLoader: Can't load "+n)},e,a)}async loadAsync(e,t){var r=""===this.path?Lc.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||r;const n=new ac(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials);r=await n.loadAsync(e,t),t=JSON.parse(r);const i=t.metadata;if(void 0===i||void 0===i.type||"geometry"===i.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+e);return this.parseAsync(t)}parse(e,t){var r=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),n=this.parseGeometries(e.geometries,n),i=this.parseImages(e.images,function(){void 0!==t&&t(o)}),a=this.parseTextures(e.textures,i),s=this.parseMaterials(e.materials,a);const o=this.parseObject(e.object,n,s,a,r);n=this.parseSkeletons(e.skeletons,o);if(this.bindSkeletons(o,n),void 0!==t){let e=!1;for(const l in i)if(i[l]instanceof HTMLImageElement){e=!0;break}!1===e&&t(o)}return o}async parseAsync(e){var t=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,r),n=await this.parseImagesAsync(e.images),n=this.parseTextures(e.textures,n),i=this.parseMaterials(e.materials,n),r=this.parseObject(e.object,r,i,n,t),i=this.parseSkeletons(e.skeletons,r);return this.bindSkeletons(r,i),r}parseShapes(r){const n={};if(void 0!==r)for(let e=0,t=r.length;e<t;e++){var i=(new Yl).fromJSON(r[e]);n[i.uuid]=i}return n}parseSkeletons(r,e){const n={},i={};if(e.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==r)for(let e=0,t=r.length;e<t;e++){var a=(new Ho).fromJSON(r[e],i);n[a.uuid]=a}return n}parseGeometries(r,n){const i={};if(void 0!==r){const s=new Dc;for(let t=0,e=r.length;t<e;t++){let e;var a=r[t];switch(a.type){case"BufferGeometry":case"InstancedBufferGeometry":e=s.parse(a);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:a.type in Rh?e=Rh[a.type].fromJSON(a,n):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${a.type}"`)}e.uuid=a.uuid,void 0!==a.name&&(e.name=a.name),!0===e.isBufferGeometry&&void 0!==a.userData&&(e.userData=a.userData),i[a.uuid]=e}}return i}parseMaterials(r,e){const n={},i={};if(void 0!==r){const o=new Cc;o.setTextures(e);for(let e=0,t=r.length;e<t;e++){var a=r[e];if("MultiMaterial"===a.type){const l=[];for(let e=0;e<a.materials.length;e++){var s=a.materials[e];void 0===n[s.uuid]&&(n[s.uuid]=o.parse(s)),l.push(n[s.uuid])}i[a.uuid]=l}else void 0===n[a.uuid]&&(n[a.uuid]=o.parse(a)),i[a.uuid]=n[a.uuid]}}return i}parseAnimations(t){const r={};if(void 0!==t)for(let e=0;e<t.length;e++){var n=t[e],n=$h.parse(n);r[n.uuid]=n}return r}parseImages(r,e){const n=this,i={};let a;function s(e){var t,r;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:n.resourcePath+t,r=t,n.manager.itemStart(r),a.load(r,function(){n.manager.itemEnd(r)},void 0,function(){n.manager.itemError(r),n.manager.itemEnd(r)})):e.data?{data:Ft(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==r&&0<r.length){e=new tc(e);(a=new sc(e)).setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){const c=[];for(let e=0,t=l.length;e<t;e++){var h=s(l[e]);null!==h&&(h instanceof HTMLImageElement?c.push(h):c.push(new Oo(h.data,h.width,h.height)))}i[o.uuid]=new Kt(c)}else{var u=s(o.url);i[o.uuid]=new Kt(u)}}}return i}async parseImagesAsync(r){const n=this,i={};let a;async function s(e){var t;return"string"==typeof e?(t=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t=e)?t:n.resourcePath+t,a.loadAsync(t)):e.data?{data:Ft(e.type,e.data),width:e.width,height:e.height}:null}if(void 0!==r&&0<r.length){(a=new sc(this.manager)).setCrossOrigin(this.crossOrigin);for(let e=0,t=r.length;e<t;e++){var o=r[e],l=o.url;if(Array.isArray(l)){const u=[];for(let e=0,t=l.length;e<t;e++){var h=await s(l[e]);null!==h&&(h instanceof HTMLImageElement?u.push(h):u.push(new Oo(h.data,h.width,h.height)))}i[o.uuid]=new Kt(u)}else{var c=await s(o.url);i[o.uuid]=new Kt(c)}}}return i}parseTextures(r,n){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const a={};if(void 0!==r)for(let t=0,e=r.length;t<e;t++){var s=r[t],o=(void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===n[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image),n[s.image]),l=o.data;let e;Array.isArray(l)?(e=new gi,6===l.length&&(e.needsUpdate=!0)):(e=new(l&&l.data?Oo:er),l&&(e.needsUpdate=!0)),e.source=o,e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=i(s.mapping,Ic)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=i(s.wrap[0],Nc),e.wrapT=i(s.wrap[1],Nc)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=i(s.minFilter,Uc)),void 0!==s.magFilter&&(e.magFilter=i(s.magFilter,Uc)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),void 0!==s.userData&&(e.userData=s.userData),a[s.uuid]=e}return a}parseObject(e,t,a,r,c){let n;function i(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function s(r){if(void 0!==r){if(Array.isArray(r)){const i=[];for(let e=0,t=r.length;e<t;e++){var n=r[e];void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),i.push(a[n])}return i}return void 0===a[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),a[r]}}function u(e){return void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined texture",e),r[e]}let o,l;switch(e.type){case"Scene":n=new ao,void 0!==e.background&&(Number.isInteger(e.background)?n.background=new x(e.background):n.background=u(e.background)),void 0!==e.environment&&(n.environment=u(e.environment)),void 0!==e.fog&&("Fog"===e.fog.type?n.fog=new io(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(n.fog=new no(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":n=new mi(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(n.focus=e.focus),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.filmGauge&&(n.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(n.filmOffset=e.filmOffset),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"OrthographicCamera":n=new Ui(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(n.zoom=e.zoom),void 0!==e.view&&(n.view=Object.assign({},e.view));break;case"AmbientLight":n=new Sc(e.color,e.intensity);break;case"DirectionalLight":n=new Ec(e.color,e.intensity);break;case"PointLight":n=new bc(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":n=new Tc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":n=new vc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":n=new uc(e.color,e.groundColor,e.intensity);break;case"LightProbe":n=(new Rc).fromJSON(e);break;case"SkinnedMesh":o=i(e.geometry),l=s(e.material),n=new No(o,l),void 0!==e.bindMode&&(n.bindMode=e.bindMode),void 0!==e.bindMatrix&&n.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(n.skeleton=e.skeleton);break;case"Mesh":o=i(e.geometry),l=s(e.material),n=new si(o,l);break;case"InstancedMesh":o=i(e.geometry),l=s(e.material);var d=e.count,p=e.instanceMatrix,h=e.instanceColor;(n=new jo(o,l,d)).instanceMatrix=new zo(new Float32Array(p.array),16),void 0!==h&&(n.instanceColor=new zo(new Float32Array(h.array),h.itemSize));break;case"LOD":n=new Ro;break;case"Line":n=new Qo(i(e.geometry),s(e.material));break;case"LineLoop":n=new rl(i(e.geometry),s(e.material));break;case"LineSegments":n=new tl(i(e.geometry),s(e.material));break;case"PointCloud":case"Points":n=new ll(i(e.geometry),s(e.material));break;case"Sprite":n=new Eo(s(e.material));break;case"Group":n=new Js;break;case"Bone":n=new Uo;break;default:n=new M}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(n.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(n.matrixAutoUpdate=e.matrixAutoUpdate),n.matrixAutoUpdate&&n.matrix.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.quaternion&&n.quaternion.fromArray(e.quaternion),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(n.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(n.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(n.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&n.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(n.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.frustumCulled&&(n.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(n.renderOrder=e.renderOrder),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.layers&&(n.layers.mask=e.layers),void 0!==e.children){var m=e.children;for(let e=0;e<m.length;e++)n.add(this.parseObject(m[e],t,a,r,c))}if(void 0!==e.animations){var f=e.animations;for(let e=0;e<f.length;e++){var g=f[e];n.animations.push(c[g])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(n.autoUpdate=e.autoUpdate);var v=e.levels;for(let e=0;e<v.length;e++){var y=v[e],_=n.getObjectByProperty("uuid",y.object);void 0!==_&&n.addLevel(_,y.distance)}}return n}bindSkeletons(e,r){0!==Object.keys(r).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=r[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}},e.ObjectSpaceNormalMap=ft,e.OctahedronBufferGeometry=yh,e.OctahedronGeometry=yh,e.OneFactor=le,e.OneMinusDstAlphaFactor=me,e.OneMinusDstColorFactor=ge,e.OneMinusSrcAlphaFactor=de,e.OneMinusSrcColorFactor=ce,e.OrthographicCamera=Ui,e.PCFShadowMap=A,e.PCFSoftShadowMap=2,e.PMREMGenerator=ki,e.ParametricGeometry=cd,e.Particle=class extends Eo{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(e)}},e.ParticleBasicMaterial=class extends nl{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(e)}},e.ParticleSystem=class extends ll{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(e,t)}},e.ParticleSystemMaterial=class extends nl{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(e)}},e.Path=Ul,e.PerspectiveCamera=mi,e.Plane=Mi,e.PlaneBufferGeometry=Ai,e.PlaneGeometry=Ai,e.PlaneHelper=class extends Qo{constructor(e,t=1,r=16776960){const n=new T;n.setAttribute("position",new V([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),n.computeBoundingSphere(),super(n,new Xo({color:r,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const i=new T;i.setAttribute("position",new V([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new si(i,new wn({color:r,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?De:Pe,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}},e.PointCloud=class extends ll{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(e,t)}},e.PointCloudMaterial=class extends nl{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(e)}},e.PointLight=bc,e.PointLightHelper=Lu,e.Points=ll,e.PointsMaterial=nl,e.PolarGridHelper=class extends tl{constructor(t=10,u=16,d=8,r=64,n=4473924,i=8947848){n=new x(n),i=new x(i);const a=[],s=[];for(let e=0;e<=u;e++){var p=e/u*(2*Math.PI),o=Math.sin(p)*t,p=Math.cos(p)*t,o=(a.push(0,0,0),a.push(o,0,p),1&e?n:i);s.push(o.r,o.g,o.b),s.push(o.r,o.g,o.b)}for(let e=0;e<=d;e++){var l=1&e?n:i,h=t-t/d*e;for(let e=0;e<r;e++){var c=e/r*(2*Math.PI),m=Math.sin(c)*h,f=Math.cos(c)*h;a.push(m,0,f),s.push(l.r,l.g,l.b),c=(e+1)/r*(2*Math.PI),m=Math.sin(c)*h,f=Math.cos(c)*h,a.push(m,0,f),s.push(l.r,l.g,l.b)}}const e=new T;e.setAttribute("position",new V(a,3)),e.setAttribute("color",new V(s,3));var g=new Xo({vertexColors:!0,toneMapped:!1});super(e,g),this.type="PolarGridHelper"}},e.PolyhedronBufferGeometry=Gl,e.PolyhedronGeometry=Gl,e.PositionalAudio=class extends Qc{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,r){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=r,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose($c,eu,tu),ru.set(0,0,1).applyQuaternion(eu);const t=this.panner;t.positionX?(e=this.context.currentTime+this.listener.timeDelta,t.positionX.linearRampToValueAtTime($c.x,e),t.positionY.linearRampToValueAtTime($c.y,e),t.positionZ.linearRampToValueAtTime($c.z,e),t.orientationX.linearRampToValueAtTime(ru.x,e),t.orientationY.linearRampToValueAtTime(ru.y,e),t.orientationZ.linearRampToValueAtTime(ru.z,e)):(t.setPosition($c.x,$c.y,$c.z),t.setOrientation(ru.x,ru.y,ru.z))}}},e.PropertyBinding=cu,e.PropertyMixer=iu,e.QuadraticBezierCurve=Ll,e.QuadraticBezierCurve3=Pl,e.Quaternion=lr,e.QuaternionKeyframeTrack=Zh,e.QuaternionLinearInterpolant=Jh,e.REVISION=t,e.RGBADepthPacking=r,e.RGBAFormat=We,e.RGBAIntegerFormat=C,e.RGBA_ASTC_10x10_Format=at,e.RGBA_ASTC_10x5_Format=rt,e.RGBA_ASTC_10x6_Format=nt,e.RGBA_ASTC_10x8_Format=it,e.RGBA_ASTC_12x10_Format=st,e.RGBA_ASTC_12x12_Format=ot,e.RGBA_ASTC_4x4_Format=Ye,e.RGBA_ASTC_5x4_Format=Je,e.RGBA_ASTC_5x5_Format=Ze,e.RGBA_ASTC_6x5_Format=Ke,e.RGBA_ASTC_6x6_Format=Qe,e.RGBA_ASTC_8x5_Format=$e,e.RGBA_ASTC_8x6_Format=et,e.RGBA_ASTC_8x8_Format=tt,e.RGBA_BPTC_Format=lt,e.RGBA_ETC2_EAC_Format=qe,e.RGBA_PVRTC_2BPPV1_Format=H,e.RGBA_PVRTC_4BPPV1_Format=B,e.RGBA_S3TC_DXT1_Format=P,e.RGBA_S3TC_DXT3_Format=D,e.RGBA_S3TC_DXT5_Format=I,e.RGBFormat=m,e.RGB_ETC1_Format=z,e.RGB_ETC2_Format=G,e.RGB_PVRTC_2BPPV1_Format=F,e.RGB_PVRTC_4BPPV1_Format=O,e.RGB_S3TC_DXT1_Format=L,e.RGFormat=_,e.RGIntegerFormat=S,e.RawShaderMaterial=Lh,e.Ray=Br,e.Raycaster=class{constructor(e,t,r=0,n=1/0){this.ray=new Br(e,t),this.near=r,this.far=n,this.camera=null,this.layers=new Jr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,r=[]){return yu(e,this,r,t),r.sort(vu),r}intersectObjects(r,n=!0,i=[]){for(let e=0,t=r.length;e<t;e++)yu(r[e],this,i,n);return i.sort(vu),i}},e.RectAreaLight=Tc,e.RedFormat=v,e.RedIntegerFormat=y,e.ReinhardToneMapping=2,e.RepeatWrapping=k,e.ReplaceStencilOp=7681,e.ReverseSubtractEquation=ie,e.RingBufferGeometry=_h,e.RingGeometry=_h,e.SRGBColorSpace=gt,e.Scene=ao,e.SceneUtils=zi,e.ShaderChunk=b,e.ShaderLib=Ri,e.ShaderMaterial=di,e.ShadowMaterial=Ch,e.Shape=Yl,e.ShapeBufferGeometry=xh,e.ShapeGeometry=xh,e.ShapePath=class{constructor(){this.type="ShapePath",this.color=new x,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Ul,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,r,n){return this.currentPath.quadraticCurveTo(e,t,r,n),this}bezierCurveTo(e,t,r,n,i,a){return this.currentPath.bezierCurveTo(e,t,r,n,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(u,e){function d(r){const n=[];for(let e=0,t=r.length;e<t;e++){var i=r[e];const a=new Yl;a.curves=i.curves,n.push(a)}return n}const p=dh.isClockWise,r=this.subPaths;if(0===r.length)return[];if(!0===e)return d(r);let n,i,a;const t=[];if(1===r.length)return i=r[0],(a=new Yl).curves=i.curves,t.push(a),t;let s=!p(r[0].getPoints());s=u?!s:s;const o=[],l=[];let h=[],c=0;var m,f;l[c]=void 0,h[c]=[];for(let e=0,t=r.length;e<t;e++)m=(i=r[e]).getPoints(),n=p(m),(n=u?!n:n)?(!s&&l[c]&&c++,l[c]={s:new Yl,p:m},l[c].s.curves=i.curves,s&&c++,h[c]=[]):h[c].push({h:i,p:m[0]});if(!l[0])return d(r);if(1<l.length){let n=!1,i=0;for(let e=0,t=l.length;e<t;e++)o[e]=[];for(let r=0,e=l.length;r<e;r++){var g=h[r];for(let e=0;e<g.length;e++){var v=g[e];let t=!0;for(let e=0;e<l.length;e++)!function(s,o){var e=o.length;let l=!1;for(let i=e-1,a=0;a<e;i=a++){let e=o[i],t=o[a],r=t.x-e.x,n=t.y-e.y;if(Math.abs(n)>Number.EPSILON){if(n<0&&(e=o[a],r=-r,t=o[i],n=-n),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var h=n*(s.x-e.x)-r*(s.y-e.y);if(0==h)return 1;h<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(v.p,l[e].p)||(r!==e&&i++,t?(t=!1,o[e].push(v)):n=!0);t&&o[r].push(v)}}0<i&&!1===n&&(h=o)}for(let r=0,e=l.length;r<e;r++){a=l[r].s,t.push(a);for(let e=0,t=(f=h[r]).length;e<t;e++)a.holes.push(f[e].h)}return t}},e.ShapeUtils=dh,e.ShortType=o,e.Skeleton=Ho,e.SkeletonHelper=Cu,e.SkinnedMesh=No,e.SmoothShading=2,e.Source=Kt,e.Sphere=Lr,e.SphereBufferGeometry=Mh,e.SphereGeometry=Mh,e.Spherical=class{constructor(e=1,t=0,r=0){return this.radius=e,this.phi=t,this.theta=r,this}set(e,t,r){return this.radius=e,this.phi=t,this.theta=r,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,r){return this.radius=Math.sqrt(e*e+t*t+r*r),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,r),this.phi=Math.acos(At(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}},e.SphericalHarmonics3=Ac,e.SplineCurve=Dl,e.SpotLight=vc,e.SpotLightHelper=Su,e.Sprite=Eo,e.SpriteMaterial=ho,e.SrcAlphaFactor=ue,e.SrcAlphaSaturateFactor=ve,e.SrcColorFactor=he,e.StaticCopyUsage=35046,e.StaticDrawUsage=a,e.StaticReadUsage=35045,e.StereoCamera=class{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new mi,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new mi,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;var r,n,i,a;t.focus===e.focus&&t.fov===e.fov&&t.aspect===e.aspect*this.aspect&&t.near===e.near&&t.far===e.far&&t.zoom===e.zoom&&t.eyeSep===this.eyeSep||(t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Wc.copy(e.projectionMatrix),r=(i=t.eyeSep/2)*t.near/t.focus,n=t.near*Math.tan(Et*t.fov*.5)/t.zoom,kc.elements[12]=-i,Vc.elements[12]=i,i=-n*t.aspect+r,a=n*t.aspect+r,Wc.elements[0]=2*t.near/(a-i),Wc.elements[8]=(a+i)/(a-i),this.cameraL.projectionMatrix.copy(Wc),i=-n*t.aspect-r,a=n*t.aspect-r,Wc.elements[0]=2*t.near/(a-i),Wc.elements[8]=(a+i)/(a-i),this.cameraR.projectionMatrix.copy(Wc)),this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(kc),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Vc)}},e.StreamCopyUsage=35042,e.StreamDrawUsage=35040,e.StreamReadUsage=35041,e.StringKeyframeTrack=Kh,e.SubtractEquation=ne,e.SubtractiveBlending=$,e.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},e.TangentSpaceNormalMap=mt,e.TetrahedronBufferGeometry=bh,e.TetrahedronGeometry=bh,e.TextGeometry=ud,e.Texture=er,e.TextureLoader=hc,e.TorusBufferGeometry=wh,e.TorusGeometry=wh,e.TorusKnotBufferGeometry=Eh,e.TorusKnotGeometry=Eh,e.Triangle=xn,e.TriangleFanDrawMode=2,e.TriangleStripDrawMode=1,e.TrianglesDrawMode=0,e.TubeBufferGeometry=Sh,e.TubeGeometry=Sh,e.UVMapping=300,e.Uint16Attribute=sd,e.Uint16BufferAttribute=Pn,e.Uint32Attribute=od,e.Uint32BufferAttribute=In,e.Uint8Attribute=class extends Rn{constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(e,t)}},e.Uint8BufferAttribute=Rn,e.Uint8ClampedAttribute=class extends Cn{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(e,t)}},e.Uint8ClampedBufferAttribute=Cn,e.Uniform=mu,e.UniformsLib=N,e.UniformsUtils=ui,e.UnsignedByteType=Be,e.UnsignedInt248Type=ke,e.UnsignedIntType=ze,e.UnsignedShort4444Type=u,e.UnsignedShort5551Type=d,e.UnsignedShortType=He,e.VSMShadowMap=R,e.Vector2=Re,e.Vector3=Ce,e.Vector4=tr,e.VectorKeyframeTrack=Qh,e.Vertex=id,e.VertexColors=2,e.VideoTexture=cl,e.WebGL1Renderer=ro,e.WebGL3DRenderTarget=sr,e.WebGLArrayRenderTarget=ir,e.WebGLCubeRenderTarget=vi,e.WebGLMultipleRenderTargets=or,e.WebGLMultisampleRenderTarget=dd,e.WebGLRenderTarget=rr,e.WebGLRenderTargetCube=hd,e.WebGLRenderer=to,e.WebGLUtils=qs,e.WireframeGeometry=Th,e.WireframeHelper=class extends tl{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new Th(e.geometry),new Xo({color:void 0!==t?t:16777215}))}},e.WrapAroundEnding=ut,e.XHRLoader=class extends ac{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(e)}},e.ZeroCurvatureEnding=ht,e.ZeroFactor=oe,e.ZeroSlopeEnding=ct,e.ZeroStencilOp=0,e._SRGBAFormat=xt,e.sRGBEncoding=pt,Object.defineProperty(e,"__esModule",{value:!0})});